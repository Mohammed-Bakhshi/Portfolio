{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Moham\\\\Downloads\\\\Github projects\\\\Digital-Portfolio-main\\\\Frontend\\\\src\\\\GaugeChartComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport GaugeChart from \"react-gauge-chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomGauge = () => {\n  _s();\n  const [percent, setPercent] = useState(0); // Initial percentage is 0\n\n  useEffect(() => {\n    // Simulate the gauge filling up over time\n    const interval = setInterval(() => {\n      setPercent(prevPercent => {\n        if (prevPercent < 0.6) {\n          return Math.min(prevPercent + 0.01, 0.6); // Increment the percentage\n        } else {\n          clearInterval(interval); // Stop when the desired percentage is reached\n          return prevPercent;\n        }\n      });\n    }, 50); // Adjust the speed of the filling (in milliseconds)\n\n    return () => clearInterval(interval); // Cleanup interval when component unmounts\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      margin: \"30px 0\",\n      padding: \"20px\",\n      background: \"rgba(0, 0, 0, 0.2)\",\n      // Subtle background to match the theme\n      borderRadius: \"12px\",\n      boxShadow: \"0 8px 20px rgba(0, 0, 0, 0.3)\",\n      backdropFilter: \"blur(10px)\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(GaugeChart, {\n        id: \"gauge-chart-example\",\n        nrOfLevels: 100 // Number of levels or segments in the chart\n        ,\n        arcsLength: [0.6, 0.4] // Proportion of each segment\n        ,\n        colors: [\"#00D9A1\", \"#2D3748\"] // Colors of the segments\n        ,\n        percent: percent // Dynamic percentage value\n        ,\n        arcPadding: 0.02 // Padding between arcs\n        ,\n        textColor: \"#FFFFFF\" // Text color\n        ,\n        style: {\n          width: \"250px\",\n          height: \"250px\",\n          borderRadius: \"50%\"\n        } // Chart width\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n          fontSize: \"1.5rem\",\n          fontWeight: \"bold\",\n          color: \"#FFFFFF\",\n          textShadow: \"2px 2px 10px rgba(0, 0, 0, 0.7)\" // Subtle shadow for better visibility\n        },\n        children: [Math.round(percent * 100), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: \"10px\",\n        fontWeight: \"bold\",\n        color: \"#00D9A1\",\n        // Consistent with the rest of the design\n        textTransform: \"uppercase\"\n      },\n      children: \"Opportunities\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomGauge, \"qy9k8hlTw0Z7eTBIkMCkGk+elf8=\");\n_c = CustomGauge;\nexport default CustomGauge;\nvar _c;\n$RefreshReg$(_c, \"CustomGauge\");","map":{"version":3,"names":["React","useState","useEffect","GaugeChart","jsxDEV","_jsxDEV","CustomGauge","_s","percent","setPercent","interval","setInterval","prevPercent","Math","min","clearInterval","style","display","justifyContent","alignItems","margin","padding","background","borderRadius","boxShadow","backdropFilter","children","position","id","nrOfLevels","arcsLength","colors","arcPadding","textColor","width","height","fileName","_jsxFileName","lineNumber","columnNumber","top","left","transform","fontSize","fontWeight","color","textShadow","round","marginTop","textTransform","_c","$RefreshReg$"],"sources":["C:/Users/Moham/Downloads/Github projects/Digital-Portfolio-main/Frontend/src/GaugeChartComponent.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport GaugeChart from \"react-gauge-chart\";\r\n\r\nconst CustomGauge = () => {\r\n  const [percent, setPercent] = useState(0); // Initial percentage is 0\r\n\r\n  useEffect(() => {\r\n    // Simulate the gauge filling up over time\r\n    const interval = setInterval(() => {\r\n      setPercent((prevPercent) => {\r\n        if (prevPercent < 0.6) {\r\n          return Math.min(prevPercent + 0.01, 0.6); // Increment the percentage\r\n        } else {\r\n          clearInterval(interval); // Stop when the desired percentage is reached\r\n          return prevPercent;\r\n        }\r\n      });\r\n    }, 50); // Adjust the speed of the filling (in milliseconds)\r\n\r\n    return () => clearInterval(interval); // Cleanup interval when component unmounts\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        margin: \"30px 0\",\r\n        padding: \"20px\",\r\n        background: \"rgba(0, 0, 0, 0.2)\", // Subtle background to match the theme\r\n        borderRadius: \"12px\",\r\n        boxShadow: \"0 8px 20px rgba(0, 0, 0, 0.3)\",\r\n        backdropFilter: \"blur(10px)\",\r\n      }}\r\n    >\r\n      {/* Gauge Chart */}\r\n      <div style={{ position: \"relative\" }}>\r\n        <GaugeChart\r\n          id=\"gauge-chart-example\"\r\n          nrOfLevels={100} // Number of levels or segments in the chart\r\n          arcsLength={[0.6, 0.4]} // Proportion of each segment\r\n          colors={[\"#00D9A1\", \"#2D3748\"]} // Colors of the segments\r\n          percent={percent} // Dynamic percentage value\r\n          arcPadding={0.02} // Padding between arcs\r\n          textColor=\"#FFFFFF\" // Text color\r\n          style={{ width: \"250px\", height: \"250px\", borderRadius: \"50%\" }} // Chart width\r\n        />\r\n        {/* Add text label inside the gauge */}\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            fontSize: \"1.5rem\",\r\n            fontWeight: \"bold\",\r\n            color: \"#FFFFFF\",\r\n            textShadow: \"2px 2px 10px rgba(0, 0, 0, 0.7)\", // Subtle shadow for better visibility\r\n          }}\r\n        >\r\n          {Math.round(percent * 100)}%\r\n        </div>\r\n      </div>\r\n      <p\r\n        style={{\r\n          marginTop: \"10px\",\r\n          fontWeight: \"bold\",\r\n          color: \"#00D9A1\", // Consistent with the rest of the design\r\n          textTransform: \"uppercase\",\r\n        }}\r\n      >\r\n        Opportunities\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomGauge;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { Theme } from \"../../core/Theme\";\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\nimport { Color } from \"../../core/util/Color\";\nimport { ColorSet } from \"../../core/util/ColorSet\";\nimport { setColor } from \"../../themes/DefaultTheme\";\nimport * as $time from \"../../core/util/Time\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $math from \"../../core/util/Math\";\nimport * as $object from \"../../core/util/Object\";\nimport * as $array from \"../../core/util/Array\";\n/**\r\n * @ignore\r\n */\nexport class XYChartDefaultTheme extends Theme {\n  setupDefaultRules() {\n    super.setupDefaultRules();\n    const ic = this._root.interfaceColors;\n    const language = this._root.language;\n    const r = this.rule.bind(this);\n    /**\r\n     * ========================================================================\r\n     * charts/xy\r\n     * ========================================================================\r\n     */\n    r(\"XYChart\").setAll({\n      colors: ColorSet.new(this._root, {}),\n      paddingLeft: 20,\n      paddingRight: 20,\n      paddingTop: 16,\n      paddingBottom: 16,\n      panX: false,\n      panY: false,\n      wheelStep: 0.25,\n      arrangeTooltips: true,\n      pinchZoomX: false,\n      pinchZoomY: false\n    });\n    r(\"XYSeries\").setAll({\n      legendLabelText: \"{name}\"\n    });\n    r(\"Rectangle\", [\"plotbackground\", \"xy\", \"background\"]).setAll({\n      fill: Color.fromHex(0x000000),\n      fillOpacity: 0\n    });\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * charts/xy: XYChartScrollbar\r\n     * ------------------------------------------------------------------------\r\n     */\n    r(\"XYChart\", [\"scrollbar\", \"chart\"]).setAll({\n      paddingBottom: 0,\n      paddingLeft: 0,\n      paddingTop: 0,\n      paddingRight: 0,\n      colors: ColorSet.new(this._root, {\n        saturation: 0\n      })\n    });\n    {\n      const rule = r(\"Graphics\", [\"scrollbar\", \"overlay\"]);\n      rule.setAll({\n        fillOpacity: 0.5\n      });\n      setColor(rule, \"fill\", ic, \"background\");\n    }\n    // Class: RoundedRectangle\n    r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).setAll({\n      cornerRadiusTR: 0,\n      cornerRadiusTL: 0,\n      cornerRadiusBR: 0,\n      cornerRadiusBL: 0,\n      fillOpacity: 0,\n      focusable: true\n    });\n    r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).states.create(\"hover\", {\n      fillOpacity: 0.4\n    });\n    r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\"]).setAll({\n      cornerRadiusTL: 0,\n      cornerRadiusBL: 0,\n      cornerRadiusTR: 0,\n      cornerRadiusBR: 0\n    });\n    r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\", \"resize\", \"button\"]).setAll({\n      cornerRadiusBL: 40,\n      cornerRadiusBR: 40,\n      cornerRadiusTL: 40,\n      cornerRadiusTR: 40\n    });\n    r(\"AxisRendererX\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\n      strokeOpacity: 0,\n      inside: true\n    });\n    r(\"AxisRendererY\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\n      strokeOpacity: 0,\n      inside: true,\n      minGridDistance: 5\n    });\n    r(\"AxisLabel\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\n      opacity: 0.5,\n      centerY: p100,\n      minPosition: 0.01,\n      maxPosition: 0.99,\n      fontSize: \"0.8em\"\n    });\n    r(\"AxisLabel\", [\"category\"]).setAll({\n      text: \"{category}\",\n      populateText: true\n    });\n    r(\"AxisLabel\", [\"x\"]).setAll({\n      centerY: 0\n    });\n    r(\"AxisLabel\", [\"x\", \"inside\"]).setAll({\n      centerY: p100\n    });\n    r(\"AxisLabel\", [\"x\", \"inside\", \"opposite\"]).setAll({\n      centerY: 0\n    });\n    r(\"AxisLabel\", [\"x\", \"opposite\"]).setAll({\n      centerY: p100\n    });\n    r(\"AxisLabel\", [\"y\"]).setAll({\n      centerX: p100\n    });\n    r(\"AxisLabel\", [\"y\", \"inside\"]).setAll({\n      centerX: 0\n    });\n    r(\"AxisLabel\", [\"y\", \"inside\", \"opposite\"]).setAll({\n      centerX: p100\n    });\n    r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\n      centerX: 0\n    });\n    r(\"AxisLabel\", [\"minor\"]).setAll({\n      fontSize: \"0.6em\"\n    });\n    r(\"AxisLabel\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\n      visible: false\n    });\n    // Class: Grid\n    r(\"Grid\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\n      visible: false\n    });\n    // Class: Grid\n    r(\"Grid\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\n      opacity: 0.5\n    });\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * charts/xy: Cursor\r\n     * ------------------------------------------------------------------------\r\n     */\n    r(\"XYCursor\").setAll({\n      behavior: \"none\",\n      layer: 30,\n      exportable: false,\n      snapToSeriesBy: \"xy\",\n      moveThreshold: 1\n    });\n    {\n      const rule = r(\"Grid\", [\"cursor\", \"x\"]);\n      rule.setAll({\n        forceInactive: true,\n        strokeOpacity: 0.8,\n        strokeDasharray: [2, 2],\n        role: \"slider\",\n        ariaLabel: language.translate(\"Use left and right arrows to move selection\")\n      });\n      setColor(rule, \"stroke\", ic, \"alternativeBackground\");\n    }\n    {\n      const rule = r(\"Grid\", [\"cursor\", \"y\"]);\n      rule.setAll({\n        forceInactive: true,\n        strokeOpacity: 0.8,\n        strokeDasharray: [2, 2],\n        role: \"slider\",\n        ariaLabel: language.translate(\"Use up and down arrows to move selection\")\n      });\n      setColor(rule, \"stroke\", ic, \"alternativeBackground\");\n    }\n    {\n      const rule = r(\"Graphics\", [\"cursor\", \"selection\"]);\n      rule.setAll({\n        fillOpacity: 0.15\n      });\n      setColor(rule, \"fill\", ic, \"alternativeBackground\");\n    }\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * charts/xy: Axes\r\n     * ------------------------------------------------------------------------\r\n     */\n    r(\"Axis\").setAll({\n      start: 0,\n      end: 1,\n      minZoomCount: 1,\n      maxZoomCount: Infinity,\n      maxZoomFactor: 1000,\n      maxDeviation: 0.1,\n      snapTooltip: true,\n      tooltipLocation: 0.5,\n      panX: true,\n      panY: true,\n      zoomX: true,\n      zoomY: true,\n      fixAxisSize: true\n    });\n    r(\"AxisLabel\").setAll({\n      location: 0.5,\n      multiLocation: 0,\n      centerX: p50,\n      centerY: p50,\n      paddingTop: 3,\n      paddingBottom: 3,\n      paddingLeft: 5,\n      paddingRight: 5\n    });\n    // The following is deprecated following text measuring updates in 5.0.5\n    // r(\"AxisLabel\", [\"y\"]).setAll({\n    // \ttextAlign: \"right\"\n    // });\n    // r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\n    // \ttextAlign: \"left\"\n    // });\n    r(\"Container\", [\"axis\", \"header\"]).setAll({\n      layer: 30\n    });\n    r(\"Rectangle\", [\"axis\", \"header\", \"background\"]).setAll({\n      crisp: true\n    });\n    {\n      const rule = r(\"AxisRenderer\");\n      rule.setAll({\n        crisp: true,\n        strokeOpacity: 0\n      });\n      setColor(rule, \"stroke\", ic, \"grid\");\n    }\n    r(\"AxisRendererX\").setAll({\n      minGridDistance: 120,\n      opposite: false,\n      inversed: false,\n      cellStartLocation: 0,\n      cellEndLocation: 1,\n      width: p100\n    });\n    r(\"AxisRendererY\").setAll({\n      minGridDistance: 40,\n      opposite: false,\n      inversed: false,\n      cellStartLocation: 0,\n      cellEndLocation: 1,\n      height: p100\n    });\n    {\n      const rule = r(\"Rectangle\", [\"axis\", \"thumb\"]);\n      rule.setAll({\n        fillOpacity: 0\n      });\n      setColor(rule, \"fill\", ic, \"alternativeBackground\");\n      rule.states.create(\"hover\", {\n        fillOpacity: 0.1\n      });\n    }\n    r(\"Rectangle\", [\"axis\", \"thumb\", \"x\"]).setAll({\n      cursorOverStyle: \"ew-resize\"\n    });\n    r(\"Rectangle\", [\"axis\", \"thumb\", \"y\"]).setAll({\n      cursorOverStyle: \"ns-resize\"\n    });\n    {\n      const rule = r(\"Grid\");\n      rule.setAll({\n        location: 0,\n        strokeOpacity: 0.15,\n        crisp: true\n      });\n      setColor(rule, \"stroke\", ic, \"grid\");\n    }\n    {\n      const rule = r(\"Grid\", [\"minor\"]);\n      rule.setAll({\n        location: 0,\n        strokeOpacity: 0.07,\n        crisp: true\n      });\n      setColor(rule, \"stroke\", ic, \"grid\");\n    }\n    r(\"Grid\", [\"base\"]).setAll({\n      strokeOpacity: 0.3\n    });\n    {\n      const rule = r(\"Graphics\", [\"axis\", \"fill\"]);\n      rule.setAll({\n        visible: false,\n        isMeasured: false,\n        position: \"absolute\",\n        fillOpacity: 0.05\n      });\n      setColor(rule, \"fill\", ic, \"alternativeBackground\");\n    }\n    r(\"Graphics\", [\"axis\", \"fill\", \"range\"]).setAll({\n      isMeasured: true\n    });\n    // hides all elements of series axis range\n    r(\"Graphics\", [\"series\", \"fill\", \"range\"]).setAll({\n      visible: false,\n      isMeasured: true\n    });\n    r(\"Grid\", [\"series\", \"range\"]).setAll({\n      visible: false\n    });\n    r(\"AxisTick\", [\"series\", \"range\"]).setAll({\n      visible: false\n    });\n    r(\"AxisLabel\", [\"series\", \"range\"]).setAll({\n      visible: false\n    });\n    {\n      const rule = r(\"AxisTick\");\n      rule.setAll({\n        location: 0.5,\n        multiLocation: 0,\n        strokeOpacity: 1,\n        isMeasured: false,\n        position: \"absolute\",\n        visible: false\n      });\n      setColor(rule, \"stroke\", ic, \"grid\");\n    }\n    r(\"CategoryAxis\").setAll({\n      startLocation: 0,\n      endLocation: 1,\n      fillRule: (dataItem, index) => {\n        const axisFill = dataItem.get(\"axisFill\");\n        if (axisFill) {\n          if (!$type.isNumber(index) || index % 2 == 0) {\n            axisFill.setPrivate(\"visible\", true);\n          } else {\n            axisFill.setPrivate(\"visible\", false);\n          }\n        }\n      }\n    });\n    const gridIntervals = [{\n      timeUnit: \"millisecond\",\n      count: 1\n    }, {\n      timeUnit: \"millisecond\",\n      count: 5\n    }, {\n      timeUnit: \"millisecond\",\n      count: 10\n    }, {\n      timeUnit: \"millisecond\",\n      count: 50\n    }, {\n      timeUnit: \"millisecond\",\n      count: 100\n    }, {\n      timeUnit: \"millisecond\",\n      count: 500\n    }, {\n      timeUnit: \"second\",\n      count: 1\n    }, {\n      timeUnit: \"second\",\n      count: 5\n    }, {\n      timeUnit: \"second\",\n      count: 10\n    }, {\n      timeUnit: \"second\",\n      count: 30\n    }, {\n      timeUnit: \"minute\",\n      count: 1\n    }, {\n      timeUnit: \"minute\",\n      count: 5\n    }, {\n      timeUnit: \"minute\",\n      count: 10\n    }, {\n      timeUnit: \"minute\",\n      count: 15\n    }, {\n      timeUnit: \"minute\",\n      count: 30\n    }, {\n      timeUnit: \"hour\",\n      count: 1\n    }, {\n      timeUnit: \"hour\",\n      count: 3\n    }, {\n      timeUnit: \"hour\",\n      count: 6\n    }, {\n      timeUnit: \"hour\",\n      count: 12\n    }, {\n      timeUnit: \"day\",\n      count: 1\n    }, {\n      timeUnit: \"day\",\n      count: 2\n    }, {\n      timeUnit: \"day\",\n      count: 3\n    }, {\n      timeUnit: \"day\",\n      count: 4\n    }, {\n      timeUnit: \"day\",\n      count: 5\n    }, {\n      timeUnit: \"week\",\n      count: 1\n    }, {\n      timeUnit: \"month\",\n      count: 1\n    }, {\n      timeUnit: \"month\",\n      count: 2\n    }, {\n      timeUnit: \"month\",\n      count: 3\n    }, {\n      timeUnit: \"month\",\n      count: 6\n    }, {\n      timeUnit: \"year\",\n      count: 1\n    }, {\n      timeUnit: \"year\",\n      count: 2\n    }, {\n      timeUnit: \"year\",\n      count: 5\n    }, {\n      timeUnit: \"year\",\n      count: 10\n    }, {\n      timeUnit: \"year\",\n      count: 50\n    }, {\n      timeUnit: \"year\",\n      count: 100\n    }, {\n      timeUnit: \"year\",\n      count: 200\n    }, {\n      timeUnit: \"year\",\n      count: 500\n    }, {\n      timeUnit: \"year\",\n      count: 1000\n    }, {\n      timeUnit: \"year\",\n      count: 2000\n    }, {\n      timeUnit: \"year\",\n      count: 5000\n    }, {\n      timeUnit: \"year\",\n      count: 10000\n    }, {\n      timeUnit: \"year\",\n      count: 100000\n    }];\n    const dateFormats = {\n      \"millisecond\": language.translate(\"_date_millisecond\"),\n      \"second\": language.translate(\"_date_second\"),\n      \"minute\": language.translate(\"_date_minute\"),\n      \"hour\": language.translate(\"_date_hour\"),\n      \"day\": language.translate(\"_date_day\"),\n      \"week\": language.translate(\"_date_day\"),\n      \"month\": language.translate(\"_date_month\"),\n      \"year\": language.translate(\"_date_year\")\n    };\n    const periodChangeDateFormats = {\n      \"millisecond\": language.translate(\"_date_millisecond\"),\n      \"second\": language.translate(\"_date_second\"),\n      \"minute\": language.translate(\"_date_minute\"),\n      \"hour\": language.translate(\"_date_day\"),\n      \"day\": language.translate(\"_date_day\"),\n      \"week\": language.translate(\"_date_day\"),\n      \"month\": language.translate(\"_date_month\") + \" \" + language.translate(\"_date_year\"),\n      \"year\": language.translate(\"_date_year\")\n    };\n    const tooltipDateFormats = {\n      \"millisecond\": language.translate(\"_date_millisecond_full\"),\n      \"second\": language.translate(\"_date_second_full\"),\n      \"minute\": language.translate(\"_date_minute_full\"),\n      \"hour\": language.translate(\"_date_hour_full\"),\n      \"day\": language.translate(\"_date_day_full\"),\n      \"week\": language.translate(\"_date_week_full\"),\n      \"month\": language.translate(\"_date_month_full\"),\n      \"year\": language.translate(\"_date_year\")\n    };\n    r(\"CategoryDateAxis\").setAll({\n      markUnitChange: true,\n      gridIntervals: $array.copy(gridIntervals),\n      dateFormats: $object.copy(dateFormats),\n      periodChangeDateFormats: $object.copy(periodChangeDateFormats)\n    });\n    r(\"DateAxis\").setAll({\n      maxZoomFactor: null,\n      strictMinMax: true,\n      startLocation: 0,\n      endLocation: 1,\n      markUnitChange: true,\n      groupData: false,\n      groupCount: 500,\n      gridIntervals: $array.copy(gridIntervals),\n      dateFormats: $object.copy(dateFormats),\n      periodChangeDateFormats: $object.copy(periodChangeDateFormats),\n      tooltipDateFormats: tooltipDateFormats,\n      groupIntervals: [{\n        timeUnit: \"millisecond\",\n        count: 1\n      }, {\n        timeUnit: \"millisecond\",\n        count: 10\n      }, {\n        timeUnit: \"millisecond\",\n        count: 100\n      }, {\n        timeUnit: \"second\",\n        count: 1\n      }, {\n        timeUnit: \"second\",\n        count: 10\n      }, {\n        timeUnit: \"minute\",\n        count: 1\n      }, {\n        timeUnit: \"minute\",\n        count: 10\n      }, {\n        timeUnit: \"hour\",\n        count: 1\n      }, {\n        timeUnit: \"day\",\n        count: 1\n      }, {\n        timeUnit: \"week\",\n        count: 1\n      }, {\n        timeUnit: \"month\",\n        count: 1\n      }, {\n        timeUnit: \"year\",\n        count: 1\n      }],\n      fillRule: dataItem => {\n        const axisFill = dataItem.get(\"axisFill\");\n        if (axisFill) {\n          const axis = dataItem.component;\n          const value = dataItem.get(\"value\");\n          const endValue = dataItem.get(\"endValue\");\n          const intervalDuration = axis.intervalDuration();\n          const baseInterval = axis.getPrivate(\"baseInterval\");\n          const gridInterval = axis.getPrivate(\"gridInterval\", baseInterval);\n          let min = axis.getPrivate(\"min\", 0);\n          min = $time.round(new Date(min), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n          if (value != null && endValue != null) {\n            const val = Math.round(Math.round((value - min) / intervalDuration)) / 2;\n            if (val == Math.round(val)) {\n              axisFill.setPrivate(\"visible\", true);\n            } else {\n              axisFill.setPrivate(\"visible\", false);\n            }\n          }\n        }\n      }\n    });\n    r(\"GaplessDateAxis\").setAll({\n      fillRule: dataItem => {\n        const axisFill = dataItem.get(\"axisFill\");\n        if (axisFill) {\n          const index = dataItem.get(\"index\");\n          let visible = false;\n          if (!$type.isNumber(index) || index % 2 == 0) {\n            visible = true;\n          }\n          axisFill.setPrivate(\"visible\", visible);\n        }\n      }\n    });\n    r(\"ValueAxis\").setAll({\n      baseValue: 0,\n      logarithmic: false,\n      strictMinMax: false,\n      autoZoom: true,\n      fillRule: dataItem => {\n        const axisFill = dataItem.get(\"axisFill\");\n        if (axisFill) {\n          const axis = dataItem.component;\n          const value = dataItem.get(\"value\");\n          const step = axis.getPrivate(\"step\");\n          if ($type.isNumber(value) && $type.isNumber(step)) {\n            if ($math.round(value / step / 2, 5) == Math.round(value / step / 2)) {\n              axisFill.setPrivate(\"visible\", false);\n            } else {\n              axisFill.setPrivate(\"visible\", true);\n            }\n          }\n        }\n      }\n    });\n    r(\"DurationAxis\").setAll({\n      baseUnit: \"second\"\n    });\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * charts/xy: Series\r\n     * ------------------------------------------------------------------------\r\n     */\n    r(\"XYSeries\").setAll({\n      maskBullets: true,\n      stackToNegative: true,\n      locationX: 0.5,\n      locationY: 0.5,\n      snapTooltip: false,\n      openValueXGrouped: \"open\",\n      openValueYGrouped: \"open\",\n      valueXGrouped: \"close\",\n      valueYGrouped: \"close\",\n      seriesTooltipTarget: \"series\"\n    });\n    r(\"BaseColumnSeries\").setAll({\n      adjustBulletPosition: true\n    });\n    r(\"ColumnSeries\").setAll({\n      clustered: true\n    });\n    r(\"RoundedRectangle\", [\"series\", \"column\"]).setAll({\n      position: \"absolute\",\n      isMeasured: false,\n      width: percent(70),\n      height: percent(70),\n      strokeWidth: 1,\n      strokeOpacity: 1,\n      cornerRadiusBL: 0,\n      cornerRadiusTL: 0,\n      cornerRadiusBR: 0,\n      cornerRadiusTR: 0,\n      fillOpacity: 1,\n      role: \"figure\"\n    });\n    r(\"LineSeries\").setAll({\n      connect: true,\n      autoGapCount: 1.1,\n      stackToNegative: false\n    });\n    r(\"Graphics\", [\"series\", \"stroke\"]).setAll({\n      position: \"absolute\",\n      strokeWidth: 1,\n      strokeOpacity: 1,\n      isMeasured: false\n    });\n    r(\"Graphics\", [\"series\", \"fill\"]).setAll({\n      visible: false,\n      fillOpacity: 0,\n      position: \"absolute\",\n      strokeWidth: 0,\n      strokeOpacity: 0,\n      isMeasured: false\n    });\n    r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).setAll({\n      draw: (display, sprite) => {\n        const parent = sprite.parent;\n        if (parent) {\n          const h = parent.height();\n          const w = parent.width();\n          display.moveTo(0, h / 2);\n          display.lineTo(w, h / 2);\n        }\n      }\n    });\n    {\n      const rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).states.create(\"disabled\", {});\n      setColor(rule, \"stroke\", ic, \"disabled\");\n    }\n    r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).setAll({\n      draw: (display, sprite) => {\n        const parent = sprite.parent;\n        if (parent) {\n          const h = parent.height();\n          const w = parent.width();\n          display.moveTo(0, 0);\n          display.lineTo(w, 0);\n          display.lineTo(w, h);\n          display.lineTo(0, h);\n          display.lineTo(0, 0);\n        }\n      }\n    });\n    {\n      const rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).states.create(\"disabled\", {});\n      setColor(rule, \"stroke\", ic, \"disabled\");\n    }\n    r(\"SmoothedXYLineSeries\").setAll({\n      tension: 0.5\n    });\n    r(\"SmoothedXLineSeries\").setAll({\n      tension: 0.5\n    });\n    r(\"SmoothedYLineSeries\").setAll({\n      tension: 0.5\n    });\n    r(\"Candlestick\").setAll({\n      position: \"absolute\",\n      isMeasured: false,\n      width: percent(50),\n      height: percent(50),\n      strokeWidth: 1,\n      strokeOpacity: 1,\n      cornerRadiusBL: 0,\n      cornerRadiusTL: 0,\n      cornerRadiusBR: 0,\n      cornerRadiusTR: 0,\n      fillOpacity: 1,\n      role: \"figure\"\n    });\n    r(\"OHLC\").setAll({\n      width: percent(80),\n      height: percent(80)\n    });\n    r(\"CandlestickSeries\").setAll({\n      lowValueXGrouped: \"low\",\n      lowValueYGrouped: \"low\",\n      highValueXGrouped: \"high\",\n      highValueYGrouped: \"high\",\n      openValueXGrouped: \"open\",\n      openValueYGrouped: \"open\",\n      valueXGrouped: \"close\",\n      valueYGrouped: \"close\"\n    });\n    // These rules can be used for regular columns, too\n    {\n      const rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"riseFromOpen\", {});\n      setColor(rule, \"fill\", ic, \"positive\");\n      setColor(rule, \"stroke\", ic, \"positive\");\n    }\n    {\n      const rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"dropFromOpen\", {});\n      setColor(rule, \"fill\", ic, \"negative\");\n      setColor(rule, \"stroke\", ic, \"negative\");\n    }\n    // Hollow\n    r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromOpen\", {\n      fillOpacity: 0\n    });\n    r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromOpen\", {\n      fillOpacity: 1\n    });\n    {\n      const rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromPrevious\", {});\n      setColor(rule, \"fill\", ic, \"positive\");\n      setColor(rule, \"stroke\", ic, \"positive\");\n    }\n    {\n      const rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromPrevious\", {});\n      setColor(rule, \"fill\", ic, \"negative\");\n      setColor(rule, \"stroke\", ic, \"negative\");\n    }\n    // AXIS RANGE GRIP\n    {\n      const rule = r(\"RoundedRectangle\", [\"rangegrip\"]);\n      rule.setAll({\n        strokeOpacity: 0,\n        fillOpacity: 0,\n        strokeWidth: 1,\n        width: 12,\n        height: 12\n      });\n    }\n    {\n      const rule = r(\"Graphics\", [\"rangegrip\", \"button\", \"icon\"]);\n      rule.setAll({\n        interactive: false,\n        crisp: true,\n        strokeOpacity: 0.5,\n        draw: display => {\n          display.moveTo(0, 0.5);\n          display.lineTo(0, 12.5);\n          display.moveTo(2, 0.5);\n          display.lineTo(2, 12.5);\n          display.moveTo(4, 0.5);\n          display.lineTo(4, 12.5);\n        }\n      });\n      setColor(rule, \"stroke\", ic, \"secondaryButtonText\");\n    }\n    r(\"Button\", [\"rangegrip\"]).setAll({\n      draggable: true,\n      paddingTop: 0,\n      paddingBottom: 0\n    });\n    r(\"Button\", [\"rangegrip\", \"vertical\"]).setAll({\n      rotation: 90,\n      cursorOverStyle: \"ns-resize\",\n      centerX: p50\n    });\n    r(\"Button\", [\"rangegrip\", \"horizontal\"]).setAll({\n      cursorOverStyle: \"ew-resize\",\n      centerX: p50\n    });\n    r(\"Button\", [\"rangegrip\", \"vertical\", \"left\"]).setAll({\n      centerY: p100\n    });\n    r(\"Button\", [\"rangegrip\", \"vertical\", \"right\"]).setAll({\n      centerY: 0\n    });\n    r(\"Button\", [\"rangegrip\", \"horizontal\", \"top\"]).setAll({\n      centerY: 0\n    });\n    r(\"Button\", [\"rangegrip\", \"horizontal\", \"bottom\"]).setAll({\n      centerY: p100\n    });\n  }\n}","map":{"version":3,"names":["Theme","percent","p50","p100","Color","ColorSet","setColor","$time","$type","$math","$object","$array","XYChartDefaultTheme","setupDefaultRules","ic","_root","interfaceColors","language","r","rule","bind","setAll","colors","new","paddingLeft","paddingRight","paddingTop","paddingBottom","panX","panY","wheelStep","arrangeTooltips","pinchZoomX","pinchZoomY","legendLabelText","fill","fromHex","fillOpacity","saturation","cornerRadiusTR","cornerRadiusTL","cornerRadiusBR","cornerRadiusBL","focusable","states","create","strokeOpacity","inside","minGridDistance","opacity","centerY","minPosition","maxPosition","fontSize","text","populateText","centerX","visible","behavior","layer","exportable","snapToSeriesBy","moveThreshold","forceInactive","strokeDasharray","role","ariaLabel","translate","start","end","minZoomCount","maxZoomCount","Infinity","maxZoomFactor","maxDeviation","snapTooltip","tooltipLocation","zoomX","zoomY","fixAxisSize","location","multiLocation","crisp","opposite","inversed","cellStartLocation","cellEndLocation","width","height","cursorOverStyle","isMeasured","position","startLocation","endLocation","fillRule","dataItem","index","axisFill","get","isNumber","setPrivate","gridIntervals","timeUnit","count","dateFormats","periodChangeDateFormats","tooltipDateFormats","markUnitChange","copy","strictMinMax","groupData","groupCount","groupIntervals","axis","component","value","endValue","intervalDuration","baseInterval","getPrivate","gridInterval","min","round","Date","locale","firstDayOfWeek","utc","undefined","timezone","getTime","val","Math","baseValue","logarithmic","autoZoom","step","baseUnit","maskBullets","stackToNegative","locationX","locationY","openValueXGrouped","openValueYGrouped","valueXGrouped","valueYGrouped","seriesTooltipTarget","adjustBulletPosition","clustered","strokeWidth","connect","autoGapCount","draw","display","sprite","parent","h","w","moveTo","lineTo","tension","lowValueXGrouped","lowValueYGrouped","highValueXGrouped","highValueYGrouped","interactive","draggable","rotation"],"sources":["C:\\Users\\Moham\\Downloads\\Github projects\\Digital-Portfolio-main\\Frontend\\node_modules\\src\\.internal\\charts\\xy\\XYChartDefaultTheme.ts"],"sourcesContent":["import type { ITimeInterval } from \"../../core/util/Time\";\r\nimport type { DataItem } from \"../../core/render/Component\";\r\nimport type { IValueAxisDataItem, ValueAxis } from \"./axes/ValueAxis\";\r\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\r\nimport type { DateAxis } from \"./axes/DateAxis\";\r\nimport type { ICategoryAxisDataItem } from \"./axes/CategoryAxis\";\r\nimport type { IGaplessDateAxisDataItem } from \"./axes/GaplessDateAxis\";\r\n\r\nimport { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { Color } from \"../../core/util/Color\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport * as $time from \"../../core/util/Time\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $array from \"../../core/util/Array\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class XYChartDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst language = this._root.language;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/xy\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\").setAll({\r\n\t\t\tcolors: ColorSet.new(this._root, {}),\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\tpaddingTop: 16,\r\n\t\t\tpaddingBottom: 16,\r\n\t\t\tpanX: false,\r\n\t\t\tpanY: false,\r\n\t\t\twheelStep: 0.25,\r\n\t\t\tarrangeTooltips: true,\r\n\t\t\tpinchZoomX: false,\r\n\t\t\tpinchZoomY: false\r\n\t\t});\r\n\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tlegendLabelText: \"{name}\"\r\n\t\t})\r\n\r\n\t\tr(\"Rectangle\", [\"plotbackground\", \"xy\", \"background\"]).setAll({\r\n\t\t\tfill: Color.fromHex(0x000000),\r\n\t\t\tfillOpacity: 0\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: XYChartScrollbar\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\", [\"scrollbar\", \"chart\"]).setAll({\r\n\t\t\tpaddingBottom: 0,\r\n\t\t\tpaddingLeft: 0,\r\n\t\t\tpaddingTop: 0,\r\n\t\t\tpaddingRight: 0,\r\n\t\t\tcolors: ColorSet.new(this._root, {\r\n\t\t\t\tsaturation: 0\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"scrollbar\", \"overlay\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.5\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\t// Class: RoundedRectangle\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).setAll({\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tfocusable: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).states.create(\"hover\", { fillOpacity: 0.4 });\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\"]).setAll({\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusBR: 0\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\", \"resize\", \"button\"]).setAll({\r\n\t\t\tcornerRadiusBL: 40,\r\n\t\t\tcornerRadiusBR: 40,\r\n\t\t\tcornerRadiusTL: 40,\r\n\t\t\tcornerRadiusTR: 40\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererX\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true,\r\n\t\t\tminGridDistance: 5\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5,\r\n\t\t\tcenterY: p100,\r\n\t\t\tminPosition: 0.01,\r\n\t\t\tmaxPosition: 0.99,\r\n\t\t\tfontSize: \"0.8em\"\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"category\"]).setAll({\r\n\t\t\ttext: \"{category}\",\r\n\t\t\tpopulateText: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"minor\"]).setAll({\r\n\t\t\tfontSize: \"0.6em\"\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5\r\n\t\t});\r\n\r\n\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Cursor\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYCursor\").setAll({\r\n\t\t\tbehavior: \"none\",\r\n\t\t\tlayer: 30,\r\n\t\t\texportable: false,\r\n\t\t\tsnapToSeriesBy: \"xy\",\r\n\t\t\tmoveThreshold: 1\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"x\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tforceInactive: true,\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2],\r\n\t\t\t\trole: \"slider\",\r\n\t\t\t\tariaLabel: language.translate(\"Use left and right arrows to move selection\")\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"y\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tforceInactive: true,\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2],\r\n\t\t\t\trole: \"slider\",\r\n\t\t\t\tariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"cursor\", \"selection\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Axes\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Axis\").setAll({\r\n\t\t\tstart: 0,\r\n\t\t\tend: 1,\r\n\t\t\tminZoomCount: 1,\r\n\t\t\tmaxZoomCount: Infinity,\r\n\t\t\tmaxZoomFactor: 1000,\r\n\t\t\tmaxDeviation: 0.1,\r\n\t\t\tsnapTooltip: true,\r\n\t\t\ttooltipLocation: 0.5,\r\n\t\t\tpanX: true,\r\n\t\t\tpanY: true,\r\n\t\t\tzoomX: true,\r\n\t\t\tzoomY: true,\r\n\t\t\tfixAxisSize: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\").setAll({\r\n\t\t\tlocation: 0.5,\r\n\t\t\tmultiLocation: 0,\r\n\t\t\tcenterX: p50,\r\n\t\t\tcenterY: p50,\r\n\t\t\tpaddingTop: 3,\r\n\t\t\tpaddingBottom: 3,\r\n\t\t\tpaddingLeft: 5,\r\n\t\t\tpaddingRight: 5\r\n\t\t});\r\n\r\n\t\t// The following is deprecated following text measuring updates in 5.0.5\r\n\t\t// r(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t// \ttextAlign: \"right\"\r\n\t\t// });\r\n\r\n\t\t// r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t// \ttextAlign: \"left\"\r\n\t\t// });\r\n\r\n\t\tr(\"Container\", [\"axis\", \"header\"]).setAll({\r\n\t\t\tlayer: 30\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"header\", \"background\"]).setAll({\r\n\t\t\tcrisp: true\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisRenderer\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tcrisp: true,\r\n\t\t\t\tstrokeOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"AxisRendererX\").setAll({\r\n\t\t\tminGridDistance: 120,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\twidth: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\").setAll({\r\n\t\t\tminGridDistance: 40,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\theight: p100\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"axis\", \"thumb\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\r\n\t\t\trule.states.create(\"hover\", { fillOpacity: 0.1 })\r\n\t\t}\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"x\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ew-resize\"\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"y\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ns-resize\"\r\n\t\t});\r\n\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0,\r\n\t\t\t\tstrokeOpacity: 0.15,\r\n\t\t\t\tcrisp: true\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"minor\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0,\r\n\t\t\t\tstrokeOpacity: 0.07,\r\n\t\t\t\tcrisp: true\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\r\n\t\tr(\"Grid\", [\"base\"]).setAll({\r\n\t\t\tstrokeOpacity: 0.3\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"axis\", \"fill\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tvisible: false,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tfillOpacity: 0.05,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"axis\", \"fill\", \"range\"]).setAll({\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\t// hides all elements of series axis range\r\n\t\tr(\"Graphics\", [\"series\", \"fill\", \"range\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\tr(\"Grid\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisTick\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisTick\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0.5,\r\n\t\t\t\tmultiLocation: 0,\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tvisible: false\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"CategoryAxis\").setAll({\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tfillRule: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst gridIntervals: Array<ITimeInterval> = [\r\n\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 5 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 50 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 500 },\r\n\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t{ timeUnit: \"second\", count: 5 },\r\n\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t{ timeUnit: \"second\", count: 30 },\r\n\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t{ timeUnit: \"minute\", count: 5 },\r\n\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t{ timeUnit: \"minute\", count: 15 },\r\n\t\t\t{ timeUnit: \"minute\", count: 30 },\r\n\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t{ timeUnit: \"hour\", count: 3 },\r\n\t\t\t{ timeUnit: \"hour\", count: 6 },\r\n\t\t\t{ timeUnit: \"hour\", count: 12 },\r\n\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t{ timeUnit: \"day\", count: 2 },\r\n\t\t\t{ timeUnit: \"day\", count: 3 },\r\n\t\t\t{ timeUnit: \"day\", count: 4 },\r\n\t\t\t{ timeUnit: \"day\", count: 5 },\r\n\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 2 },\r\n\t\t\t{ timeUnit: \"month\", count: 3 },\r\n\t\t\t{ timeUnit: \"month\", count: 6 },\r\n\t\t\t{ timeUnit: \"year\", count: 1 },\r\n\t\t\t{ timeUnit: \"year\", count: 2 },\r\n\t\t\t{ timeUnit: \"year\", count: 5 },\r\n\t\t\t{ timeUnit: \"year\", count: 10 },\r\n\t\t\t{ timeUnit: \"year\", count: 50 },\r\n\t\t\t{ timeUnit: \"year\", count: 100 },\r\n\t\t\t{ timeUnit: \"year\", count: 200 },\r\n\t\t\t{ timeUnit: \"year\", count: 500 },\r\n\t\t\t{ timeUnit: \"year\", count: 1000 },\r\n\t\t\t{ timeUnit: \"year\", count: 2000 },\r\n\t\t\t{ timeUnit: \"year\", count: 5000 },\r\n\t\t\t{ timeUnit: \"year\", count: 10000 },\r\n\t\t\t{ timeUnit: \"year\", count: 100000 }\r\n\t\t];\r\n\r\n\t\tconst dateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst periodChangeDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_day\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\") + \" \" + language.translate(\"_date_year\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst tooltipDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond_full\"),\r\n\t\t\t\"second\": language.translate(\"_date_second_full\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute_full\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour_full\"),\r\n\t\t\t\"day\": language.translate(\"_date_day_full\"),\r\n\t\t\t\"week\": language.translate(\"_date_week_full\"),\r\n\t\t\t\"month\": language.translate(\"_date_month_full\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tr(\"CategoryDateAxis\").setAll({\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats)\r\n\t\t});\r\n\r\n\t\tr(\"DateAxis\").setAll({\r\n\t\t\tmaxZoomFactor: null,\r\n\t\t\tstrictMinMax: true,\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgroupData: false,\r\n\t\t\tgroupCount: 500,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats),\r\n\t\t\ttooltipDateFormats: tooltipDateFormats,\r\n\r\n\t\t\tgroupIntervals: [\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"year\", count: 1 }\r\n\t\t\t],\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <DateAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst endValue = dataItem.get(\"endValue\");\r\n\t\t\t\t\tconst intervalDuration = axis.intervalDuration();\r\n\t\t\t\t\tconst baseInterval = axis.getPrivate(\"baseInterval\");\r\n\t\t\t\t\tconst gridInterval = axis.getPrivate(\"gridInterval\", baseInterval);\r\n\r\n\r\n\t\t\t\t\tlet min = axis.getPrivate(\"min\", 0);\r\n\t\t\t\t\tmin = $time.round(new Date(min), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n\r\n\t\t\t\t\tif (value != null && endValue != null) {\r\n\t\t\t\t\t\tconst val = Math.round(Math.round((value - min) / intervalDuration)) / 2;\r\n\r\n\t\t\t\t\t\tif (val == Math.round(val)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"GaplessDateAxis\").setAll({\r\n\t\t\tfillRule: (dataItem: DataItem<IGaplessDateAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\r\n\t\t\t\t\tconst index = dataItem.get(\"index\")\r\n\t\t\t\t\tlet visible = false;\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\tvisible = true\r\n\t\t\t\t\t}\r\n\t\t\t\t\taxisFill.setPrivate(\"visible\", visible);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tr(\"ValueAxis\").setAll({\r\n\r\n\t\t\tbaseValue: 0,\r\n\t\t\tlogarithmic: false,\r\n\t\t\tstrictMinMax: false,\r\n\t\t\tautoZoom: true,\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <ValueAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst step = axis.getPrivate(\"step\");\r\n\r\n\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(step)) {\r\n\t\t\t\t\t\tif ($math.round(value / step / 2, 5) == Math.round(value / step / 2)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"DurationAxis\").setAll({\r\n\t\t\tbaseUnit: \"second\"\r\n\t\t})\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Series\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tmaskBullets: true,\r\n\t\t\tstackToNegative: true,\r\n\r\n\t\t\tlocationX: 0.5,\r\n\t\t\tlocationY: 0.5,\r\n\r\n\t\t\tsnapTooltip: false,\r\n\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\",\r\n\r\n\t\t\tseriesTooltipTarget: \"series\"\r\n\t\t});\r\n\r\n\t\tr(\"BaseColumnSeries\").setAll({\r\n\t\t\tadjustBulletPosition: true\r\n\t\t});\r\n\r\n\t\tr(\"ColumnSeries\").setAll({\r\n\t\t\tclustered: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"series\", \"column\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(70),\r\n\t\t\theight: percent(70),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"LineSeries\").setAll({\r\n\t\t\tconnect: true,\r\n\t\t\tautoGapCount: 1.1,\r\n\t\t\tstackToNegative: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"stroke\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"fill\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 0,\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, h / 2);\r\n\t\t\t\t\tdisplay.lineTo(w, h / 2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, h);\r\n\t\t\t\t\tdisplay.lineTo(0, h);\r\n\t\t\t\t\tdisplay.lineTo(0, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"SmoothedXYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedXLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"Candlestick\").setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(50),\r\n\t\t\theight: percent(50),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"OHLC\").setAll({\r\n\t\t\twidth: percent(80),\r\n\t\t\theight: percent(80)\r\n\t\t});\r\n\r\n\t\tr(\"CandlestickSeries\").setAll({\r\n\t\t\tlowValueXGrouped: \"low\",\r\n\t\t\tlowValueYGrouped: \"low\",\r\n\t\t\thighValueXGrouped: \"high\",\r\n\t\t\thighValueYGrouped: \"high\",\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\"\r\n\t\t})\r\n\r\n\t\t// These rules can be used for regular columns, too\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"riseFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"dropFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\t\t// Hollow\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromOpen\", { fillOpacity: 0 });\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromOpen\", { fillOpacity: 1 });\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromPrevious\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromPrevious\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\r\n\t\t// AXIS RANGE GRIP\r\n\t\t{\r\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"rangegrip\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0,\r\n\t\t\t\tfillOpacity: 0,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\twidth: 12,\r\n\t\t\t\theight: 12\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"rangegrip\", \"button\", \"icon\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tinteractive: false,\r\n\t\t\t\tcrisp: true,\r\n\t\t\t\tstrokeOpacity: 0.5,\r\n\t\t\t\tdraw: (display: any) => {\r\n\t\t\t\t\tdisplay.moveTo(0, 0.5);\r\n\t\t\t\t\tdisplay.lineTo(0, 12.5);\r\n\r\n\t\t\t\t\tdisplay.moveTo(2, 0.5);\r\n\t\t\t\t\tdisplay.lineTo(2, 12.5);\r\n\r\n\t\t\t\t\tdisplay.moveTo(4, 0.5);\r\n\t\t\t\t\tdisplay.lineTo(4, 12.5);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"secondaryButtonText\");\r\n\t\t}\r\n\r\n\t\tr(\"Button\", [\"rangegrip\"]).setAll({\r\n\t\t\tdraggable: true,\r\n\t\t\tpaddingTop: 0,\r\n\t\t\tpaddingBottom: 0\r\n\t\t})\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"vertical\"]).setAll({\r\n\t\t\trotation: 90,\r\n\t\t\tcursorOverStyle: \"ns-resize\",\r\n\t\t\tcenterX: p50\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"horizontal\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ew-resize\",\r\n\t\t\tcenterX: p50\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"vertical\", \"left\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"vertical\", \"right\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"horizontal\", \"top\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"horizontal\", \"bottom\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t}\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
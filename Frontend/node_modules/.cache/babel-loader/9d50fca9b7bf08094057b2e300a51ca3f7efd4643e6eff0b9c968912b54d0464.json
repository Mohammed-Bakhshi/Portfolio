{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Series } from \"../../../core/render/Series\";\nimport { List } from \"../../../core/util/List\";\nimport { Container } from \"../../../core/render/Container\";\nimport { Graphics } from \"../../../core/render/Graphics\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n/**\r\n * @ignore\r\n */\nfunction min(left, right) {\n  if (left == null) {\n    return right;\n  } else if (right == null) {\n    return left;\n  } else if (right < left) {\n    return right;\n  } else {\n    return left;\n  }\n}\n/**\r\n * @ignore\r\n */\nfunction max(left, right) {\n  if (left == null) {\n    return right;\n  } else if (right == null) {\n    return left;\n  } else if (right > left) {\n    return right;\n  } else {\n    return left;\n  }\n}\n/**\r\n * A base class for all XY chart series.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\r\n */\nexport class XYSeries extends Series {\n  constructor() {\n    super(...arguments);\n    Object.defineProperty(this, \"_xField\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_yField\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_xOpenField\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_yOpenField\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_xLowField\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_xHighField\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_yLowField\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_yHighField\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_axesDirty\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_stackDirty\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_selectionProcessed\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_dataSets\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_mainContainerMask\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_x\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_y\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_bullets\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    /**\r\n     * A [[Container]] that us used to put series' elements in.\r\n     *\r\n     * @default Container.new()\r\n     */\n    Object.defineProperty(this, \"mainContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this.children.push(Container.new(this._root, {}))\n    });\n    /**\r\n     * A list of axis ranges that affect the series.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n     */\n    Object.defineProperty(this, \"axisRanges\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new List()\n    });\n    Object.defineProperty(this, \"_skipped\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_couldStackTo\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(this, \"_reallyStackedTo\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_stackedSeries\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_aLocationX0\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_aLocationX1\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(this, \"_aLocationY0\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_aLocationY1\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(this, \"_showBullets\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(this, \"valueXFields\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: [\"valueX\", \"openValueX\", \"lowValueX\", \"highValueX\"]\n    });\n    Object.defineProperty(this, \"valueYFields\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: [\"valueY\", \"openValueY\", \"lowValueY\", \"highValueY\"]\n    });\n    Object.defineProperty(this, \"_valueXFields\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_valueYFields\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    // used for full min/max\n    Object.defineProperty(this, \"_valueXShowFields\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_valueYShowFields\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    // used for selection (uses working)\n    Object.defineProperty(this, \"__valueXShowFields\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"__valueYShowFields\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_emptyDataItem\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new DataItem(this, undefined, {})\n    });\n    Object.defineProperty(this, \"_dataSetId\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_tooltipFieldX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_tooltipFieldY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_posXDp\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_posYDp\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n  }\n  _afterNew() {\n    this.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\n    this.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\", \"lowValueX\", \"lowValueY\", \"highValueX\", \"highValueY\");\n    this._setRawDefault(\"vcx\", 1);\n    this._setRawDefault(\"vcy\", 1);\n    // this can't go to themes, as data might be parsed before theme\n    this._setRawDefault(\"valueXShow\", \"valueXWorking\");\n    this._setRawDefault(\"valueYShow\", \"valueYWorking\");\n    this._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\n    this._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\n    this._setRawDefault(\"lowValueXShow\", \"lowValueXWorking\");\n    this._setRawDefault(\"lowValueYShow\", \"lowValueYWorking\");\n    this._setRawDefault(\"highValueXShow\", \"highValueXWorking\");\n    this._setRawDefault(\"highValueYShow\", \"highValueYWorking\");\n    this._setRawDefault(\"lowValueXGrouped\", \"low\");\n    this._setRawDefault(\"lowValueYGrouped\", \"low\");\n    this._setRawDefault(\"highValueXGrouped\", \"high\");\n    this._setRawDefault(\"highValueYGrouped\", \"high\");\n    super._afterNew();\n    this.set(\"maskContent\", true);\n    this._disposers.push(this.axisRanges.events.onAll(change => {\n      if (change.type === \"clear\") {\n        $array.each(change.oldValues, axisRange => {\n          this._removeAxisRange(axisRange);\n        });\n      } else if (change.type === \"push\") {\n        this._processAxisRange(change.newValue);\n      } else if (change.type === \"setIndex\") {\n        this._processAxisRange(change.newValue);\n      } else if (change.type === \"insertIndex\") {\n        this._processAxisRange(change.newValue);\n      } else if (change.type === \"removeIndex\") {\n        this._removeAxisRange(change.oldValue);\n      } else if (change.type === \"moveIndex\") {\n        this._processAxisRange(change.value);\n      } else {\n        throw new Error(\"Unknown IStreamEvent type\");\n      }\n    }));\n    this.states.create(\"hidden\", {\n      opacity: 1,\n      visible: false\n    });\n    this.onPrivate(\"startIndex\", () => {\n      this.root.events.once(\"frameended\", () => {\n        this.updateLegendValue();\n      });\n    });\n    this.onPrivate(\"endIndex\", () => {\n      this.root.events.once(\"frameended\", () => {\n        this.updateLegendValue();\n      });\n    });\n    this._makeFieldNames();\n  }\n  _processAxisRange(axisRange) {\n    const container = Container.new(this._root, {});\n    axisRange.container = container;\n    this.children.push(container);\n    axisRange.series = this;\n    const axisDataItem = axisRange.axisDataItem;\n    axisDataItem.setRaw(\"isRange\", true);\n    const axis = axisDataItem.component;\n    if (axis) {\n      axis._processAxisRange(axisDataItem, [\"range\", \"series\"]);\n      const bullet = axisDataItem.get(\"bullet\");\n      if (bullet) {\n        const sprite = bullet.get(\"sprite\");\n        if (sprite) {\n          sprite.setPrivate(\"visible\", false);\n        }\n      }\n      const axisFill = axisDataItem.get(\"axisFill\");\n      if (axisFill) {\n        container.set(\"mask\", axisFill);\n      }\n      axis._seriesAxisRanges.push(axisDataItem);\n    }\n  }\n  _removeAxisRange(axisRange) {\n    const axisDataItem = axisRange.axisDataItem;\n    const axis = axisDataItem.component;\n    axis.disposeDataItem(axisDataItem);\n    $array.remove(axis._seriesAxisRanges, axisDataItem);\n    const container = axisRange.container;\n    if (container) {\n      container.dispose();\n    }\n  }\n  _updateFields() {\n    super._updateFields();\n    this._valueXFields = [];\n    this._valueYFields = [];\n    this._valueXShowFields = [];\n    this._valueYShowFields = [];\n    this.__valueXShowFields = [];\n    this.__valueYShowFields = [];\n    if (this.valueXFields) {\n      $array.each(this.valueXFields, key => {\n        const field = this.get(key + \"Field\");\n        if (field) {\n          this._valueXFields.push(key);\n          let field = this.get(key + \"Show\");\n          this.__valueXShowFields.push(field);\n          if (field.indexOf(\"Working\") != -1) {\n            this._valueXShowFields.push(field.split(\"Working\")[0]);\n          } else {\n            this._valueXShowFields.push(field);\n          }\n        }\n      });\n    }\n    if (this.valueYFields) {\n      $array.each(this.valueYFields, key => {\n        const field = this.get(key + \"Field\");\n        if (field) {\n          this._valueYFields.push(key);\n          let field = this.get(key + \"Show\");\n          this.__valueYShowFields.push(field);\n          if (field.indexOf(\"Working\") != -1) {\n            this._valueYShowFields.push(field.split(\"Working\")[0]);\n          } else {\n            this._valueYShowFields.push(field);\n          }\n        }\n      });\n    }\n  }\n  _dispose() {\n    super._dispose();\n    this._bullets = {};\n    const chart = this.chart;\n    if (chart) {\n      chart.series.removeValue(this);\n    }\n    $array.removeFirst(this.get(\"xAxis\").series, this);\n    $array.removeFirst(this.get(\"yAxis\").series, this);\n  }\n  // TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n  _min(key, value) {\n    let newValue = min(this.getPrivate(key), value);\n    this.setPrivate(key, newValue);\n  }\n  // TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n  _max(key, value) {\n    let newValue = max(this.getPrivate(key), value);\n    this.setPrivate(key, newValue);\n  }\n  _shouldMakeBullet(dataItem) {\n    const xAxis = this.get(\"xAxis\");\n    const yAxis = this.get(\"yAxis\");\n    const baseAxis = this.get(\"baseAxis\");\n    if (!xAxis.inited || !yAxis.inited) {\n      return false;\n    }\n    const minBulletDistance = this.get(\"minBulletDistance\", 0);\n    if (minBulletDistance > 0) {\n      let startIndex = this.startIndex();\n      let endIndex = this.endIndex();\n      let count = endIndex - startIndex;\n      if (xAxis == baseAxis) {\n        if (xAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\n          return false;\n        }\n      } else if (yAxis == baseAxis) {\n        if (yAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\n          return false;\n        }\n      }\n    }\n    if (dataItem.get(this._xField) != null && dataItem.get(this._yField) != null) {\n      return true;\n    }\n    return false;\n  }\n  _makeFieldNames() {\n    const xAxis = this.get(\"xAxis\");\n    const yAxis = this.get(\"yAxis\");\n    const xName = xAxis.getPrivate(\"name\");\n    const xCapName = $utils.capitalizeFirst(xName);\n    const yName = yAxis.getPrivate(\"name\");\n    const yCapName = $utils.capitalizeFirst(yName);\n    const xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\");\n    const yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\");\n    const open = \"open\";\n    const low = \"low\";\n    const high = \"high\";\n    const show = \"Show\";\n    if (xAxis.className === \"ValueAxis\") {\n      this._xField = this.get(xName + xLetter + show);\n      this._xOpenField = this.get(open + xCapName + xLetter + show);\n      this._xLowField = this.get(low + xCapName + xLetter + show);\n      this._xHighField = this.get(high + xCapName + xLetter + show);\n    } else {\n      this._xField = xName + xLetter;\n      this._xOpenField = open + xCapName + xLetter;\n      this._xLowField = low + xCapName + xLetter;\n      this._xHighField = high + xCapName + xLetter;\n    }\n    if (yAxis.className === \"ValueAxis\") {\n      this._yField = this.get(yName + yLetter + show);\n      this._yOpenField = this.get(open + yCapName + yLetter + show);\n      this._yLowField = this.get(low + yCapName + yLetter + show);\n      this._yHighField = this.get(high + yCapName + yLetter + show);\n    } else {\n      this._yField = yName + yLetter;\n      this._yOpenField = open + yCapName + yLetter;\n      this._yLowField = low + yCapName + yLetter;\n      this._yHighField = high + yCapName + yLetter;\n    }\n  }\n  _fixVC() {\n    const xAxis = this.get(\"xAxis\");\n    const yAxis = this.get(\"yAxis\");\n    const baseAxis = this.get(\"baseAxis\");\n    const hiddenState = this.states.lookup(\"hidden\");\n    const sequencedInterpolation = this.get(\"sequencedInterpolation\");\n    if (hiddenState) {\n      let value = 0;\n      if (sequencedInterpolation) {\n        value = 0.999999999999; // makes animate, good for stacked\n      }\n\n      if (xAxis === baseAxis) {\n        hiddenState.set(\"vcy\", value);\n      } else if (yAxis === baseAxis) {\n        hiddenState.set(\"vcx\", value);\n      } else {\n        hiddenState.set(\"vcy\", value);\n        hiddenState.set(\"vcx\", value);\n      }\n    }\n  }\n  _handleMaskBullets() {\n    if (this.isDirty(\"maskBullets\")) {\n      this.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\n    }\n  }\n  _fixPosition() {\n    const xAxis = this.get(\"xAxis\");\n    const yAxis = this.get(\"yAxis\");\n    this.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent.get(\"paddingLeft\", 0));\n    this.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent.get(\"paddingTop\", 0));\n    this.bulletsContainer.set(\"y\", this.y());\n    this.bulletsContainer.set(\"x\", this.x());\n  }\n  _prepareChildren() {\n    super._prepareChildren();\n    this._bullets = {};\n    if (this.isDirty(\"valueYShow\") || this.isDirty(\"valueXShow\") || this.isDirty(\"openValueYShow\") || this.isDirty(\"openValueXShow\") || this.isDirty(\"lowValueYShow\") || this.isDirty(\"lowValueXShow\") || this.isDirty(\"highValueYShow\") || this.isDirty(\"highValueXShow\")) {\n      this._updateFields();\n      this._makeFieldNames();\n      this._valuesDirty = true;\n    }\n    if (this.isDirty(\"xAxis\") || this.isDirty(\"yAxis\")) {\n      this._valuesDirty = true;\n    }\n    this.set(\"width\", this.get(\"xAxis\").width());\n    this.set(\"height\", this.get(\"yAxis\").height());\n    this._handleMaskBullets();\n    const xAxis = this.get(\"xAxis\");\n    const yAxis = this.get(\"yAxis\");\n    const baseAxis = this.get(\"baseAxis\");\n    const tooltipPositionX = this.get(\"tooltipPositionX\");\n    let tooltipFieldX;\n    switch (tooltipPositionX) {\n      case \"open\":\n        tooltipFieldX = this._xOpenField;\n        break;\n      case \"low\":\n        tooltipFieldX = this._xLowField;\n        break;\n      case \"high\":\n        tooltipFieldX = this._xHighField;\n        break;\n      default:\n        tooltipFieldX = this._xField;\n    }\n    this._tooltipFieldX = tooltipFieldX;\n    const tooltipPositionY = this.get(\"tooltipPositionY\");\n    let tooltipFieldY;\n    switch (tooltipPositionY) {\n      case \"open\":\n        tooltipFieldY = this._yOpenField;\n        break;\n      case \"low\":\n        tooltipFieldY = this._yLowField;\n        break;\n      case \"high\":\n        tooltipFieldY = this._yHighField;\n        break;\n      default:\n        tooltipFieldY = this._yField;\n    }\n    this._tooltipFieldY = tooltipFieldY;\n    if (this.isDirty(\"baseAxis\")) {\n      this._fixVC();\n    }\n    this._fixPosition();\n    const stacked = this.get(\"stacked\");\n    if (this.isDirty(\"stacked\")) {\n      if (stacked) {\n        if (this._valuesDirty && !this._dataProcessed) {} else {\n          this._stack();\n        }\n      } else {\n        this._unstack();\n      }\n    }\n    if (this._valuesDirty && !this._dataProcessed) {\n      this._dataProcessed = true;\n      if (stacked) {\n        this._stack();\n      }\n      $array.each(this.dataItems, dataItem => {\n        $array.each(this._valueXShowFields, key => {\n          let value = dataItem.get(key);\n          if (value != null) {\n            if (stacked) {\n              value += this.getStackedXValue(dataItem, key);\n            }\n            this._min(\"minX\", value);\n            this._max(\"maxX\", value);\n          }\n        });\n        $array.each(this._valueYShowFields, key => {\n          let value = dataItem.get(key);\n          if (value != null) {\n            if (stacked) {\n              value += this.getStackedYValue(dataItem, key);\n            }\n            this._min(\"minY\", value);\n            this._max(\"maxY\", value);\n          }\n        });\n        xAxis.processSeriesDataItem(dataItem, this._valueXFields);\n        yAxis.processSeriesDataItem(dataItem, this._valueYFields);\n      });\n      xAxis._seriesValuesDirty = true;\n      yAxis._seriesValuesDirty = true;\n      if (!this.get(\"ignoreMinMax\")) {\n        if (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\n          xAxis.markDirtyExtremes();\n        }\n        if (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\n          yAxis.markDirtyExtremes();\n        }\n      }\n      this._markStakedDirtyStack();\n      //this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\n      if (!this.get(\"tooltipDataItem\")) {\n        this.updateLegendValue(undefined);\n      }\n    }\n    if (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\n      this._markStakedDirtyStack();\n    }\n    if (!this._dataGrouped) {\n      xAxis._groupSeriesData(this);\n      yAxis._groupSeriesData(this);\n      this._dataGrouped = true;\n    }\n    if (this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"adjustedStartIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._sizeDirty) {\n      let startIndex = this.startIndex();\n      let endIndex = this.endIndex();\n      let minBulletDistance = this.get(\"minBulletDistance\", 0);\n      if (minBulletDistance > 0 && baseAxis) {\n        if (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\n          this._showBullets = true;\n        } else {\n          this._showBullets = false;\n        }\n      }\n      if ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this.isPrivateDirty(\"adjustedStartIndex\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\n        this._selectionProcessed = true;\n        const vcx = this.get(\"vcx\", 1);\n        const vcy = this.get(\"vcy\", 1);\n        const stacked = this.get(\"stacked\", false);\n        const outOfSelection = this.getPrivate(\"outOfSelection\");\n        if (baseAxis === xAxis || !baseAxis) {\n          yAxis._calculateTotals();\n          this.setPrivateRaw(\"selectionMinY\", undefined);\n          this.setPrivateRaw(\"selectionMaxY\", undefined);\n          if (!outOfSelection) {\n            for (let i = startIndex; i < endIndex; i++) {\n              this.processYSelectionDataItem(this.dataItems[i], vcy, stacked);\n            }\n          } else {\n            yAxis.markDirtySelectionExtremes();\n          }\n        }\n        if (baseAxis === yAxis || !baseAxis) {\n          xAxis._calculateTotals();\n          this.setPrivateRaw(\"selectionMinX\", undefined);\n          this.setPrivateRaw(\"selectionMaxX\", undefined);\n          if (!outOfSelection) {\n            for (let i = startIndex; i < endIndex; i++) {\n              this.processXSelectionDataItem(this.dataItems[i], vcx, stacked);\n            }\n          } else {\n            yAxis.markDirtySelectionExtremes();\n          }\n        }\n        if (baseAxis === xAxis || !baseAxis) {\n          if (this.get(\"valueYShow\") !== \"valueYWorking\") {\n            const selectionMinY = this.getPrivate(\"selectionMinY\");\n            if (selectionMinY != null) {\n              this.setPrivateRaw(\"minY\", selectionMinY);\n              yAxis.markDirtyExtremes();\n            }\n            const selectionMaxY = this.getPrivate(\"selectionMaxY\");\n            if (selectionMaxY != null) {\n              this.setPrivateRaw(\"maxY\", selectionMaxY);\n              yAxis.markDirtyExtremes();\n            }\n          }\n        }\n        if (baseAxis === yAxis || !baseAxis) {\n          if (this.get(\"valueXShow\") !== \"valueXWorking\") {\n            const selectionMinX = this.getPrivate(\"selectionMinX\");\n            if (selectionMinX != null) {\n              this.setPrivateRaw(\"minX\", selectionMinX);\n              yAxis.markDirtyExtremes();\n            }\n            const selectionMaxX = this.getPrivate(\"selectionMaxX\");\n            if (selectionMaxX != null) {\n              this.setPrivateRaw(\"maxX\", selectionMaxX);\n              xAxis.markDirtyExtremes();\n            }\n          }\n        }\n        if (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\n          xAxis.markDirtySelectionExtremes();\n        }\n        if (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\n          yAxis.markDirtySelectionExtremes();\n        }\n        // this.updateLegendValue(undefined); flickers while panning\n      }\n    }\n  }\n\n  _makeRangeMask() {\n    if (this.axisRanges.length > 0) {\n      let mainContainerMask = this._mainContainerMask;\n      if (mainContainerMask == null) {\n        mainContainerMask = this.children.push(Graphics.new(this._root, {}));\n        this._mainContainerMask = mainContainerMask;\n        mainContainerMask.set(\"draw\", (display, target) => {\n          const parent = this.parent;\n          if (parent) {\n            const w = this._root.container.width();\n            const h = this._root.container.height();\n            display.moveTo(-w, -h);\n            display.lineTo(-w, h * 2);\n            display.lineTo(w * 2, h * 2);\n            display.lineTo(w * 2, -h);\n            display.lineTo(-w, -h);\n            this.axisRanges.each(axisRange => {\n              const fill = axisRange.axisDataItem.get(\"axisFill\");\n              if (parent) {\n                if (fill) {\n                  let draw = fill.get(\"draw\");\n                  if (draw) {\n                    draw(display, target);\n                  }\n                }\n              }\n            });\n          }\n          this.mainContainer._display.mask = mainContainerMask._display;\n        });\n      }\n      mainContainerMask.markDirty();\n      mainContainerMask._markDirtyKey(\"fill\");\n    } else {\n      this.mainContainer._display.mask = null;\n    }\n  }\n  _updateChildren() {\n    super._updateChildren();\n    // save for performance\n    this._x = this.x();\n    this._y = this.y();\n    this._makeRangeMask();\n  }\n  _stack() {\n    const chart = this.chart;\n    if (chart) {\n      const seriesIndex = chart.series.indexOf(this);\n      this._couldStackTo = [];\n      if (seriesIndex > 0) {\n        let series;\n        for (let i = seriesIndex - 1; i >= 0; i--) {\n          series = chart.series.getIndex(i);\n          if (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\n            this._couldStackTo.push(series);\n            if (!series.get(\"stacked\")) {\n              break;\n            }\n          }\n        }\n      }\n      this._stackDataItems();\n    }\n  }\n  _unstack() {\n    $object.each(this._reallyStackedTo, (_key, value) => {\n      delete value._stackedSeries[this.uid];\n    });\n    this._reallyStackedTo = {};\n    $array.each(this.dataItems, dataItem => {\n      dataItem.setRaw(\"stackToItemY\", undefined);\n      dataItem.setRaw(\"stackToItemX\", undefined);\n    });\n  }\n  _stackDataItems() {\n    // this works only with the same number of data @todo: search by date/category?\n    const baseAxis = this.get(\"baseAxis\");\n    const xAxis = this.get(\"xAxis\");\n    const yAxis = this.get(\"yAxis\");\n    let field;\n    let stackToItemKey;\n    if (baseAxis === xAxis) {\n      field = \"valueY\";\n      stackToItemKey = \"stackToItemY\";\n    } else if (baseAxis === yAxis) {\n      field = \"valueX\";\n      stackToItemKey = \"stackToItemX\";\n    }\n    let len = this._couldStackTo.length;\n    let index = 0;\n    const stackToNegative = this.get(\"stackToNegative\");\n    this._reallyStackedTo = {};\n    $array.each(this.dataItems, dataItem => {\n      for (let s = 0; s < len; s++) {\n        let stackToSeries = this._couldStackTo[s];\n        let stackToItem = stackToSeries.dataItems[index];\n        let value = dataItem.get(field);\n        if (stackToItem) {\n          let stackValue = stackToItem.get(field);\n          if (stackToNegative) {\n            if ($type.isNumber(value)) {\n              if ($type.isNumber(stackValue)) {\n                if (value >= 0 && stackValue >= 0) {\n                  dataItem.setRaw(stackToItemKey, stackToItem);\n                  this._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n                  stackToSeries._stackedSeries[this.uid] = this;\n                  break;\n                }\n                if (value < 0 && stackValue < 0) {\n                  dataItem.setRaw(stackToItemKey, stackToItem);\n                  this._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n                  stackToSeries._stackedSeries[this.uid] = this;\n                  break;\n                }\n              }\n            } else {\n              break;\n            }\n          } else {\n            if ($type.isNumber(value) && $type.isNumber(stackValue)) {\n              dataItem.setRaw(stackToItemKey, stackToItem);\n              this._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n              stackToSeries._stackedSeries[this.uid] = this;\n              break;\n            }\n          }\n        }\n      }\n      index++;\n    });\n  }\n  processXSelectionDataItem(dataItem, vcx, stacked) {\n    $array.each(this.__valueXShowFields, key => {\n      let value = dataItem.get(key);\n      if (value != null) {\n        if (stacked) {\n          value += this.getStackedXValueWorking(dataItem, key);\n        }\n        this._min(\"selectionMinX\", value);\n        this._max(\"selectionMaxX\", value * vcx);\n      }\n    });\n  }\n  processYSelectionDataItem(dataItem, vcy, stacked) {\n    $array.each(this.__valueYShowFields, key => {\n      let value = dataItem.get(key);\n      if (value != null) {\n        if (stacked) {\n          value += this.getStackedYValueWorking(dataItem, key);\n        }\n        this._min(\"selectionMinY\", value);\n        this._max(\"selectionMaxY\", value * vcy);\n      }\n    });\n  }\n  /**\r\n   * @ignore\r\n   */\n  getStackedYValueWorking(dataItem, key) {\n    const stackToItem = dataItem.get(\"stackToItemY\");\n    if (stackToItem) {\n      const stackedToSeries = stackToItem.component;\n      return stackToItem.get(key, 0) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\n    }\n    return 0;\n  }\n  /**\r\n   * @ignore\r\n   */\n  getStackedXValueWorking(dataItem, key) {\n    const stackToItem = dataItem.get(\"stackToItemX\");\n    if (stackToItem) {\n      const stackedToSeries = stackToItem.component;\n      return stackToItem.get(key, 0) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\n    }\n    return 0;\n  }\n  /**\r\n   * @ignore\r\n   */\n  getStackedYValue(dataItem, key) {\n    const stackToItem = dataItem.get(\"stackToItemY\");\n    if (stackToItem) {\n      return stackToItem.get(key, 0) + this.getStackedYValue(stackToItem, key);\n    }\n    return 0;\n  }\n  /**\r\n   * @ignore\r\n   */\n  getStackedXValue(dataItem, key) {\n    const stackToItem = dataItem.get(\"stackToItemX\");\n    if (stackToItem) {\n      return stackToItem.get(key, 0) + this.getStackedXValue(stackToItem, key);\n    }\n    return 0;\n  }\n  /**\r\n   * @ignore\r\n   */\n  createLegendMarker(_dataItem) {\n    this.updateLegendMarker();\n  }\n  _markDirtyAxes() {\n    this._axesDirty = true;\n    this.markDirty();\n  }\n  _markDataSetDirty() {\n    this._afterDataChange();\n    this._valuesDirty = true;\n    this._dataProcessed = false;\n    this._aggregatesCalculated = false;\n    this.markDirty();\n  }\n  _clearDirty() {\n    super._clearDirty();\n    this._axesDirty = false;\n    this._selectionProcessed = false;\n    this._stackDirty = false;\n    this._dataProcessed = false;\n  }\n  _positionBullet(bullet) {\n    let sprite = bullet.get(\"sprite\");\n    if (sprite) {\n      let dataItem = sprite.dataItem;\n      let locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n      let locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n      let xAxis = this.get(\"xAxis\");\n      let yAxis = this.get(\"yAxis\");\n      let positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1));\n      let positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1));\n      let point = this.getPoint(positionX, positionY);\n      let left = dataItem.get(\"left\", point.x);\n      let right = dataItem.get(\"right\", point.x);\n      let top = dataItem.get(\"top\", point.y);\n      let bottom = dataItem.get(\"bottom\", point.y);\n      let x = 0;\n      let y = 0;\n      let w = right - left;\n      let h = bottom - top;\n      if (this._shouldShowBullet(positionX, positionY)) {\n        sprite.setPrivate(\"visible\", !bullet.getPrivate(\"hidden\"));\n        let field = bullet.get(\"field\");\n        const baseAxis = this.get(\"baseAxis\");\n        const xAxis = this.get(\"xAxis\");\n        const yAxis = this.get(\"yAxis\");\n        if (field != undefined) {\n          let realField;\n          if (baseAxis == xAxis) {\n            if (field == \"value\") {\n              realField = this._yField;\n            } else if (field == \"open\") {\n              realField = this._yOpenField;\n            } else if (field == \"high\") {\n              realField = this._yHighField;\n            } else if (field == \"low\") {\n              realField = this._yLowField;\n            }\n            if (realField) {\n              positionY = yAxis.getDataItemPositionY(dataItem, realField, 0, this.get(\"vcy\", 1));\n              point = yAxis.get(\"renderer\").positionToPoint(positionY);\n              y = point.y;\n              x = left + w * locationX;\n            }\n          } else {\n            if (field == \"value\") {\n              realField = this._xField;\n            } else if (field == \"open\") {\n              realField = this._xOpenField;\n            } else if (field == \"high\") {\n              realField = this._xHighField;\n            } else if (field == \"low\") {\n              realField = this._xLowField;\n            }\n            if (realField) {\n              positionX = xAxis.getDataItemPositionX(dataItem, realField, 0, this.get(\"vcx\", 1));\n              point = xAxis.get(\"renderer\").positionToPoint(positionX);\n              x = point.x;\n              y = bottom - h * locationY;\n            }\n          }\n        } else {\n          x = left + w * locationX;\n          y = bottom - h * locationY;\n        }\n        const stacked = bullet.get(\"stacked\");\n        if (stacked) {\n          const chart = this.chart;\n          if (baseAxis == xAxis) {\n            let previousBullet = this._bullets[positionX + \"_\" + positionY];\n            if (previousBullet) {\n              let previousBounds = previousBullet.bounds();\n              let bounds = sprite.localBounds();\n              let yo = y;\n              y = previousBounds.top;\n              if (stacked == \"down\") {\n                y = previousBounds.bottom - bounds.top;\n              } else if (stacked == \"auto\") {\n                if (chart) {\n                  if (yo < chart.plotContainer.height() / 2) {\n                    y = previousBounds.bottom - bounds.top;\n                  } else {\n                    y += bounds.bottom;\n                  }\n                }\n              } else {\n                y += bounds.bottom;\n              }\n            }\n            this._bullets[positionX + \"_\" + positionY] = sprite;\n          } else {\n            let previousBullet = this._bullets[positionX + \"_\" + positionY];\n            if (previousBullet) {\n              let previousBounds = previousBullet.bounds();\n              let bounds = sprite.localBounds();\n              let xo = x;\n              x = previousBounds.right;\n              if (stacked == \"down\") {\n                x = previousBounds.left - bounds.right;\n              } else if (stacked == \"auto\") {\n                if (chart) {\n                  if (xo < chart.plotContainer.width() / 2) {\n                    x = previousBounds.left - bounds.right;\n                  } else {\n                    x -= bounds.left;\n                  }\n                }\n              } else {\n                x -= bounds.left;\n              }\n            }\n            this._bullets[positionX + \"_\" + positionY] = sprite;\n          }\n        }\n        if (sprite.isType(\"Label\")) {\n          sprite.setPrivate(\"maxWidth\", Math.abs(w));\n          sprite.setPrivate(\"maxHeight\", Math.abs(h));\n        }\n        sprite.setAll({\n          x,\n          y\n        });\n      } else {\n        sprite.setPrivate(\"visible\", false);\n      }\n    }\n  }\n  _shouldShowBullet(_positionX, _positionY) {\n    return this._showBullets;\n  }\n  /**\r\n   * @ignore\r\n   */\n  setDataSet(id) {\n    if (this._dataSets[id]) {\n      this._handleDataSetChange();\n      this._dataItems = this._dataSets[id];\n      this._markDataSetDirty();\n      this._dataSetId = id;\n      const type = \"datasetchanged\";\n      if (this.events.isEnabled(type)) {\n        this.events.dispatch(type, {\n          type: type,\n          target: this,\n          id: id\n        });\n      }\n    }\n  }\n  /**\r\n   * @ignore\r\n   */\n  resetGrouping() {\n    $object.each(this._dataSets, (_key, dataSet) => {\n      if (dataSet != this._mainDataItems) {\n        $array.each(dataSet, dataItem => {\n          this.disposeDataItem(dataItem);\n        });\n      }\n    });\n    this._dataSets = {};\n    this._dataItems = this.mainDataItems;\n  }\n  _handleDataSetChange() {\n    $array.each(this._dataItems, dataItem => {\n      let bullets = dataItem.bullets;\n      if (bullets) {\n        $array.each(bullets, bullet => {\n          if (bullet) {\n            let sprite = bullet.get(\"sprite\");\n            if (sprite) {\n              sprite.setPrivate(\"visible\", false);\n            }\n          }\n        });\n      }\n    });\n    this._selectionProcessed = false; // for totals to be calculated\n  }\n  /**\r\n   * Shows hidden series.\r\n   *\r\n   * @param   duration  Duration of animation in milliseconds\r\n   * @return            Animation promise\r\n   */\n  show(duration) {\n    const _super = Object.create(null, {\n      show: {\n        get: () => super.show\n      }\n    });\n    return __awaiter(this, void 0, void 0, function* () {\n      this._fixVC();\n      let promises = [];\n      promises.push(_super.show.call(this, duration).then(() => {\n        this._isShowing = false;\n        let xAxis = this.get(\"xAxis\");\n        let yAxis = this.get(\"yAxis\");\n        let baseAxis = this.get(\"baseAxis\");\n        if (yAxis !== baseAxis) {\n          yAxis.markDirtySelectionExtremes();\n        }\n        if (xAxis !== baseAxis) {\n          xAxis.markDirtySelectionExtremes();\n        }\n      }));\n      promises.push(this.bulletsContainer.show(duration));\n      promises.push(this._sequencedShowHide(true, duration));\n      yield Promise.all(promises);\n    });\n  }\n  /**\r\n   * Hides series.\r\n   *\r\n   * @param   duration  Duration of animation in milliseconds\r\n   * @return            Animation promise\r\n   */\n  hide(duration) {\n    const _super = Object.create(null, {\n      hide: {\n        get: () => super.hide\n      }\n    });\n    return __awaiter(this, void 0, void 0, function* () {\n      this._fixVC();\n      let promises = [];\n      promises.push(_super.hide.call(this, duration).then(() => {\n        this._isHiding = false;\n      }));\n      promises.push(this.bulletsContainer.hide(duration));\n      promises.push(this._sequencedShowHide(false, duration));\n      yield Promise.all(promises);\n    });\n  }\n  /**\r\n   * Shows series's data item.\r\n   *\r\n   * @param   dataItem  Data item\r\n   * @param   duration  Animation duration in milliseconds\r\n   * @return            Promise\r\n   */\n  showDataItem(dataItem, duration) {\n    const _super = Object.create(null, {\n      showDataItem: {\n        get: () => super.showDataItem\n      }\n    });\n    return __awaiter(this, void 0, void 0, function* () {\n      const promises = [_super.showDataItem.call(this, dataItem, duration)];\n      if (!$type.isNumber(duration)) {\n        duration = this.get(\"stateAnimationDuration\", 0);\n      }\n      const easing = this.get(\"stateAnimationEasing\");\n      $array.each(this._valueFields, key => {\n        promises.push(dataItem.animate({\n          key: key + \"Working\",\n          to: dataItem.get(key),\n          duration: duration,\n          easing: easing\n        }).waitForStop());\n      });\n      yield Promise.all(promises);\n    });\n  }\n  /**\r\n   * Hides series's data item.\r\n   *\r\n   * @param   dataItem  Data item\r\n   * @param   duration  Animation duration in milliseconds\r\n   * @return            Promise\r\n   */\n  hideDataItem(dataItem, duration) {\n    const _super = Object.create(null, {\n      hideDataItem: {\n        get: () => super.hideDataItem\n      }\n    });\n    return __awaiter(this, void 0, void 0, function* () {\n      const promises = [_super.hideDataItem.call(this, dataItem, duration)];\n      const hiddenState = this.states.create(\"hidden\", {});\n      if (!$type.isNumber(duration)) {\n        duration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\n      }\n      const easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\n      const xAxis = this.get(\"xAxis\");\n      const yAxis = this.get(\"yAxis\");\n      const baseAxis = this.get(\"baseAxis\");\n      const stacked = this.get(\"stacked\");\n      if (baseAxis === xAxis || !baseAxis) {\n        $array.each(this._valueYFields, key => {\n          let min = yAxis.getPrivate(\"min\");\n          let baseValue = yAxis.baseValue();\n          if ($type.isNumber(min) && min > baseValue) {\n            baseValue = min;\n          }\n          if (stacked) {\n            baseValue = 0;\n          }\n          let value = dataItem.get(key);\n          if (value != null) {\n            promises.push(dataItem.animate({\n              key: key + \"Working\",\n              to: baseValue,\n              duration: duration,\n              easing: easing\n            }).waitForStop());\n          }\n        });\n      }\n      if (baseAxis === yAxis || !baseAxis) {\n        let min = xAxis.getPrivate(\"min\");\n        let baseValue = xAxis.baseValue();\n        if ($type.isNumber(min) && min > baseValue) {\n          baseValue = min;\n        }\n        if (stacked) {\n          baseValue = 0;\n        }\n        $array.each(this._valueXFields, key => {\n          let value = dataItem.get(key);\n          if (value != null) {\n            promises.push(dataItem.animate({\n              key: key + \"Working\",\n              to: baseValue,\n              duration: duration,\n              easing: easing\n            }).waitForStop());\n          }\n        });\n      }\n      yield Promise.all(promises);\n    });\n  }\n  _markDirtyStack() {\n    this._stackDirty = true;\n    this.markDirty();\n    this._markStakedDirtyStack();\n  }\n  _markStakedDirtyStack() {\n    const stackedSeries = this._stackedSeries;\n    if (stackedSeries) {\n      $object.each(stackedSeries, (_key, value) => {\n        if (!value._stackDirty) {\n          value._markDirtyStack();\n        }\n      });\n    }\n  }\n  _afterChanged() {\n    super._afterChanged();\n    if (this._skipped) {\n      this._markDirtyAxes();\n      this._skipped = false;\n    }\n  }\n  /**\r\n   * Shows a tooltip for specific data item.\r\n   *\r\n   * @param  dataItem  Data item\r\n   */\n  showDataItemTooltip(dataItem) {\n    if (!this.getPrivate(\"doNotUpdateLegend\")) {\n      this.updateLegendMarker(dataItem);\n      this.updateLegendValue(dataItem);\n    }\n    const tooltip = this.get(\"tooltip\");\n    if (tooltip) {\n      if (!this.isHidden() && this.get(\"visible\")) {\n        tooltip._setDataItem(dataItem);\n        if (dataItem) {\n          let locationX = this.get(\"locationX\", 0);\n          let locationY = this.get(\"locationY\", 1);\n          let itemLocationX = dataItem.get(\"locationX\", locationX);\n          let itemLocationY = dataItem.get(\"locationY\", locationY);\n          const xAxis = this.get(\"xAxis\");\n          const yAxis = this.get(\"yAxis\");\n          const vcx = this.get(\"vcx\", 1);\n          const vcy = this.get(\"vcy\", 1);\n          const xPos = xAxis.getDataItemPositionX(dataItem, this._tooltipFieldX, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx);\n          const yPos = yAxis.getDataItemPositionY(dataItem, this._tooltipFieldY, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy);\n          const point = this.getPoint(xPos, yPos);\n          let show = true;\n          $array.each(this._valueFields, field => {\n            if (dataItem.get(field) == null) {\n              show = false;\n            }\n          });\n          if (show) {\n            const chart = this.chart;\n            if (chart && chart.inPlot(point)) {\n              tooltip.label.text.markDirtyText();\n              tooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\n              tooltip.set(\"pointTo\", this._display.toGlobal({\n                x: point.x,\n                y: point.y\n              }));\n            } else {\n              tooltip._setDataItem(undefined);\n            }\n          } else {\n            tooltip._setDataItem(undefined);\n          }\n        }\n      } else {\n        this.hideTooltip();\n      }\n    }\n  }\n  hideTooltip() {\n    const tooltip = this.get(\"tooltip\");\n    if (tooltip) {\n      tooltip.set(\"tooltipTarget\", this);\n    }\n    return super.hideTooltip();\n  }\n  _getTooltipTarget(dataItem) {\n    if (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n      const bullets = dataItem.bullets;\n      if (bullets && bullets.length > 0) {\n        const bullet = bullets[0];\n        const sprite = bullet.get(\"sprite\");\n        if (sprite) {\n          return sprite;\n        }\n      }\n    }\n    return this;\n  }\n  /**\r\n   * @ignore\r\n   */\n  updateLegendValue(dataItem) {\n    const legendDataItem = this.get(\"legendDataItem\");\n    if (legendDataItem) {\n      const label = legendDataItem.get(\"label\");\n      if (label) {\n        let txt = \"\";\n        if (dataItem) {\n          label._setDataItem(dataItem);\n          txt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\n        } else {\n          label._setDataItem(this._emptyDataItem);\n          txt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\n        }\n        label.set(\"text\", txt);\n      }\n      const valueLabel = legendDataItem.get(\"valueLabel\");\n      if (valueLabel) {\n        let txt = \"\";\n        if (dataItem) {\n          valueLabel._setDataItem(dataItem);\n          txt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\n        } else {\n          valueLabel._setDataItem(this._emptyDataItem);\n          txt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\n        }\n        valueLabel.set(\"text\", txt);\n      }\n    }\n  }\n  _getItemReaderLabel() {\n    let text = \"X: {\" + this._xField;\n    if (this.get(\"xAxis\").isType(\"DateAxis\")) {\n      text += \".formatDate()\";\n    }\n    text += \"}; Y: {\" + this._yField;\n    if (this.get(\"yAxis\").isType(\"DateAxis\")) {\n      text += \".formatDate()\";\n    }\n    text += \"}\";\n    return text;\n  }\n  /**\r\n   * @ignore\r\n   */\n  getPoint(positionX, positionY) {\n    let x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\n    let y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\n    // if coordinate is super big, canvas fails to draw line, capping to some big number (won't make any visual difference)\n    let max = 999999999;\n    if (y < -max) {\n      y = -max;\n    }\n    if (y > max) {\n      y = max;\n    }\n    if (x < -max) {\n      x = -max;\n    }\n    if (x > max) {\n      x = max;\n    }\n    return {\n      x: x,\n      y: y\n    };\n  }\n  _shouldInclude(_position) {\n    return true;\n  }\n  /**\r\n   * @ignore\r\n   */\n  handleCursorHide() {\n    this.hideTooltip();\n    this.updateLegendValue(undefined);\n    this.updateLegendMarker(undefined);\n  }\n  _afterDataChange() {\n    super._afterDataChange();\n    this.get(\"xAxis\")._markDirtyKey(\"start\");\n    this.get(\"yAxis\")._markDirtyKey(\"start\");\n    this.resetExtremes();\n  }\n  /**\r\n   * Resets cached axis scale values.\r\n   */\n  resetExtremes() {\n    this.setPrivate(\"selectionMinX\", undefined);\n    this.setPrivate(\"selectionMaxX\", undefined);\n    this.setPrivate(\"selectionMinY\", undefined);\n    this.setPrivate(\"selectionMaxY\", undefined);\n    this.setPrivate(\"minX\", undefined);\n    this.setPrivate(\"minY\", undefined);\n    this.setPrivate(\"maxX\", undefined);\n    this.setPrivate(\"maxY\", undefined);\n  }\n  /**\r\n   * Creates and returns an axis range object.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n   * @param   axisDataItem  Axis data item\r\n   * @return                Axis range\r\n   */\n  createAxisRange(axisDataItem) {\n    return this.axisRanges.push({\n      axisDataItem: axisDataItem\n    });\n  }\n  /**\r\n   * A list of series's main (ungrouped) data items.\r\n   *\r\n   * @return  Data items\r\n   */\n  get mainDataItems() {\n    return this._mainDataItems;\n  }\n  /**\r\n   * @ignore\r\n   */\n  _adjustStartIndex(index) {\n    const xAxis = this.get(\"xAxis\");\n    const baseAxis = this.get(\"baseAxis\");\n    if (baseAxis == xAxis && xAxis.isType(\"DateAxis\")) {\n      const baseDuration = xAxis.baseDuration();\n      const minSelection = xAxis.getPrivate(\"selectionMin\", xAxis.getPrivate(\"min\", 0));\n      const dl = baseDuration * this.get(\"locationX\", 0.5);\n      let value = -Infinity;\n      while (value < minSelection) {\n        const dataItem = this.dataItems[index];\n        if (dataItem) {\n          const open = dataItem.open;\n          if (open) {\n            value = open[\"valueX\"];\n          } else {\n            value = dataItem.get(\"valueX\", 0);\n          }\n          value += dl;\n          if (value < minSelection) {\n            index++;\n          } else {\n            break;\n          }\n        } else {\n          break;\n        }\n      }\n    }\n    return index;\n  }\n}\nObject.defineProperty(XYSeries, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"XYSeries\"\n});\nObject.defineProperty(XYSeries, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Series.classNames.concat([XYSeries.className])\n});","map":{"version":3,"names":["DataItem","Series","List","Container","Graphics","$type","$object","$array","$utils","min","left","right","max","XYSeries","constructor","Object","defineProperty","children","push","new","_root","undefined","_afterNew","fields","valueFields","_setRawDefault","set","_disposers","axisRanges","events","onAll","change","type","each","oldValues","axisRange","_removeAxisRange","_processAxisRange","newValue","oldValue","value","Error","states","create","opacity","visible","onPrivate","root","once","updateLegendValue","_makeFieldNames","container","series","axisDataItem","setRaw","axis","component","bullet","get","sprite","setPrivate","axisFill","_seriesAxisRanges","disposeDataItem","remove","dispose","_updateFields","_valueXFields","_valueYFields","_valueXShowFields","_valueYShowFields","__valueXShowFields","__valueYShowFields","valueXFields","key","field","indexOf","split","valueYFields","_dispose","_bullets","chart","removeValue","removeFirst","_min","getPrivate","_max","_shouldMakeBullet","dataItem","xAxis","yAxis","baseAxis","inited","minBulletDistance","startIndex","endIndex","count","axisLength","_xField","_yField","xName","xCapName","capitalizeFirst","yName","yCapName","xLetter","yLetter","open","low","high","show","className","_xOpenField","_xLowField","_xHighField","_yOpenField","_yLowField","_yHighField","_fixVC","hiddenState","lookup","sequencedInterpolation","_handleMaskBullets","isDirty","bulletsContainer","_fixPosition","x","relativeToValue","width","parent","y","height","_prepareChildren","_valuesDirty","tooltipPositionX","tooltipFieldX","_tooltipFieldX","tooltipPositionY","tooltipFieldY","_tooltipFieldY","stacked","_dataProcessed","_stack","_unstack","dataItems","getStackedXValue","getStackedYValue","processSeriesDataItem","_seriesValuesDirty","isPrivateDirty","markDirtyExtremes","_markStakedDirtyStack","_dataGrouped","_groupSeriesData","_stackDirty","_sizeDirty","_showBullets","_psi","_pei","_selectionProcessed","vcx","vcy","outOfSelection","_calculateTotals","setPrivateRaw","i","processYSelectionDataItem","markDirtySelectionExtremes","processXSelectionDataItem","selectionMinY","selectionMaxY","selectionMinX","selectionMaxX","_makeRangeMask","length","mainContainerMask","_mainContainerMask","display","target","w","h","moveTo","lineTo","fill","draw","mainContainer","_display","mask","markDirty","_markDirtyKey","_updateChildren","_x","_y","seriesIndex","_couldStackTo","getIndex","_stackDataItems","_reallyStackedTo","_key","_stackedSeries","uid","stackToItemKey","len","index","stackToNegative","s","stackToSeries","stackToItem","stackValue","isNumber","getStackedXValueWorking","getStackedYValueWorking","stackedToSeries","createLegendMarker","_dataItem","updateLegendMarker","_markDirtyAxes","_axesDirty","_markDataSetDirty","_afterDataChange","_aggregatesCalculated","_clearDirty","_positionBullet","locationX","locationY","positionX","getDataItemPositionX","positionY","getDataItemPositionY","point","getPoint","top","bottom","_shouldShowBullet","realField","positionToPoint","previousBullet","previousBounds","bounds","localBounds","yo","plotContainer","xo","isType","Math","abs","setAll","_positionX","_positionY","setDataSet","id","_dataSets","_handleDataSetChange","_dataItems","_dataSetId","isEnabled","dispatch","resetGrouping","dataSet","_mainDataItems","mainDataItems","bullets","duration","promises","_super","call","then","_isShowing","_sequencedShowHide","Promise","all","hide","_isHiding","showDataItem","easing","_valueFields","animate","to","waitForStop","hideDataItem","baseValue","_markDirtyStack","stackedSeries","_afterChanged","_skipped","showDataItemTooltip","tooltip","isHidden","_setDataItem","itemLocationX","itemLocationY","xPos","_aLocationX0","_aLocationX1","yPos","_aLocationY0","_aLocationY1","inPlot","label","text","markDirtyText","_getTooltipTarget","toGlobal","hideTooltip","legendDataItem","txt","_emptyDataItem","valueLabel","_getItemReaderLabel","positionToCoordinate","_shouldInclude","_position","handleCursorHide","resetExtremes","createAxisRange","_adjustStartIndex","baseDuration","minSelection","dl","Infinity","classNames","concat"],"sources":["C:\\Users\\Moham\\Downloads\\Github projects\\Digital-Portfolio-main\\Frontend\\node_modules\\src\\.internal\\charts\\xy\\series\\XYSeries.ts"],"sourcesContent":["import type { Axis, IAxisPrivate, IAxisDataItem } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Bullet } from \"../../../core/render/Bullet\";\nimport type { XYChart } from \"../XYChart\";\n//import type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../../core/render/Series\";\nimport { List } from \"../../../core/util/List\";\nimport { Container } from \"../../../core/render/Container\";\nimport { Graphics } from \"../../../core/render/Graphics\";\n\nimport type { IDisposer } from \"../../../core/util/Disposer\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n/**\n * @ignore\n */\nfunction min(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right < left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * @ignore\n */\nfunction max(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right > left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * Interface representing a series axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface IXYSeriesAxisRange {\n\n\t/**\n\t * Related axis data item.\n\t */\n\taxisDataItem: DataItem<IAxisDataItem>;\n\n\t/**\n\t * A [[Container]] element that range's elements are placed in.\n\t */\n\tcontainer?: Container;\n\n\t/**\n\t * Target series.\n\t */\n\tseries?: XYSeries;\n\n}\n\nexport interface IXYAxisPrivate extends IAxisPrivate {\n\tmin?: number;\n\tmax?: number;\n}\n\nexport interface IXYAxis extends Axis<AxisRenderer> {\n\t_privateSettings: IXYAxisPrivate;\n}\n\nexport interface IXYSeriesEvents extends ISeriesEvents {\n\n\t/**\n\t * Kicks in when axis starts using different data set, e.g. data\n\t * of different granularit on [[DateAxis]].\n\t *\n\t * @since 5.1.1\n\t */\n\tdatasetchanged: {\n\t\tid: string\n\t}\n}\n\n/**\n * XY chart series data item.\n */\nexport interface IXYSeriesDataItem extends ISeriesDataItem {\n\tvalueX?: number;\n\tvalueXWorking?: number;\n\tvalueXChange?: number;\n\tvalueXChangePercent?: number;\n\tvalueXChangeSelection?: number;\n\tvalueXChangeSelectionPercent?: number;\n\tvalueXChangePrevious?: number;\n\tvalueXChangePreviousPercent?: number;\n\tvalueXWorkingOpen?: number;\n\tvalueXWorkingClose?: number;\n\n\tvalueY?: number;\n\tvalueYChange?: number;\n\tvalueYWorking?: number;\n\tvalueYChangePercent?: number;\n\tvalueYChangeSelection?: number;\n\tvalueYChangeSelectionPercent?: number;\n\tvalueYChangePrevious?: number;\n\tvalueYChangePreviousPercent?: number;\n\tvalueYWorkingOpen?: number;\n\tvalueYWorkingClose?: number;\n\n\topenValueX?: number;\n\topenValueXWorking?: number;\n\topenValueXChange?: number;\n\topenValueXChangePercent?: number;\n\topenValueXChangeSelection?: number;\n\topenValueXChangeSelectionPercent?: number;\n\topenValueXChangePrevious?: number;\n\topenValueXChangePreviousPercent?: number;\n\topenValueXWorkingOpen?: number;\n\topenValueXWorkingClose?: number;\n\topenValueY?: number;\n\topenValueYWorking?: number;\n\topenValueYChange?: number;\n\topenValueYChangePercent?: number;\n\topenValueYChangeSelection?: number;\n\topenValueYChangeSelectionPercent?: number;\n\topenValueYChangePrevious?: number;\n\topenValueYChangePreviousPercent?: number;\n\topenValueYWorkingOpen?: number;\n\topenValueYWorkingClose?: number;\n\n\tlowValueX?: number;\n\tlowValueXWorking?: number;\n\tlowValueXChange?: number;\n\tlowValueXChangePercent?: number;\n\tlowValueXChangeSelection?: number;\n\tlowValueXChangeSelectionPercent?: number;\n\tlowValueXChangePrevious?: number;\n\tlowValueXChangePreviousPercent?: number;\n\tlowValueXWorkingOpen?: number;\n\tlowValueXWorkingClose?: number;\n\n\thighValueX?: number;\n\thighValueXWorking?: number;\n\thighValueXChange?: number;\n\thighValueXChangePercent?: number;\n\thighValueXChangeSelection?: number;\n\thighValueXChangeSelectionPercent?: number;\n\thighValueXChangePrevious?: number;\n\thighValueXChangePreviousPercent?: number;\n\thighValueXWorkingOpen?: number;\n\thighValueXWorkingClose?: number;\n\n\tlowValueY?: number;\n\tlowValueYWorking?: number;\n\tlowValueYChange?: number;\n\tlowValueYChangePercent?: number;\n\tlowValueYChangeSelection?: number;\n\tlowValueYChangeSelectionPercent?: number;\n\tlowValueYChangePrevious?: number;\n\tlowValueYChangePreviousPercent?: number;\n\tlowValueYWorkingOpen?: number;\n\tlowValueYWorkingClose?: number;\n\n\thighValueY?: number;\n\thighValueYWorking?: number;\n\thighValueYChange?: number;\n\thighValueYChangePercent?: number;\n\thighValueYChangeSelection?: number;\n\thighValueYChangeSelectionPercent?: number;\n\thighValueYChangePrevious?: number;\n\thighValueYChangePreviousPercent?: number;\n\thighValueYWorkingOpen?: number;\n\thighValueYWorkingClose?: number;\n\n\tcategoryX?: string;\n\tcategoryY?: string;\n\n\topenCategoryX?: string;\n\topenCategoryY?: string;\n\n\tlocationX?: number;\n\tlocationY?: number;\n\n\topenLocationX?: number;\n\topenLocationY?: number;\n\n\tstackToItemX?: DataItem<IXYSeriesDataItem>;\n\tstackToItemY?: DataItem<IXYSeriesDataItem>;\n\n\tleft?: number;\n\tright?: number;\n\ttop?: number;\n\tbottom?: number;\n\n\tpoint?: IPoint;\n\n\toriginals?: Array<DataItem<IXYSeriesDataItem>>;\n}\n\nexport interface IXYSeriesSettings extends ISeriesSettings {\n\n\t/**\n\t * Minimal distance between data items in pixels.\n\t *\n\t * If data items are closer than this, bullets are turned off to avoid\n\t * overcrowding.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Bullets} for more info\n\t */\n\tminBulletDistance?: number;\n\n\t/**\n\t * X axis series uses.\n\t *\n\t * **IMPORTANT:** `xAxis` needs to be set when creating the series. Updating\n\t * this setting on previously created series object will not work.\n\t */\n\txAxis: IXYAxis;\n\n\t/**\n\t * Y axis series uses.\n\t *\n\t * **IMPORTANT:** `yAxis` needs to be set when creating the series. Updating\n\t * this setting on previously created series object will not work.\n\t */\n\tyAxis: IXYAxis;\n\n\t/**\n\t * If set to `true` series will be stacked to other series that also have\n\t * this setting set to `true`.\n\t *\n\t * NOTE: for series stack properly, all stacked series must have same number\n\t * of data items with the same timestamp/category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Stacked_series} for more info\n\t */\n\tstacked?: boolean;\n\n\t/**\n\t * Whether to stack negative values from zero (`true`) or from whatever\n\t * previous series value is (`false`).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Negative_value_stacking} for more info\n\t */\n\tstackToNegative?: boolean;\n\n\t/**\n\t * Base axis for the series.\n\t *\n\t * A base axis will dictate direction series plot.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Base_axis} for more info\n\t */\n\tbaseAxis?: IXYAxis;\n\n\t/**\n\t * Input data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXField?: string;\n\n\t/**\n\t * Input data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYField?: string;\n\n\t/**\n\t * Exclude series values when calculating totals for category/interval.\n\t *\n\t * @default false\n\t */\n\texcludeFromTotal?: boolean;\n\n\t/**\n\t * Display data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXShow?: \"valueXWorking\" | \"valueXChange\" | \"valueXChangePercent\" | \"valueXChangeSelection\" | \"valueXChangeSelectionPercent\" | \"valueXChangePrevious\" | \"valueXChangePreviousPercent\" | \"valueXTotal\" | \"valueXTotalPercent\" | \"valueXSum\";\n\n\t/**\n\t * Display data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYShow?: \"valueYWorking\" | \"valueYChange\" | \"valueYChangePercent\" | \"valueYChangeSelection\" | \"valueYChangeSelectionPercent\" | \"valueYChangePrevious\" | \"valueYChangePreviousPercent\" | \"valueYTotal\" | \"valueYTotalPercent\" | \"valueYSum\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXField?: string;\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYField?: string;\n\n\t/**\n\t * Display data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXShow?: \"openValueXWorking\" | \"openValueXChange\" | \"openValueXChangePercent\" | \"openValueXChangeSelection\" | \"openValueXChangeSelectionPercent\" | \"openValueXChangePrevious\" | \"openValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYShow?: \"openValueYWorking\" | \"openValueYChange\" | \"openValueYChangePercent\" | \"openValueYChangeSelection\" | \"openValueYChangeSelectionPercent\" | \"openValueYChangePrevious\" | \"openValueYChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\n\n\t/**\n\t * Input data field for X low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueXField?: string;\n\n\t/**\n\t * Input data field for Y low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueYField?: string;\n\n\t/**\n\t * Input data field for X high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueXField?: string;\n\n\t/**\n\t * Input data field for Y high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueYField?: string;\n\n\t/**\n\t * Display data field for X low value.\n\t */\n\tlowValueXShow?: \"lowValueXWorking\" | \"lowValueXChange\" | \"lowValueXChangePercent\" | \"lowValueXChangeSelection\" | \"lowValueXChangeSelectionPercent\" | \"lowValueXChangePrevious\" | \"lowValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\tlowValueYShow?: \"lowValueYWorking\" | \"lowValueYChange\" | \"lowValueYChangePercent\" | \"lowValueYChangeSelection\" | \"lowValueYChangeSelectionPercent\" | \"lowValueYChangePrevious\" | \"lowValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X low values from several data items.\n\t */\n\tlowValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating Y low values from several data items.\n\t */\n\tlowValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for X high value.\n\t */\n\thighValueXShow?: \"highValueXWorking\" | \"highValueXChange\" | \"highValueXChangePercent\" | \"highValueXChangeSelection\" | \"highValueXChangeSelectionPercent\" | \"highValueXChangePrevious\" | \"highValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\thighValueYShow?: \"highValueYWorking\" | \"highValueYChange\" | \"highValueYChangePercent\" | \"highValueYChangeSelection\" | \"highValueYChangeSelectionPercent\" | \"highValueYChangePrevious\" | \"highValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueXGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueYGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Horizontal location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationX?: number;\n\n\t/**\n\t * Vertical location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationY?: number;\n\n\t/**\n\t * Horizontal location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationX?: number;\n\n\t/**\n\t * Vertical location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationY?: number;\n\n\n\t/**\n\t * Input data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryXField?: string;\n\n\t/**\n\t * Input data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryYField?: string;\n\n\t/**\n\t * Display data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryXField?: string;\n\n\t/**\n\t * Display data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryYField?: string;\n\n\t/**\n\t * If set to `true` this series will be ignored when calculating scale of the\n\t * related axes.\n\t *\n\t * @default false\n\t */\n\tignoreMinMax?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tvcx?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvcy?: number;\n\n\t/**\n\t * Horizontal location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationX?: number;\n\n\t/**\n\t * Vertical location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationY?: number;\n\n\t/**\n\t * Horizontal location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationX?: number;\n\n\t/**\n\t * Vertical location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationY?: number;\n\n\t/**\n\t * If set to `true` [[XYCursor]] will show closest data item from series\n\t * even if it is outside currently hovered date axis interval.\n\t *\n\t * This setting is relevant only if `baseAxis` is a date axis.\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * Text to use for series legend label when no particular category/interval\n\t * is selected.\n\t */\n\tlegendRangeLabelText?: string;\n\n\t/**\n\t * Text to use for series legend value label when no particular\n\t * category/interval is selected.\n\t */\n\tlegendRangeValueText?: string;\n\n\n\t/**\n\t * If set to `true`, series bullets will be masked by plot area.\n\t */\n\tmaskBullets?: boolean;\n\n\t/**\n\t * Whether series' tooltip should inherit its color from series or its first\n\t * bullet.\n\t *\n\t * @default \"series\"\n\t */\n\tseriesTooltipTarget?: \"series\" | \"bullet\";\n\n\t/**\n\t * Indicates horizontal position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionX?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\t/**\n\t * Indicates vertical position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionY?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\n\t/**\n\t * If set to `true` data items for this series won't be grouped even if\n\t * the `groupData: true` is set on a related [[DateAxis]].\n\t * \n\t * @since 5.0.19\n\t */\n\tgroupDataDisabled?: boolean;\n\n\t/**\n\t * A [[DataItem]] that is being used for current tooltip, e.g. by a chart\n\t * cursor.\n\t *\n\t * @since 5.1.2\n\t */\n\ttooltipDataItem?: DataItem<IXYSeriesDataItem>\n\n\t/**\n\t * If set to `true`, when data is grouped, the `originals` setting of the\n\t * group data items will be populated by the original (source) data items\n\t * that fall into the group.\n\t *\n\t * Please note that if `groupDataCallback` is set, this setting is ignored\n\t * as originals will always be included, regardless of the value.\n\t *\n\t * @since 5.1.11\n\t * @default false\n\t */\n\tgroupDataWithOriginals?: boolean;\n\n\t/**\n\t * A custom function to call when grouping data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Custom_aggregation_functions} for more info\n\t * @since 5.1.11\n\t */\n\tgroupDataCallback?: (dataItem: DataItem<IXYSeriesDataItem>, interval: ITimeInterval) => void;\n\n}\n\nexport interface IXYSeriesPrivate extends ISeriesPrivate {\n\n\tminX?: number;\n\tmaxX?: number;\n\n\tminY?: number;\n\tmaxY?: number;\n\n\tselectionMinX?: number;\n\tselectionMaxX?: number;\n\n\tselectionMinY?: number;\n\tselectionMaxY?: number;\n\n\tvalueXAverage?: number;\n\tvalueXCount?: number;\n\tvalueXSum?: number;\n\tvalueXAbsoluteSum?: number;\n\tvalueXLow?: number;\n\tvalueXHigh?: number;\n\tvalueXOpen?: number;\n\tvalueXClose?: number;\n\n\tvalueYAverage?: number;\n\tvalueYCount?: number;\n\tvalueYSum?: number;\n\tvalueYAbsoluteSum?: number;\n\tvalueYLow?: number;\n\tvalueYHigh?: number;\n\tvalueYOpen?: number;\n\tvalueYClose?: number;\n\n\tvalueXAverageSelection?: number;\n\tvalueXCountSelection?: number;\n\tvalueXSumSelection?: number;\n\tvalueXAbsoluteSumSelection?: number;\n\tvalueXLowSelection?: number;\n\tvalueXHighSelection?: number;\n\tvalueXOpenSelection?: number;\n\tvalueXCloseSelection?: number;\n\n\tvalueYAverageSelection?: number;\n\tvalueYCountSelection?: number;\n\tvalueYSumSelection?: number;\n\tvalueYAbsoluteSumSelection?: number;\n\tvalueYLowSelection?: number;\n\tvalueYHighSelection?: number;\n\tvalueYOpenSelection?: number;\n\tvalueYCloseSelection?: number;\n\n\topenValueXAverage?: number;\n\topenValueXCount?: number;\n\topenValueXSum?: number;\n\topenValueXAbsoluteSum?: number;\n\topenValueXLow?: number;\n\topenValueXHigh?: number;\n\topenValueXOpen?: number;\n\topenValueXClose?: number;\n\n\topenValueYAverage?: number;\n\topenValueYCount?: number;\n\topenValueYSum?: number;\n\topenValueYAbsoluteSum?: number;\n\topenValueYLow?: number;\n\topenValueYHigh?: number;\n\topenValueYOpen?: number;\n\topenValueYClose?: number;\n\n\topenValueXAverageSelection?: number;\n\topenValueXCountSelection?: number;\n\topenValueXSumSelection?: number;\n\topenValueXAbsoluteSumSelection?: number;\n\topenValueXLowSelection?: number;\n\topenValueXHighSelection?: number;\n\topenValueXOpenSelection?: number;\n\topenValueXCloseSelection?: number;\n\n\topenValueYAverageSelection?: number;\n\topenValueYCountSelection?: number;\n\topenValueYSumSelection?: number;\n\topenValueYAbsoluteSumSelection?: number;\n\topenValueYLowSelection?: number;\n\topenValueYHighSelection?: number;\n\topenValueYOpenSelection?: number;\n\topenValueYCloseSelection?: number;\n\n\tlowValueXAverage?: number;\n\tlowValueXCount?: number;\n\tlowValueXSum?: number;\n\tlowValueXAbsoluteSum?: number;\n\tlowValueXLow?: number;\n\tlowValueXHigh?: number;\n\tlowValueXlow?: number;\n\tlowValueXClose?: number;\n\n\tlowValueYAverage?: number;\n\tlowValueYCount?: number;\n\tlowValueYSum?: number;\n\tlowValueYAbsoluteSum?: number;\n\tlowValueYLow?: number;\n\tlowValueYHigh?: number;\n\tlowValueYlow?: number;\n\tlowValueYClose?: number;\n\n\tlowValueXAverageSelection?: number;\n\tlowValueXCountSelection?: number;\n\tlowValueXSumSelection?: number;\n\tlowValueXAbsoluteSumSelection?: number;\n\tlowValueXLowSelection?: number;\n\tlowValueXHighSelection?: number;\n\tlowValueXlowSelection?: number;\n\tlowValueXCloseSelection?: number;\n\n\tlowValueYAverageSelection?: number;\n\tlowValueYCountSelection?: number;\n\tlowValueYSumSelection?: number;\n\tlowValueYAbsoluteSumSelection?: number;\n\tlowValueYLowSelection?: number;\n\tlowValueYHighSelection?: number;\n\tlowValueYlowSelection?: number;\n\tlowValueYCloseSelection?: number;\n\n\thighValueXAverage?: number;\n\thighValueXCount?: number;\n\thighValueXSum?: number;\n\thighValueXAbsoluteSum?: number;\n\thighValueXLow?: number;\n\thighValueXHigh?: number;\n\thighValueXhigh?: number;\n\thighValueXClose?: number;\n\n\thighValueYAverage?: number;\n\thighValueYCount?: number;\n\thighValueYSum?: number;\n\thighValueYAbsoluteSum?: number;\n\thighValueYLow?: number;\n\thighValueYHigh?: number;\n\thighValueYhigh?: number;\n\thighValueYClose?: number;\n\n\thighValueXAverageSelection?: number;\n\thighValueXCountSelection?: number;\n\thighValueXSumSelection?: number;\n\thighValueXAbsoluteSumSelection?: number;\n\thighValueXLowSelection?: number;\n\thighValueXHighSelection?: number;\n\thighValueXhighSelection?: number;\n\thighValueXCloseSelection?: number;\n\n\thighValueYAverageSelection?: number;\n\thighValueYCountSelection?: number;\n\thighValueYSumSelection?: number;\n\thighValueYAbsoluteSumSelection?: number;\n\thighValueYLowSelection?: number;\n\thighValueYHighSelection?: number;\n\thighValueYhighSelection?: number;\n\thighValueYCloseSelection?: number;\n\n\toutOfSelection?: boolean;\n\n\tdoNotUpdateLegend?: boolean;\n}\n\n\n/**\n * A base class for all XY chart series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\n */\nexport abstract class XYSeries extends Series {\n\tpublic static className: string = \"XYSeries\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([XYSeries.className]);\n\n\tdeclare public _settings: IXYSeriesSettings;\n\tdeclare public _privateSettings: IXYSeriesPrivate;\n\tdeclare public _dataItemSettings: IXYSeriesDataItem;\n\tdeclare public _axisRangeType: IXYSeriesAxisRange;\n\tdeclare public _events: IXYSeriesEvents;\n\n\tprotected _xField!: string;\n\tprotected _yField!: string;\n\tprotected _xOpenField!: string;\n\tprotected _yOpenField!: string;\n\n\tprotected _xLowField!: string;\n\tprotected _xHighField!: string;\n\tprotected _yLowField!: string;\n\tprotected _yHighField!: string;\n\n\tprotected _axesDirty: boolean = false;\n\tpublic _stackDirty: boolean = false;\n\n\tprotected _selectionProcessed = false;\n\n\tdeclare public chart: XYChart | undefined;\n\n\tpublic _dataSets: { [index: string]: Array<DataItem<IXYSeriesDataItem>> } = {};\n\n\tpublic _mainContainerMask: Graphics | undefined;\n\n\tprotected _x: number = 0;\n\tprotected _y: number = 0;\n\n\tpublic _bullets: { [index: string]: Sprite } = {};\n\n\t/**\n\t * A [[Container]] that us used to put series' elements in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly mainContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A list of axis ranges that affect the series.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t */\n\tpublic readonly axisRanges: List<this[\"_axisRangeType\"]> = new List();\n\n\tprotected _skipped: boolean = false;\n\n\tprotected _couldStackTo: Array<XYSeries> = [];\n\n\tprotected _reallyStackedTo: { [index: number]: XYSeries } = {};\n\n\tpublic _stackedSeries: { [index: number]: XYSeries } = {};\n\n\tprotected _aLocationX0: number = 0;\n\tprotected _aLocationX1: number = 1;\n\tprotected _aLocationY0: number = 0;\n\tprotected _aLocationY1: number = 1;\n\n\tprotected _showBullets: boolean = true;\n\n\tprotected valueXFields = [\n\t\t\"valueX\",\n\t\t\"openValueX\",\n\t\t\"lowValueX\",\n\t\t\"highValueX\"\n\t];\n\n\tprotected valueYFields = [\n\t\t\"valueY\",\n\t\t\"openValueY\",\n\t\t\"lowValueY\",\n\t\t\"highValueY\"\n\t];\n\n\tpublic _valueXFields!: Array<string>;\n\tpublic _valueYFields!: Array<string>;\n\n\t// used for full min/max\n\tprotected _valueXShowFields!: Array<string>;\n\tprotected _valueYShowFields!: Array<string>;\n\n\t// used for selection (uses working)\n\tpublic __valueXShowFields!: Array<string>;\n\tpublic __valueYShowFields!: Array<string>;\n\n\tprotected _emptyDataItem = new DataItem(this, undefined, {});\n\n\tpublic _dataSetId?: string;\n\n\tprotected _tooltipFieldX?: string;\n\tprotected _tooltipFieldY?: string;\n\n\tpublic _posXDp?: IDisposer;\n\tpublic _posYDp?: IDisposer;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\n\t\tthis.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\", \"lowValueX\", \"lowValueY\", \"highValueX\", \"highValueY\");\n\n\t\tthis._setRawDefault(\"vcx\", 1);\n\t\tthis._setRawDefault(\"vcy\", 1);\n\t\t// this can't go to themes, as data might be parsed before theme\n\t\tthis._setRawDefault(\"valueXShow\", \"valueXWorking\");\n\t\tthis._setRawDefault(\"valueYShow\", \"valueYWorking\");\n\n\t\tthis._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\n\t\tthis._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXShow\", \"lowValueXWorking\");\n\t\tthis._setRawDefault(\"lowValueYShow\", \"lowValueYWorking\");\n\n\t\tthis._setRawDefault(\"highValueXShow\", \"highValueXWorking\");\n\t\tthis._setRawDefault(\"highValueYShow\", \"highValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXGrouped\", \"low\");\n\t\tthis._setRawDefault(\"lowValueYGrouped\", \"low\");\n\n\t\tthis._setRawDefault(\"highValueXGrouped\", \"high\");\n\t\tthis._setRawDefault(\"highValueYGrouped\", \"high\");\n\n\n\n\t\tsuper._afterNew();\n\n\t\tthis.set(\"maskContent\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axisRange) => {\n\t\t\t\t\tthis._removeAxisRange(axisRange);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxisRange(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tthis.states.create(\"hidden\", <any>{ opacity: 1, visible: false });\n\n\t\tthis.onPrivate(\"startIndex\", ()=>{\n\t\t\tthis.root.events.once(\"frameended\", ()=>{\n\t\t\t\tthis.updateLegendValue();\t\t\t\n\t\t\t})\t\t\t\n\t\t})\n\n\t\tthis.onPrivate(\"endIndex\", ()=>{\t\t\t\n\t\t\tthis.root.events.once(\"frameended\", ()=>{\n\t\t\t\tthis.updateLegendValue();\t\t\t\n\t\t\t})\n\t\t})\t\t\n\n\t\tthis._makeFieldNames();\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst container = Container.new(this._root, {});\n\t\taxisRange.container = container;\n\t\tthis.children.push(container);\n\n\t\taxisRange.series = this;\n\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\taxisDataItem.setRaw(\"isRange\", true);\n\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\tif (axis) {\n\t\t\taxis._processAxisRange(axisDataItem, [\"range\", \"series\"]);\n\n\t\t\tconst bullet = axisDataItem.get(\"bullet\");\n\t\t\tif (bullet) {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst axisFill = axisDataItem.get(\"axisFill\");\n\t\t\tif (axisFill) {\n\t\t\t\tcontainer.set(\"mask\", axisFill);\n\t\t\t}\n\t\t\taxis._seriesAxisRanges.push(axisDataItem);\n\t\t}\n\t}\n\n\tprotected _removeAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\taxis.disposeDataItem(axisDataItem);\n\n\t\t$array.remove(axis._seriesAxisRanges, axisDataItem);\n\n\t\tconst container = axisRange.container;\n\t\tif (container) {\n\t\t\tcontainer.dispose();\n\t\t}\n\t}\n\n\tprotected _updateFields() {\n\t\tsuper._updateFields();\n\n\t\tthis._valueXFields = [];\n\t\tthis._valueYFields = [];\n\t\tthis._valueXShowFields = [];\n\t\tthis._valueYShowFields = [];\n\n\t\tthis.__valueXShowFields = [];\n\t\tthis.__valueYShowFields = [];\n\n\t\tif (this.valueXFields) {\n\t\t\t$array.each(this.valueXFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueXFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueXShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueXShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueXShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (this.valueYFields) {\n\t\t\t$array.each(this.valueYFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueYFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueYShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueYShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\tthis._bullets = {};\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.series.removeValue(this);\n\t\t}\n\n\t\t$array.removeFirst(this.get(\"xAxis\").series, this);\n\t\t$array.removeFirst(this.get(\"yAxis\").series, this);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _min<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = min(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _max<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = max(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\tprotected _shouldMakeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>): boolean {\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tif (!xAxis.inited || !yAxis.inited) {\n\t\t\treturn false\n\t\t}\n\t\tconst minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\tif (minBulletDistance > 0) {\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\n\t\t\tlet count = endIndex - startIndex;\n\n\t\t\tif (xAxis == baseAxis) {\n\t\t\t\tif (xAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (yAxis == baseAxis) {\n\t\t\t\tif (yAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (dataItem.get(this._xField as any) != null && dataItem.get(this._yField as any) != null) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _makeFieldNames() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst xName = xAxis.getPrivate(\"name\")!;\n\t\tconst xCapName = $utils.capitalizeFirst(xName);\n\n\t\tconst yName = yAxis.getPrivate(\"name\")!;\n\t\tconst yCapName = $utils.capitalizeFirst(yName);\n\n\t\tconst xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\")!\n\t\tconst yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\")!\n\n\t\tconst open = \"open\";\n\t\tconst low = \"low\";\n\t\tconst high = \"high\";\n\t\tconst show = \"Show\";\n\n\t\tif (xAxis.className === \"ValueAxis\") {\n\t\t\tthis._xField = this.get(<any>(xName + xLetter! + show));\n\t\t\tthis._xOpenField = this.get(<any>(open + xCapName + xLetter! + show));\n\t\t\tthis._xLowField = this.get(<any>(low + xCapName + xLetter! + show));\n\t\t\tthis._xHighField = this.get(<any>(high + xCapName + xLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._xField = <any>(xName + xLetter!);\n\t\t\tthis._xOpenField = <any>(open + xCapName + xLetter!);\n\t\t\tthis._xLowField = <any>(low + xCapName + xLetter!);\n\t\t\tthis._xHighField = <any>(high + xCapName + xLetter!);\n\t\t}\n\n\t\tif (yAxis.className === \"ValueAxis\") {\n\t\t\tthis._yField = this.get(<any>(yName + yLetter! + show));\n\t\t\tthis._yOpenField = this.get(<any>(open + yCapName + yLetter! + show));\n\t\t\tthis._yLowField = this.get(<any>(low + yCapName + yLetter! + show));\n\t\t\tthis._yHighField = this.get(<any>(high + yCapName + yLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._yField = <any>(yName + yLetter!);\n\t\t\tthis._yOpenField = <any>(open + yCapName + yLetter!);\n\t\t\tthis._yLowField = <any>(low + yCapName + yLetter!);\n\t\t\tthis._yHighField = <any>(high + yCapName + yLetter!);\n\t\t}\n\t}\n\n\tprotected _fixVC() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst hiddenState = this.states.lookup(\"hidden\");\n\t\tconst sequencedInterpolation = this.get(\"sequencedInterpolation\");\n\n\t\tif (hiddenState) {\n\t\t\tlet value = 0;\n\t\t\tif (sequencedInterpolation) {\n\t\t\t\tvalue = 0.999999999999; // makes animate, good for stacked\n\t\t\t}\n\n\t\t\tif (xAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleMaskBullets() {\n\t\tif (this.isDirty(\"maskBullets\")) {\n\t\t\tthis.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\n\t\t}\n\t}\n\n\tpublic _fixPosition() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tthis.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent!.get(\"paddingLeft\", 0));\n\t\tthis.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent!.get(\"paddingTop\", 0));\n\n\t\tthis.bulletsContainer.set(\"y\", this.y());\n\t\tthis.bulletsContainer.set(\"x\", this.x());\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis._bullets = {};\n\n\t\tif (this.isDirty(\"valueYShow\") || this.isDirty(\"valueXShow\") || this.isDirty(\"openValueYShow\") || this.isDirty(\"openValueXShow\") || this.isDirty(\"lowValueYShow\") || this.isDirty(\"lowValueXShow\") || this.isDirty(\"highValueYShow\") || this.isDirty(\"highValueXShow\")) {\n\t\t\tthis._updateFields();\n\t\t\tthis._makeFieldNames();\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tif (this.isDirty(\"xAxis\") || this.isDirty(\"yAxis\")) {\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tthis.set(\"width\", this.get(\"xAxis\").width());\n\t\tthis.set(\"height\", this.get(\"yAxis\").height());\n\n\t\tthis._handleMaskBullets();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tconst tooltipPositionX = this.get(\"tooltipPositionX\");\n\t\tlet tooltipFieldX: string;\n\n\t\tswitch (tooltipPositionX) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldX = this._xOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldX = this._xLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldX = this._xHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldX = this._xField;\n\t\t}\n\t\tthis._tooltipFieldX = tooltipFieldX;\n\n\t\tconst tooltipPositionY = this.get(\"tooltipPositionY\");\n\t\tlet tooltipFieldY: string;\n\t\tswitch (tooltipPositionY) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldY = this._yOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldY = this._yLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldY = this._yHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldY = this._yField;\n\t\t}\n\t\tthis._tooltipFieldY = tooltipFieldY;\n\n\t\tif (this.isDirty(\"baseAxis\")) {\n\t\t\tthis._fixVC();\n\t\t}\n\n\n\t\tthis._fixPosition();\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (this.isDirty(\"stacked\")) {\n\t\t\tif (stacked) {\n\t\t\t\tif (this._valuesDirty && !this._dataProcessed) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._stack();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._unstack();\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty && !this._dataProcessed) {\n\t\t\tthis._dataProcessed = true;\n\n\t\t\tif (stacked) {\n\t\t\t\tthis._stack();\n\t\t\t}\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t$array.each(this._valueXShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedXValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minX\", value);\n\t\t\t\t\t\tthis._max(\"maxX\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(this._valueYShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedYValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minY\", value);\n\t\t\t\t\t\tthis._max(\"maxY\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\txAxis.processSeriesDataItem(dataItem, this._valueXFields);\n\t\t\t\tyAxis.processSeriesDataItem(dataItem, this._valueYFields);\n\t\t\t})\n\n\t\t\txAxis._seriesValuesDirty = true;\n\t\t\tyAxis._seriesValuesDirty = true;\n\n\t\t\tif (!this.get(\"ignoreMinMax\")) {\n\t\t\t\tif (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\n\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t\tif (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\n\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._markStakedDirtyStack();\n\n\t\t\t//this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\n\t\t\tif (!this.get(\"tooltipDataItem\")) {\n\t\t\t\tthis.updateLegendValue(undefined);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\n\t\t\tthis._markStakedDirtyStack();\n\t\t}\n\n\t\tif (!this._dataGrouped) {\n\t\t\txAxis._groupSeriesData(this);\n\t\t\tyAxis._groupSeriesData(this);\n\t\t\tthis._dataGrouped = true;\n\t\t}\n\n\t\tif (this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"adjustedStartIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._sizeDirty) {\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\t\t\tlet minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\t\tif (minBulletDistance > 0 && baseAxis) {\n\t\t\t\tif (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\n\t\t\t\t\tthis._showBullets = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._showBullets = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this.isPrivateDirty(\"adjustedStartIndex\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\n\t\t\t\tthis._selectionProcessed = true;\n\n\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\t\t\t\tconst stacked = this.get(\"stacked\", false);\n\t\t\t\tconst outOfSelection = this.getPrivate(\"outOfSelection\");\n\n\t\t\t\tif (baseAxis === xAxis || !baseAxis) {\n\t\t\t\t\tyAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinY\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxY\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processYSelectionDataItem(this.dataItems[i], vcy, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (baseAxis === yAxis || !baseAxis) {\n\t\t\t\t\txAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinX\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxX\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processXSelectionDataItem(this.dataItems[i], vcx, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (baseAxis === xAxis || !baseAxis) {\n\t\t\t\t\tif (this.get(\"valueYShow\") !== \"valueYWorking\") {\n\t\t\t\t\t\tconst selectionMinY = this.getPrivate(\"selectionMinY\");\n\t\t\t\t\t\tif (selectionMinY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minY\", selectionMinY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxY = this.getPrivate(\"selectionMaxY\");\n\t\t\t\t\t\tif (selectionMaxY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxY\", selectionMaxY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (baseAxis === yAxis || !baseAxis) {\n\t\t\t\t\tif (this.get(\"valueXShow\") !== \"valueXWorking\") {\n\t\t\t\t\t\tconst selectionMinX = this.getPrivate(\"selectionMinX\");\n\t\t\t\t\t\tif (selectionMinX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minX\", selectionMinX);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxX = this.getPrivate(\"selectionMaxX\")\n\t\t\t\t\t\tif (selectionMaxX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxX\", selectionMaxX);\n\t\t\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\n\t\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\n\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\t\t\t\t// this.updateLegendValue(undefined); flickers while panning\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _makeRangeMask() {\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tlet mainContainerMask = this._mainContainerMask;\n\t\t\tif (mainContainerMask == null) {\n\t\t\t\tmainContainerMask = this.children.push(Graphics.new(this._root, {}));\n\t\t\t\tthis._mainContainerMask = mainContainerMask;\n\n\t\t\t\tmainContainerMask.set(\"draw\", (display, target) => {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tconst w = this._root.container.width();\n\t\t\t\t\t\tconst h = this._root.container.height();\n\t\t\t\t\t\tdisplay.moveTo(-w, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, -h);\n\n\n\t\t\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\t\t\tconst fill = axisRange.axisDataItem.get(\"axisFill\");\n\n\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\tif (fill) {\n\t\t\t\t\t\t\t\t\tlet draw = fill.get(\"draw\");\n\t\t\t\t\t\t\t\t\tif (draw) {\n\t\t\t\t\t\t\t\t\t\tdraw(display, target);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tthis.mainContainer._display.mask = mainContainerMask!._display;\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tmainContainerMask.markDirty();\n\t\t\tmainContainerMask._markDirtyKey(\"fill\");\n\t\t}\n\t\telse {\n\t\t\tthis.mainContainer._display.mask = null;\n\t\t}\n\t}\n\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\t// save for performance\n\t\tthis._x = this.x();\n\t\tthis._y = this.y();\n\t\tthis._makeRangeMask();\n\t}\n\n\tprotected _stack() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst seriesIndex = chart.series.indexOf(this);\n\n\t\t\tthis._couldStackTo = [];\n\n\t\t\tif (seriesIndex > 0) {\n\t\t\t\tlet series: XYSeries;\n\n\t\t\t\tfor (let i = seriesIndex - 1; i >= 0; i--) {\n\t\t\t\t\tseries = chart.series.getIndex(i)!;\n\t\t\t\t\tif (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\n\t\t\t\t\t\tthis._couldStackTo.push(series);\n\t\t\t\t\t\tif (!series.get(\"stacked\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._stackDataItems();\n\t\t}\n\t}\n\n\tpublic _unstack() {\n\n\t\t$object.each(this._reallyStackedTo, (_key, value) => {\n\t\t\tdelete (value._stackedSeries[this.uid]);\n\t\t})\n\n\t\tthis._reallyStackedTo = {};\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tdataItem.setRaw(\"stackToItemY\", undefined);\n\t\t\tdataItem.setRaw(\"stackToItemX\", undefined);\n\t\t})\n\t}\n\n\tprotected _stackDataItems() {\n\t\t// this works only with the same number of data @todo: search by date/category?\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tlet field: \"valueX\" | \"valueY\";\n\t\tlet stackToItemKey: \"stackToItemX\" | \"stackToItemY\";\n\t\tif (baseAxis === xAxis) {\n\t\t\tfield = \"valueY\";\n\t\t\tstackToItemKey = \"stackToItemY\";\n\t\t}\n\t\telse if (baseAxis === yAxis) {\n\t\t\tfield = \"valueX\";\n\t\t\tstackToItemKey = \"stackToItemX\";\n\t\t}\n\n\t\tlet len = this._couldStackTo.length;\n\t\tlet index = 0;\n\t\tconst stackToNegative = this.get(\"stackToNegative\");\n\n\t\tthis._reallyStackedTo = {};\n\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tfor (let s = 0; s < len; s++) {\n\t\t\t\tlet stackToSeries = this._couldStackTo[s];\n\t\t\t\tlet stackToItem = stackToSeries.dataItems[index];\n\t\t\t\tlet value = dataItem.get(field);\n\n\t\t\t\tif (stackToItem) {\n\t\t\t\t\tlet stackValue = stackToItem.get(field);\n\t\t\t\t\tif (stackToNegative) {\n\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\tif ($type.isNumber(stackValue)) {\n\t\t\t\t\t\t\t\tif (value >= 0 && stackValue >= 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (value < 0 && stackValue < 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(stackValue)) {\n\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tindex++;\n\t\t})\n\t}\n\n\tprotected processXSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcx: number, stacked: boolean) {\n\t\t$array.each(this.__valueXShowFields, (key) => {\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedXValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinX\", value);\n\t\t\t\tthis._max(\"selectionMaxX\", value * vcx);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected processYSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcy: number, stacked: boolean) {\n\t\t$array.each(this.__valueYShowFields, (key) => {\n\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedYValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinY\", value);\n\t\t\t\tthis._max(\"selectionMaxY\", value * vcy);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedYValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedXValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis.updateLegendMarker();\n\t}\n\n\tpublic _markDirtyAxes() {\n\t\tthis._axesDirty = true;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _markDataSetDirty() {\n\t\tthis._afterDataChange();\n\t\tthis._valuesDirty = true;\n\t\tthis._dataProcessed = false;\n\t\tthis._aggregatesCalculated = false;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._axesDirty = false;\n\t\tthis._selectionProcessed = false;\n\t\tthis._stackDirty = false;\n\t\tthis._dataProcessed = false;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\t\tlet sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tlet dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tlet locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tlet locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\t\tlet positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1));\n\t\t\tlet positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1))\n\n\t\t\tlet point = this.getPoint(positionX, positionY);\n\n\t\t\tlet left = dataItem.get(\"left\", point.x);\n\t\t\tlet right = dataItem.get(\"right\", point.x);\n\t\t\tlet top = dataItem.get(\"top\", point.y);\n\t\t\tlet bottom = dataItem.get(\"bottom\", point.y);\n\n\t\t\tlet x = 0;\n\t\t\tlet y = 0;\n\n\t\t\tlet w = right - left;\n\t\t\tlet h = bottom - top;\n\n\t\t\tif (this._shouldShowBullet(positionX, positionY)) {\n\t\t\t\tsprite.setPrivate(\"visible\", !bullet.getPrivate(\"hidden\"));\n\n\t\t\t\tlet field = bullet.get(\"field\");\n\n\t\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\t\tif (field != undefined) {\n\t\t\t\t\tlet realField: string | undefined;\n\n\t\t\t\t\tif (baseAxis == xAxis) {\n\t\t\t\t\t\tif (field == \"value\") {\n\t\t\t\t\t\t\trealField = this._yField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"open\") {\n\t\t\t\t\t\t\trealField = this._yOpenField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"high\") {\n\t\t\t\t\t\t\trealField = this._yHighField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"low\") {\n\t\t\t\t\t\t\trealField = this._yLowField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (realField) {\n\t\t\t\t\t\t\tpositionY = yAxis.getDataItemPositionY(dataItem, realField as any, 0, this.get(\"vcy\", 1))\n\n\t\t\t\t\t\t\tpoint = yAxis.get(\"renderer\").positionToPoint(positionY);\n\n\t\t\t\t\t\t\ty = point.y;\n\t\t\t\t\t\t\tx = left + w * locationX;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (field == \"value\") {\n\t\t\t\t\t\t\trealField = this._xField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"open\") {\n\t\t\t\t\t\t\trealField = this._xOpenField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"high\") {\n\t\t\t\t\t\t\trealField = this._xHighField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"low\") {\n\t\t\t\t\t\t\trealField = this._xLowField;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (realField) {\n\t\t\t\t\t\t\tpositionX = xAxis.getDataItemPositionX(dataItem, realField as any, 0, this.get(\"vcx\", 1));\n\n\t\t\t\t\t\t\tpoint = xAxis.get(\"renderer\").positionToPoint(positionX);\n\n\t\t\t\t\t\t\tx = point.x;\n\t\t\t\t\t\t\ty = bottom - h * locationY;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tx = left + w * locationX;\n\t\t\t\t\ty = bottom - h * locationY;\n\t\t\t\t}\n\n\t\t\t\tconst stacked = bullet.get(\"stacked\");\n\t\t\t\tif (stacked) {\n\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\tif (baseAxis == xAxis) {\n\t\t\t\t\t\tlet previousBullet = this._bullets[positionX + \"_\" + positionY];\n\t\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\t\tlet previousBounds = previousBullet.bounds();\n\t\t\t\t\t\t\tlet bounds = sprite.localBounds();\n\t\t\t\t\t\t\tlet yo = y;\n\t\t\t\t\t\t\ty = previousBounds.top;\n\n\t\t\t\t\t\t\tif (stacked == \"down\") {\n\t\t\t\t\t\t\t\ty = previousBounds.bottom - bounds.top;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (stacked == \"auto\") {\n\t\t\t\t\t\t\t\tif (chart) {\n\t\t\t\t\t\t\t\t\tif (yo < chart.plotContainer.height() / 2) {\n\t\t\t\t\t\t\t\t\t\ty = previousBounds.bottom - bounds.top;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\ty += bounds.bottom;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\ty += bounds.bottom;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._bullets[positionX + \"_\" + positionY] = sprite;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet previousBullet = this._bullets[positionX + \"_\" + positionY];\n\t\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\t\tlet previousBounds = previousBullet.bounds();\n\t\t\t\t\t\t\tlet bounds = sprite.localBounds();\n\t\t\t\t\t\t\tlet xo = x;\n\t\t\t\t\t\t\tx = previousBounds.right;\n\n\t\t\t\t\t\t\tif (stacked == \"down\") {\n\t\t\t\t\t\t\t\tx = previousBounds.left - bounds.right;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (stacked == \"auto\") {\n\t\t\t\t\t\t\t\tif (chart) {\n\t\t\t\t\t\t\t\t\tif (xo < chart.plotContainer.width() / 2) {\n\t\t\t\t\t\t\t\t\t\tx = previousBounds.left - bounds.right;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tx -= bounds.left;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tx -= bounds.left;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._bullets[positionX + \"_\" + positionY] = sprite;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (sprite.isType(\"Label\")) {\n\t\t\t\t\tsprite.setPrivate(\"maxWidth\", Math.abs(w));\n\t\t\t\t\tsprite.setPrivate(\"maxHeight\", Math.abs(h));\n\t\t\t\t}\n\n\t\t\t\tsprite.setAll({ x, y });\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _shouldShowBullet(_positionX: number, _positionY: number): boolean {\n\t\treturn this._showBullets;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setDataSet(id: string) {\n\t\tif (this._dataSets[id]) {\n\t\t\tthis._handleDataSetChange();\n\t\t\tthis._dataItems = this._dataSets[id];\n\t\t\tthis._markDataSetDirty();\n\t\t\tthis._dataSetId = id;\n\n\t\t\tconst type = \"datasetchanged\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this, id: id });\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic resetGrouping() {\n\t\t$object.each(this._dataSets, (_key, dataSet) => {\n\t\t\tif (dataSet != this._mainDataItems) {\n\t\t\t\t$array.each(dataSet, (dataItem) => {\n\t\t\t\t\tthis.disposeDataItem(dataItem);\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t\tthis._dataSets = {};\n\t\tthis._dataItems = this.mainDataItems;\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\tlet bullets = dataItem.bullets;\n\t\t\tif (bullets) {\n\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\tif (bullet) {\n\t\t\t\t\t\tlet sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\n\t\tthis._selectionProcessed = false; // for totals to be calculated\n\t}\n\n\t/**\n\t * Shows hidden series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async show(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Array<Promise<any>> = [];\n\t\tpromises.push(super.show(duration).then(() => {\n\t\t\tthis._isShowing = false;\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\t\t\tlet baseAxis = this.get(\"baseAxis\");\n\t\t\tif (yAxis !== baseAxis) {\n\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t\tif (xAxis !== baseAxis) {\n\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.show(duration));\n\t\tpromises.push(this._sequencedShowHide(true, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async hide(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Promise<any>[] = [];\n\t\tpromises.push(super.hide(duration).then(() => {\n\t\t\tthis._isHiding = false;\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.hide(duration));\n\t\tpromises.push(this._sequencedShowHide(false, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\t$array.each(this._valueFields, (key) => {\n\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: dataItem.get(key as any), duration: duration!, easing: easing }).waitForStop());\n\t\t})\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst hiddenState = this.states.create(\"hidden\", {})\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\n\t\t}\n\n\t\tconst easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (baseAxis === xAxis || !baseAxis) {\n\n\t\t\t$array.each(this._valueYFields, (key) => {\n\t\t\t\tlet min = yAxis.getPrivate(\"min\");\n\t\t\t\tlet baseValue = yAxis.baseValue();\n\n\t\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\t\tbaseValue = min;\n\t\t\t\t}\n\t\t\t\tif (stacked) {\n\t\t\t\t\tbaseValue = 0;\n\t\t\t\t}\n\n\t\t\t\tlet value = dataItem.get(key as any);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tif (baseAxis === yAxis || !baseAxis) {\n\n\t\t\tlet min = xAxis.getPrivate(\"min\");\n\t\t\tlet baseValue = xAxis.baseValue();\n\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\tbaseValue = min;\n\t\t\t}\n\t\t\tif (stacked) {\n\t\t\t\tbaseValue = 0;\n\t\t\t}\n\n\t\t\t$array.each(this._valueXFields, (key) => {\n\t\t\t\tlet value = dataItem.get(key as any);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tpublic _markDirtyStack() {\n\t\tthis._stackDirty = true;\n\t\tthis.markDirty();\n\t\tthis._markStakedDirtyStack();\n\t}\n\n\tprotected _markStakedDirtyStack() {\n\t\tconst stackedSeries = this._stackedSeries;\n\t\tif (stackedSeries) {\n\n\t\t\t$object.each(stackedSeries, (_key, value) => {\n\t\t\t\tif (!value._stackDirty) {\n\t\t\t\t\tvalue._markDirtyStack();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\t\tif (this._skipped) {\n\t\t\tthis._markDirtyAxes();\n\t\t\tthis._skipped = false;\n\t\t}\n\t}\n\n\t/**\n\t * Shows a tooltip for specific data item.\n\t *\n\t * @param  dataItem  Data item\n\t */\n\tpublic showDataItemTooltip(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tif (!this.getPrivate(\"doNotUpdateLegend\")) {\n\t\t\tthis.updateLegendMarker(dataItem);\n\t\t\tthis.updateLegendValue(dataItem);\n\t\t}\n\n\t\tconst tooltip = this.get(\"tooltip\");\n\n\t\tif (tooltip) {\n\t\t\tif (!this.isHidden() && this.get(\"visible\")) {\n\t\t\t\ttooltip._setDataItem(dataItem);\n\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlet locationX = this.get(\"locationX\", 0);\n\t\t\t\t\tlet locationY = this.get(\"locationY\", 1);\n\n\t\t\t\t\tlet itemLocationX = dataItem.get(\"locationX\", locationX);\n\t\t\t\t\tlet itemLocationY = dataItem.get(\"locationY\", locationY);\n\n\t\t\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\n\t\t\t\t\tconst xPos = xAxis.getDataItemPositionX(dataItem, this._tooltipFieldX!, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx);\n\t\t\t\t\tconst yPos = yAxis.getDataItemPositionY(dataItem, this._tooltipFieldY!, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy);\n\n\t\t\t\t\tconst point = this.getPoint(xPos, yPos);\n\n\t\t\t\t\tlet show = true;\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (dataItem.get(field as any) == null) {\n\t\t\t\t\t\t\tshow = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tif (show) {\n\t\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\t\tif (chart && chart.inPlot(point)) {\n\t\t\t\t\t\t\ttooltip.label.text.markDirtyText();\n\t\t\t\t\t\t\ttooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\n\t\t\t\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal({ x: point.x, y: point.y }));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.hideTooltip();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic hideTooltip(): Promise<void> | undefined {\n\t\tconst tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.set(\"tooltipTarget\", this);\n\t\t}\n\t\treturn super.hideTooltip();\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif (bullets && bullets.length > 0) {\n\t\t\t\tconst bullet = bullets[0];\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\treturn sprite;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendValue(dataItem?: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\n\t\t\tconst label = legendDataItem.get(\"label\");\n\t\t\tif (label) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\n\t\t\t\t}\n\n\t\t\t\tlabel.set(\"text\", txt);\n\t\t\t}\n\n\t\t\tconst valueLabel = legendDataItem.get(\"valueLabel\");\n\t\t\tif (valueLabel) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tvalueLabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvalueLabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\n\t\t\t\tvalueLabel.set(\"text\", txt);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getItemReaderLabel(): string {\n\t\tlet text = \"X: {\" + this._xField;\n\t\tif (this.get(\"xAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}; Y: {\" + this._yField;\n\t\tif (this.get(\"yAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}\";\n\t\treturn text;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPoint(positionX: number, positionY: number): IPoint {\n\t\tlet x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\n\t\tlet y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\n\n\t\t// if coordinate is super big, canvas fails to draw line, capping to some big number (won't make any visual difference)\n\t\tlet max = 999999999;\n\t\tif (y < -max) {\n\t\t\ty = -max;\n\t\t}\n\t\tif (y > max) {\n\t\t\ty = max;\n\t\t}\n\n\t\tif (x < -max) {\n\t\t\tx = -max;\n\t\t}\n\t\tif (x > max) {\n\t\t\tx = max;\n\t\t}\n\n\t\treturn { x: x, y: y };\n\t}\n\n\tprotected _shouldInclude(_position: number): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tthis.hideTooltip();\n\t\tthis.updateLegendValue(undefined);\n\t\tthis.updateLegendMarker(undefined);\n\t}\n\n\tprotected _afterDataChange() {\n\t\tsuper._afterDataChange();\n\t\tthis.get(\"xAxis\")._markDirtyKey(\"start\");\n\t\tthis.get(\"yAxis\")._markDirtyKey(\"start\");\n\t\tthis.resetExtremes();\n\t}\n\n\n\t/**\n\t * Resets cached axis scale values.\n\t */\n\tpublic resetExtremes() {\n\t\tthis.setPrivate(\"selectionMinX\", undefined);\n\t\tthis.setPrivate(\"selectionMaxX\", undefined);\n\t\tthis.setPrivate(\"selectionMinY\", undefined);\n\t\tthis.setPrivate(\"selectionMaxY\", undefined);\n\n\t\tthis.setPrivate(\"minX\", undefined);\n\t\tthis.setPrivate(\"minY\", undefined);\n\t\tthis.setPrivate(\"maxX\", undefined);\n\t\tthis.setPrivate(\"maxY\", undefined);\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): this[\"_axisRangeType\"] {\n\t\treturn this.axisRanges.push({\n\t\t\taxisDataItem: axisDataItem\n\t\t})\n\t}\n\n\t/**\n\t * A list of series's main (ungrouped) data items.\n\t *\n\t * @return  Data items\n\t */\n\tpublic get mainDataItems(): Array<DataItem<this[\"_dataItemSettings\"]>> {\n\t\treturn this._mainDataItems;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _adjustStartIndex(index: number): number {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tif (baseAxis == xAxis && xAxis.isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\tconst baseDuration = xAxis.baseDuration();\n\t\t\tconst minSelection = xAxis.getPrivate(\"selectionMin\", xAxis.getPrivate(\"min\", 0));\n\t\t\tconst dl = baseDuration * this.get(\"locationX\", 0.5);\n\n\t\t\tlet value = -Infinity;\n\n\t\t\twhile (value < minSelection) {\n\t\t\t\tconst dataItem = this.dataItems[index];\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tconst open = dataItem.open;\n\t\t\t\t\tif (open) {\n\t\t\t\t\t\tvalue = open[\"valueX\"];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue = dataItem.get(\"valueX\", 0);\n\t\t\t\t\t}\n\t\t\t\t\tvalue += dl;\n\n\t\t\t\t\tif (value < minSelection) {\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn index;\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
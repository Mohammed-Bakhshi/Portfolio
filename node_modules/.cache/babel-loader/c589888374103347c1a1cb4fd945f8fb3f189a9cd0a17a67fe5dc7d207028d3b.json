{"ast":null,"code":"import { Entity } from \"../../../core/util/Entity\";\nimport * as $object from \"../../../core/util/Object\";\n/**\r\n * Draws a bullet on an axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\r\n */\nexport class AxisBullet extends Entity {\n  constructor() {\n    super(...arguments);\n    /**\r\n     * Target axis object.\r\n     */\n    Object.defineProperty(this, \"axis\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n  }\n  _beforeChanged() {\n    super._beforeChanged();\n    const sprite = this.get(\"sprite\");\n    if (this.isDirty(\"sprite\")) {\n      if (sprite) {\n        sprite.setAll({\n          position: \"absolute\",\n          role: \"figure\"\n        });\n        this._disposers.push(sprite);\n      }\n    }\n    if (this.isDirty(\"location\")) {\n      const dataItem = sprite.dataItem;\n      if (this.axis && sprite && dataItem) {\n        this.axis._prepareDataItem(dataItem);\n      }\n    }\n  }\n  _dispose() {\n    const axis = this.axis;\n    if (axis) {\n      $object.each(axis._bullets, (key, bullet) => {\n        if (bullet.uid == this.uid) {\n          delete axis._bullets[key];\n        }\n      });\n    }\n    super._dispose();\n  }\n}\nObject.defineProperty(AxisBullet, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"AxisBullet\"\n});\nObject.defineProperty(AxisBullet, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Entity.classNames.concat([AxisBullet.className])\n});","map":{"version":3,"names":["Entity","$object","AxisBullet","constructor","Object","defineProperty","_beforeChanged","sprite","get","isDirty","setAll","position","role","_disposers","push","dataItem","axis","_prepareDataItem","_dispose","each","_bullets","key","bullet","uid","classNames","concat","className"],"sources":["C:\\Users\\Moham\\Downloads\\Github projects\\Digital-Portfolio-main\\Frontend\\node_modules\\src\\.internal\\charts\\xy\\axes\\AxisBullet.ts"],"sourcesContent":["import { Entity, IEntitySettings, IEntityPrivate } from \"../../../core/util/Entity\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Axis } from \"./Axis\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport * as $object from \"../../../core/util/Object\";\n\nexport interface IAxisBulletSettings extends IEntitySettings {\n\n\t/**\n\t * Relative location of the bullet within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * A visual element of the bullet.\n\t */\n\tsprite: Sprite;\n\n\t/**\n\t * Indicates if the bullet should be stacked on top of another bullet if it's\n\t * on the same position.\n\t *\n\t * Will work on horizontal or vertical axes only.\n\t *\n\t * @since 5.2.28\n\t * @default false\n\t */\n\tstacked?: boolean;\n\n}\n\nexport interface IAxisBulletPrivate extends IEntityPrivate {\n}\n\n/**\n * Draws a bullet on an axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n */\nexport class AxisBullet extends Entity {\n\n\t/**\n\t * Target axis object.\n\t */\n\tpublic axis: Axis<AxisRenderer> | undefined;\n\n\tdeclare public _settings: IAxisBulletSettings;\n\tdeclare public _privateSettings: IAxisBulletPrivate;\n\n\tpublic static className: string = \"AxisBullet\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([AxisBullet.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tconst sprite = this.get(\"sprite\");\n\n\t\tif (this.isDirty(\"sprite\")) {\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setAll({ position: \"absolute\", role: \"figure\" });\n\t\t\t\tthis._disposers.push(sprite);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"location\")) {\n\t\t\tconst dataItem = sprite.dataItem;\n\t\t\tif (this.axis && sprite && dataItem) {\n\t\t\t\tthis.axis._prepareDataItem(dataItem as any)\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _dispose() {\n\t\tconst axis = this.axis;\n\t\tif (axis) {\n\t\t\t$object.each(axis._bullets, (key, bullet) => {\n\t\t\t\tif (bullet.uid == this.uid) {\n\t\t\t\t\tdelete axis._bullets[key];\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tsuper._dispose();\n\t}\n}\n"],"mappings":"AAAA,SAASA,MAAM,QAAyC,2BAA2B;AAInF,OAAO,KAAKC,OAAO,MAAM,2BAA2B;AAgCpD;;;;;AAKA,OAAM,MAAOC,UAAW,SAAQF,MAAM;EAAtCG,YAAA;;IAEC;;;IAGAC,MAAA,CAAAC,cAAA;;;;;;EAwCD;EAhCQC,cAAcA,CAAA;IACpB,KAAK,CAACA,cAAc,EAAE;IAEtB,MAAMC,MAAM,GAAG,IAAI,CAACC,GAAG,CAAC,QAAQ,CAAC;IAEjC,IAAI,IAAI,CAACC,OAAO,CAAC,QAAQ,CAAC,EAAE;MAC3B,IAAIF,MAAM,EAAE;QACXA,MAAM,CAACG,MAAM,CAAC;UAAEC,QAAQ,EAAE,UAAU;UAAEC,IAAI,EAAE;QAAQ,CAAE,CAAC;QACvD,IAAI,CAACC,UAAU,CAACC,IAAI,CAACP,MAAM,CAAC;;;IAI9B,IAAI,IAAI,CAACE,OAAO,CAAC,UAAU,CAAC,EAAE;MAC7B,MAAMM,QAAQ,GAAGR,MAAM,CAACQ,QAAQ;MAChC,IAAI,IAAI,CAACC,IAAI,IAAIT,MAAM,IAAIQ,QAAQ,EAAE;QACpC,IAAI,CAACC,IAAI,CAACC,gBAAgB,CAACF,QAAe,CAAC;;;EAG9C;EAEUG,QAAQA,CAAA;IACjB,MAAMF,IAAI,GAAG,IAAI,CAACA,IAAI;IACtB,IAAIA,IAAI,EAAE;MACTf,OAAO,CAACkB,IAAI,CAACH,IAAI,CAACI,QAAQ,EAAE,CAACC,GAAG,EAAEC,MAAM,KAAI;QAC3C,IAAIA,MAAM,CAACC,GAAG,IAAI,IAAI,CAACA,GAAG,EAAE;UAC3B,OAAOP,IAAI,CAACI,QAAQ,CAACC,GAAG,CAAC;;MAE3B,CAAC,CAAC;;IAGH,KAAK,CAACH,QAAQ,EAAE;EACjB;;AAlCAd,MAAA,CAAAC,cAAA,CAAAH,UAAA;;;;SAAkC;;AAClCE,MAAA,CAAAC,cAAA,CAAAH,UAAA;;;;SAA0CF,MAAM,CAACwB,UAAU,CAACC,MAAM,CAAC,CAACvB,UAAU,CAACwB,SAAS,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
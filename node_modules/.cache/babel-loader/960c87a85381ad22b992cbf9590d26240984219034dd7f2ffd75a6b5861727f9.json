{"ast":null,"code":"/**\r\n * @ignore\r\n */\nexport class Registry {\n  constructor() {\n    /**\r\n     * Currently running version of amCharts.\r\n     */\n    Object.defineProperty(this, \"version\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"5.10.8\"\n    });\n    /**\r\n     * List of applied licenses.\r\n     * @ignore\r\n     */\n    Object.defineProperty(this, \"licenses\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    /**\r\n     * Entities that have their `id` setting set.\r\n     */\n    Object.defineProperty(this, \"entitiesById\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    /**\r\n     * All created [[Root]] elements.\r\n     */\n    Object.defineProperty(this, \"rootElements\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n  }\n}\n/**\r\n    * @ignore\r\n */\nexport const registry = new Registry();\n/**\r\n * Adds a license, e.g.:\r\n *\r\n * ```TypeScript\r\n * am5.addLicense(\"xxxxxxxx\");\r\n * ```\r\n * ```JavaScript\r\n * am5.addLicense(\"xxxxxxxx\");\r\n * ```\r\n *\r\n * Multiple licenses can be added to cover for multiple products.\r\n *\r\n * @param  license  License key\r\n */\nexport function addLicense(license) {\n  registry.licenses.push(license);\n}\n/**\r\n * Disposes all [[Root]] elements.\r\n */\nexport function disposeAllRootElements() {\n  let root;\n  while (root = registry.rootElements.pop()) {\n    root.dispose();\n  }\n}\n/**\r\n * Finds and returns a `Root` element assigned to a container with `id`.\r\n *\r\n * @param   id  Container ID\r\n * @return      Root\r\n * @since 5.9.2\r\n */\nexport function getRootById(id) {\n  let found;\n  registry.rootElements.forEach(item => {\n    if (item.dom.id == id) {\n      found = item;\n    }\n  });\n  return found;\n}","map":{"version":3,"names":["Registry","constructor","Object","defineProperty","registry","addLicense","license","licenses","push","disposeAllRootElements","root","rootElements","pop","dispose","getRootById","id","found","forEach","item","dom"],"sources":["C:\\Users\\Moham\\Downloads\\Github projects\\Digital-Portfolio-main\\Frontend\\node_modules\\src\\.internal\\core\\Registry.ts"],"sourcesContent":["\r\n/**\r\n * @ignore\r\n */\r\nexport class Registry {\r\n\t/**\r\n\t * Currently running version of amCharts.\r\n\t */\r\n\treadonly version: string = \"5.10.8\";\r\n\r\n\t/**\r\n\t * List of applied licenses.\r\n\t * @ignore\r\n\t */\r\n\tlicenses: String[] = [];\r\n\r\n\t/**\r\n\t * Entities that have their `id` setting set.\r\n\t */\r\n\tentitiesById: { [index: string]: any } = {};\r\n\r\n\t/**\r\n\t * All created [[Root]] elements.\r\n\t */\r\n\trootElements: any[] = [];\r\n\r\n}\r\n\r\n/**\r\n\t* @ignore\r\n */\r\nexport const registry = new Registry();\r\n\r\n/**\r\n * Adds a license, e.g.:\r\n *\r\n * ```TypeScript\r\n * am5.addLicense(\"xxxxxxxx\");\r\n * ```\r\n * ```JavaScript\r\n * am5.addLicense(\"xxxxxxxx\");\r\n * ```\r\n *\r\n * Multiple licenses can be added to cover for multiple products.\r\n *\r\n * @param  license  License key\r\n */\r\nexport function addLicense(license: string): void {\r\n\tregistry.licenses.push(license);\r\n}\r\n\r\n\r\n/**\r\n * Disposes all [[Root]] elements.\r\n */\r\nexport function disposeAllRootElements(): void {\r\n\tlet root;\r\n\twhile(root = registry.rootElements.pop()) {\r\n\t\troot.dispose();\r\n\t}\r\n}\r\n\r\n/**\r\n * Finds and returns a `Root` element assigned to a container with `id`.\r\n * \r\n * @param   id  Container ID\r\n * @return      Root\r\n * @since 5.9.2\r\n */\r\nexport function getRootById(id: string): any {\r\n\tlet found;\r\n\tregistry.rootElements.forEach((item) => {\r\n\t\tif (item.dom.id == id) {\r\n\t\t\tfound = item;\r\n\t\t}\r\n\t});\r\n\treturn found;\r\n}"],"mappings":"AACA;;;AAGA,OAAM,MAAOA,QAAQ;EAArBC,YAAA;IACC;;;IAGAC,MAAA,CAAAC,cAAA;;;;aAA2B;;IAE3B;;;;IAIAD,MAAA,CAAAC,cAAA;;;;aAAqB;;IAErB;;;IAGAD,MAAA,CAAAC,cAAA;;;;aAAyC;;IAEzC;;;IAGAD,MAAA,CAAAC,cAAA;;;;aAAsB;;EAEvB;;AAEA;;;AAGA,OAAO,MAAMC,QAAQ,GAAG,IAAIJ,QAAQ,EAAE;AAEtC;;;;;;;;;;;;;;AAcA,OAAM,SAAUK,UAAUA,CAACC,OAAe;EACzCF,QAAQ,CAACG,QAAQ,CAACC,IAAI,CAACF,OAAO,CAAC;AAChC;AAGA;;;AAGA,OAAM,SAAUG,sBAAsBA,CAAA;EACrC,IAAIC,IAAI;EACR,OAAMA,IAAI,GAAGN,QAAQ,CAACO,YAAY,CAACC,GAAG,EAAE,EAAE;IACzCF,IAAI,CAACG,OAAO,EAAE;;AAEhB;AAEA;;;;;;;AAOA,OAAM,SAAUC,WAAWA,CAACC,EAAU;EACrC,IAAIC,KAAK;EACTZ,QAAQ,CAACO,YAAY,CAACM,OAAO,CAAEC,IAAI,IAAI;IACtC,IAAIA,IAAI,CAACC,GAAG,CAACJ,EAAE,IAAIA,EAAE,EAAE;MACtBC,KAAK,GAAGE,IAAI;;EAEd,CAAC,CAAC;EACF,OAAOF,KAAK;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}
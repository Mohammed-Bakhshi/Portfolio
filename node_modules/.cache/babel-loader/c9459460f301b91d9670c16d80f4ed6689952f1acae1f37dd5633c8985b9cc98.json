{"ast":null,"code":"import { Container } from \"../../core/render/Container\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Grid } from \"./axes/Grid\";\n//import { Animations } from \"../core/util/Animation\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $math from \"../../core/util/Math\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $object from \"../../core/util/Object\";\n/**\r\n * Creates a chart cursor for an [[XYChart]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\r\n * @important\r\n */\nexport class XYCursor extends Container {\n  constructor() {\n    super(...arguments);\n    Object.defineProperty(this, \"_alwaysShow\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    /**\r\n     * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\r\n     *\r\n     * @default Grid.new()\r\n     */\n    Object.defineProperty(this, \"lineX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this.children.push(Grid.new(this._root, {\n        themeTags: [\"x\"]\n      }))\n    });\n    /**\r\n     * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\r\n     *\r\n     * @default Grid.new()\r\n     */\n    Object.defineProperty(this, \"lineY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this.children.push(Grid.new(this._root, {\n        themeTags: [\"y\"]\n      }))\n    });\n    /**\r\n     * An element that represents current selection.\r\n     *\r\n     * @default Graphics.new()\r\n     */\n    Object.defineProperty(this, \"selection\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this.children.push(Graphics.new(this._root, {\n        themeTags: [\"selection\", \"cursor\"],\n        layer: 30\n      }))\n    });\n    Object.defineProperty(this, \"_movePoint\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_lastPoint\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {\n        x: 0,\n        y: 0\n      }\n    });\n    Object.defineProperty(this, \"_lastPoint2\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {\n        x: 0,\n        y: 0\n      }\n    });\n    Object.defineProperty(this, \"_tooltipX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_tooltipY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    /**\r\n     * A chart cursor is attached to.\r\n     */\n    Object.defineProperty(this, \"chart\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_toX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_toY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n  }\n  _afterNew() {\n    this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"xy\", \"cursor\"]);\n    super._afterNew();\n    this.setAll({\n      \"width\": p100,\n      height: p100,\n      isMeasured: true,\n      position: \"absolute\"\n    });\n    this.states.create(\"hidden\", {\n      visible: true,\n      opacity: 0\n    });\n    this._drawLines();\n    this.setPrivateRaw(\"visible\", false);\n    this._disposers.push(this.setTimeout(() => {\n      this.setPrivate(\"visible\", true);\n    }, 500));\n    this._disposers.push(this.lineX.events.on(\"positionchanged\", () => {\n      this._handleXLine();\n    }));\n    this._disposers.push(this.lineY.events.on(\"positionchanged\", () => {\n      this._handleYLine();\n    }));\n    this._disposers.push(this.lineX.events.on(\"focus\", () => this._handleLineFocus()));\n    this._disposers.push(this.lineX.events.on(\"blur\", () => this._handleLineBlur()));\n    this._disposers.push(this.lineY.events.on(\"focus\", () => this._handleLineFocus()));\n    this._disposers.push(this.lineY.events.on(\"blur\", () => this._handleLineBlur()));\n    if ($utils.supports(\"keyboardevents\")) {\n      this._disposers.push($utils.addEventListener(document, \"keydown\", ev => {\n        this._handleLineMove($utils.getEventKey(ev), ev.ctrlKey);\n      }));\n    }\n  }\n  _setUpTouch() {\n    const chart = this.chart;\n    if (chart) {\n      chart.plotContainer._display.cancelTouch = this.get(\"behavior\") != \"none\" ? true : false;\n    }\n  }\n  _handleXLine() {\n    let x = this.lineX.x();\n    let visible = true;\n    if (x < 0 || x > this.width()) {\n      visible = false;\n    }\n    this.lineX.setPrivate(\"visible\", visible);\n  }\n  _handleYLine() {\n    let y = this.lineY.y();\n    let visible = true;\n    if (y < 0 || y > this.height()) {\n      visible = false;\n    }\n    this.lineY.setPrivate(\"visible\", visible);\n  }\n  _handleLineMove(key, ctrlKey) {\n    let dir = \"\";\n    const chart = this.chart;\n    let axis;\n    if (chart && chart.xAxes.length) {\n      if (this._root.focused(this.lineX)) {\n        dir = \"positionX\";\n        axis = chart.xAxes.getIndex(0);\n      } else if (this._root.focused(this.lineY)) {\n        axis = chart.yAxes.getIndex(0);\n        dir = \"positionY\";\n      }\n      let m = 1;\n      if (ctrlKey) {\n        m = 5;\n      }\n      if (axis) {\n        let inversed = axis.get(\"renderer\").get(\"inversed\", false);\n        let step;\n        if (key == \"ArrowRight\" || key == \"ArrowDown\") {\n          step = 1;\n        } else if (key == \"ArrowLeft\" || key == \"ArrowUp\") {\n          step = -1;\n        } else if (key == \"Tab\") {\n          step = 0;\n        }\n        if (step != null) {\n          if (inversed) {\n            step *= -1;\n          }\n          this.set(dir, axis.nextPosition(step * m));\n        }\n      }\n    }\n  }\n  _handleLineFocus() {\n    this._alwaysShow = this.get(\"alwaysShow\", false);\n    this.setAll({\n      positionX: this.getPrivate(\"positionX\", 0),\n      positionY: this.getPrivate(\"positionY\", 0),\n      alwaysShow: true\n    });\n    this._handleLineMove(\"Tab\");\n  }\n  _handleLineBlur() {\n    if (this.lineX.isFocus() || this.lineY.isFocus()) {\n      this.setAll({\n        positionX: undefined,\n        positionY: undefined,\n        alwaysShow: this._alwaysShow\n      });\n    }\n  }\n  _prepareChildren() {\n    super._prepareChildren();\n    if (this.isDirty(\"xAxis\")) {\n      this._tooltipX = false;\n      const xAxis = this.get(\"xAxis\");\n      if (xAxis) {\n        const tooltip = xAxis.get(\"tooltip\");\n        if (tooltip) {\n          this._tooltipX = true;\n          this._disposers.push(tooltip.on(\"pointTo\", () => {\n            this._updateXLine(tooltip);\n          }));\n        }\n      }\n    }\n    if (this.isDirty(\"yAxis\")) {\n      this._tooltipY = false;\n      const yAxis = this.get(\"yAxis\");\n      if (yAxis) {\n        const tooltip = yAxis.get(\"tooltip\");\n        if (tooltip) {\n          this._tooltipY = true;\n          this._disposers.push(tooltip.on(\"pointTo\", () => {\n            this._updateYLine(tooltip);\n          }));\n        }\n      }\n    }\n  }\n  _handleSyncWith() {\n    const chart = this.chart;\n    if (chart) {\n      const syncWith = this.get(\"syncWith\");\n      const otherCharts = [];\n      if (syncWith) {\n        $array.each(syncWith, cursor => {\n          const chart = cursor.chart;\n          if (chart) {\n            otherCharts.push(chart);\n          }\n        });\n      }\n      chart._otherCharts = otherCharts;\n    }\n  }\n  _updateChildren() {\n    super._updateChildren();\n    this._handleSyncWith();\n    if (this.isDirty(\"positionX\") || this.isDirty(\"positionY\")) {\n      const positionX = this.get(\"positionX\");\n      const positionY = this.get(\"positionY\");\n      if (positionX == null && positionY == null) {\n        this.hide(0);\n      } else {\n        this._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n        this.handleMove();\n      }\n    }\n  }\n  _updateXLine(tooltip) {\n    let x = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", {\n      x: 0,\n      y: 0\n    })).x, 3);\n    if (this._toX != x) {\n      this.lineX.animate({\n        key: \"x\",\n        to: x,\n        duration: tooltip.get(\"animationDuration\", 0),\n        easing: tooltip.get(\"animationEasing\")\n      });\n      this._toX = x;\n    }\n  }\n  _updateYLine(tooltip) {\n    let y = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", {\n      x: 0,\n      y: 0\n    })).y, 3);\n    if (this._toY != y) {\n      this.lineY.animate({\n        key: \"y\",\n        to: y,\n        duration: tooltip.get(\"animationDuration\", 0),\n        easing: tooltip.get(\"animationEasing\")\n      });\n      this._toY = y;\n    }\n  }\n  _drawLines() {\n    this.lineX.set(\"draw\", display => {\n      display.moveTo(0, 0);\n      display.lineTo(0, this.height());\n    });\n    this.lineY.set(\"draw\", display => {\n      display.moveTo(0, 0);\n      display.lineTo(this.width(), 0);\n    });\n  }\n  updateCursor() {\n    if (this.get(\"alwaysShow\")) {\n      this._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n    }\n    this.handleMove();\n  }\n  _setChart(chart) {\n    this.chart = chart;\n    this._handleSyncWith();\n    const plotContainer = chart.plotContainer;\n    this.events.on(\"boundschanged\", () => {\n      this._disposers.push(this.setTimeout(() => {\n        this.updateCursor();\n      }, 50));\n    });\n    //this._display.interactive = true;\n    if ($utils.supports(\"touchevents\")) {\n      this._disposers.push(plotContainer.events.on(\"click\", event => {\n        if ($utils.isTouchEvent(event.originalEvent)) {\n          this._handleMove(event);\n        }\n      }));\n      this._setUpTouch();\n    }\n    this._disposers.push(plotContainer.events.on(\"pointerdown\", event => {\n      this._handleCursorDown(event);\n    }));\n    this._disposers.push(plotContainer.events.on(\"globalpointerup\", event => {\n      this._handleCursorUp(event);\n      if (!event.native && !this.isHidden()) {\n        this._handleMove(event);\n      }\n    }));\n    this._disposers.push(plotContainer.events.on(\"globalpointermove\", event => {\n      if (!this.get(\"syncWith\")) {\n        if ($object.keys(plotContainer._downPoints).length == 0 && !event.native && this.isHidden()) {\n          // Ignore mouse movement if it originates on outside element and\n          // we're not dragging.\n          return;\n        }\n      }\n      this._handleMove(event);\n      if (Math.hypot(this._lastPoint2.x - event.point.x, this._lastPoint2.y - event.point.y) > 1) {\n        this._handleLineBlur();\n        this._lastPoint2 = event.point;\n      }\n    }));\n    const parent = this.parent;\n    if (parent) {\n      parent.children.moveValue(this.selection);\n    }\n  }\n  _inPlot(point) {\n    const chart = this.chart;\n    if (chart) {\n      return chart.inPlot(point);\n    }\n    return false;\n  }\n  _handleCursorDown(event) {\n    if (event.originalEvent.button == 2) {\n      return;\n    }\n    const rootPoint = event.point;\n    let local = this._display.toLocal(rootPoint);\n    const chart = this.chart;\n    this.selection.set(\"draw\", () => {});\n    if (chart && this._inPlot(local)) {\n      this._downPoint = local;\n      if (this.get(\"behavior\") != \"none\") {\n        this.selection.show();\n        const type = \"selectstarted\";\n        if (this.events.isEnabled(type)) {\n          this.events.dispatch(type, {\n            type: type,\n            target: this,\n            originalEvent: event.originalEvent\n          });\n        }\n      }\n      let positionX = this._getPosition(local).x;\n      let positionY = this._getPosition(local).y;\n      this.setPrivate(\"downPositionX\", positionX);\n      this.setPrivate(\"downPositionY\", positionY);\n    }\n  }\n  _handleCursorUp(event) {\n    // TODO: handle multitouch\n    if (this._downPoint) {\n      const behavior = this.get(\"behavior\", \"none\");\n      if (behavior != \"none\") {\n        if (behavior.charAt(0) === \"z\") {\n          this.selection.hide();\n        }\n        const rootPoint = event.point;\n        let local = this._display.toLocal(rootPoint);\n        const downPoint = this._downPoint;\n        const moveThreshold = this.get(\"moveThreshold\", 1);\n        if (local && downPoint) {\n          let dispatch = false;\n          if (behavior === \"zoomX\" || behavior === \"zoomXY\" || behavior === \"selectX\" || behavior === \"selectXY\") {\n            if (Math.abs(local.x - downPoint.x) > moveThreshold) {\n              dispatch = true;\n            }\n          }\n          if (behavior === \"zoomY\" || behavior === \"zoomXY\" || behavior === \"selectY\" || behavior === \"selectXY\") {\n            if (Math.abs(local.y - downPoint.y) > moveThreshold) {\n              dispatch = true;\n            }\n          }\n          if (dispatch) {\n            const type = \"selectended\";\n            if (this.events.isEnabled(type)) {\n              this.events.dispatch(type, {\n                type: type,\n                target: this,\n                originalEvent: event.originalEvent\n              });\n            }\n          } else {\n            const type = \"selectcancelled\";\n            if (this.events.isEnabled(type)) {\n              this.events.dispatch(type, {\n                type: type,\n                target: this,\n                originalEvent: event.originalEvent\n              });\n            }\n          }\n        }\n      }\n    }\n    this._downPoint = undefined;\n  }\n  _handleMove(event) {\n    if (this.getPrivate(\"visible\")) {\n      const chart = this.chart;\n      if (chart && $object.keys(chart.plotContainer._downPoints).length > 1) {\n        this.set(\"forceHidden\", true);\n        return;\n      } else {\n        this.set(\"forceHidden\", false);\n      }\n      // TODO: handle multitouch\n      const rootPoint = event.point;\n      const lastPoint = this._lastPoint;\n      if (Math.round(lastPoint.x) === Math.round(rootPoint.x) && Math.round(lastPoint.y) === Math.round(rootPoint.y)) {\n        return;\n      }\n      this._lastPoint = rootPoint;\n      this.setPrivate(\"lastPoint\", rootPoint);\n      this.handleMove({\n        x: rootPoint.x,\n        y: rootPoint.y\n      }, false, event.originalEvent);\n    }\n  }\n  _getPosition(point) {\n    return {\n      x: point.x / this.width(),\n      y: point.y / this.height()\n    };\n  }\n  /**\r\n   * Moves the cursor to X/Y coordinates within chart container (`point`).\r\n   *\r\n   * If `skipEvent` parameter is set to `true`, the move will not invoke\r\n   * the `\"cursormoved\"` event.\r\n   *\r\n   * @param  point      X/Y to move cursor to\r\n   * @param  skipEvent  Do not fire \"cursormoved\" event\r\n   */\n  handleMove(point, skipEvent, originalEvent) {\n    if (!point) {\n      point = this._movePoint;\n    }\n    const alwaysShow = this.get(\"alwaysShow\");\n    if (!point) {\n      this.hide(0);\n      return;\n    }\n    this._movePoint = point;\n    let local = this._display.toLocal(point);\n    let chart = this.chart;\n    if (chart && (this._inPlot(local) || this._downPoint)) {\n      chart._movePoint = point;\n      if (this.isHidden()) {\n        this.show();\n        const behavior = this.get(\"behavior\", \"\");\n        if (behavior.charAt(0) == \"z\") {\n          this.selection.set(\"draw\", () => {});\n        }\n      }\n      let x = local.x;\n      let y = local.y;\n      let xyPos = this._getPosition(local);\n      this.setPrivate(\"point\", local);\n      let snapToSeries = this.get(\"snapToSeries\");\n      if (this._downPoint) {\n        snapToSeries = undefined;\n      }\n      let userPositionX = this.get(\"positionX\");\n      let positionX = xyPos.x;\n      if ($type.isNumber(userPositionX)) {\n        positionX = userPositionX;\n      }\n      let userPositionY = this.get(\"positionY\");\n      let positionY = xyPos.y;\n      if ($type.isNumber(userPositionY)) {\n        positionY = userPositionY;\n      }\n      this.setPrivate(\"positionX\", positionX);\n      this.setPrivate(\"positionY\", positionY);\n      const xy = this._getPoint(positionX, positionY);\n      x = xy.x;\n      y = xy.y;\n      chart.xAxes.each(axis => {\n        axis._handleCursorPosition(positionX, snapToSeries);\n        if (alwaysShow) {\n          axis.handleCursorShow();\n        }\n      });\n      chart.yAxes.each(axis => {\n        axis._handleCursorPosition(positionY, snapToSeries);\n        if (alwaysShow) {\n          axis.handleCursorShow();\n        }\n      });\n      if (!skipEvent) {\n        chart._handleCursorPosition();\n        const type = \"cursormoved\";\n        if (this.events.isEnabled(type)) {\n          this.events.dispatch(type, {\n            type: type,\n            target: this,\n            point: point,\n            originalEvent: originalEvent\n          });\n        }\n      }\n      this._updateLines(x, y);\n      chart.arrangeTooltips();\n    } else if (!this._downPoint) {\n      if (!alwaysShow) {\n        this.hide(0);\n        const type = \"cursorhidden\";\n        if (this.events.isEnabled(type)) {\n          this.events.dispatch(type, {\n            type: type,\n            target: this\n          });\n        }\n      }\n    }\n    if (this._downPoint && this.get(\"behavior\") != \"none\") {\n      this._updateSelection(local);\n    }\n  }\n  _getPoint(positionX, positionY) {\n    return {\n      x: this.width() * positionX,\n      y: this.height() * positionY\n    };\n  }\n  _updateLines(x, y) {\n    if (!this._tooltipX) {\n      this.lineX.set(\"x\", x);\n    }\n    if (!this._tooltipY) {\n      this.lineY.set(\"y\", y);\n    }\n    this._drawLines();\n  }\n  _updateSelection(point) {\n    const selection = this.selection;\n    const behavior = this.get(\"behavior\");\n    const w = this.width();\n    const h = this.height();\n    if (point.x < 0) {\n      point.x = 0;\n    }\n    if (point.x > w) {\n      point.x = w;\n    }\n    if (point.y < 0) {\n      point.y = 0;\n    }\n    if (point.y > h) {\n      point.y = h;\n    }\n    selection.set(\"draw\", display => {\n      const downPoint = this._downPoint;\n      if (downPoint) {\n        if (behavior === \"zoomXY\" || behavior === \"selectXY\") {\n          display.moveTo(downPoint.x, downPoint.y);\n          display.lineTo(downPoint.x, point.y);\n          display.lineTo(point.x, point.y);\n          display.lineTo(point.x, downPoint.y);\n          display.lineTo(downPoint.x, downPoint.y);\n        } else if (behavior === \"zoomX\" || behavior === \"selectX\") {\n          display.moveTo(downPoint.x, 0);\n          display.lineTo(downPoint.x, h);\n          display.lineTo(point.x, h);\n          display.lineTo(point.x, 0);\n          display.lineTo(downPoint.x, 0);\n        } else if (behavior === \"zoomY\" || behavior === \"selectY\") {\n          display.moveTo(0, downPoint.y);\n          display.lineTo(w, downPoint.y);\n          display.lineTo(w, point.y);\n          display.lineTo(0, point.y);\n          display.lineTo(0, downPoint.y);\n        }\n      }\n    });\n  }\n  _onHide() {\n    if (this.isHidden()) {\n      let chart = this.chart;\n      if (chart) {\n        chart.xAxes.each(axis => {\n          axis.handleCursorHide();\n        });\n        chart.yAxes.each(axis => {\n          axis.handleCursorHide();\n        });\n        chart.series.each(series => {\n          series.handleCursorHide();\n        });\n      }\n    }\n    super._onHide();\n  }\n  _onShow() {\n    if (!this.isHidden()) {\n      let chart = this.chart;\n      if (chart) {\n        chart.xAxes.each(axis => {\n          axis.handleCursorShow();\n        });\n        chart.yAxes.each(axis => {\n          axis.handleCursorShow();\n        });\n      }\n    }\n    super._onShow();\n  }\n  _dispose() {\n    super._dispose();\n    this.selection.dispose();\n  }\n}\nObject.defineProperty(XYCursor, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"XYCursor\"\n});\nObject.defineProperty(XYCursor, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Container.classNames.concat([XYCursor.className])\n});","map":{"version":3,"names":["Container","p100","Graphics","Grid","$type","$utils","$math","$array","$object","XYCursor","constructor","Object","defineProperty","children","push","new","_root","themeTags","layer","x","y","_afterNew","_settings","mergeTags","setAll","height","isMeasured","position","states","create","visible","opacity","_drawLines","setPrivateRaw","_disposers","setTimeout","setPrivate","lineX","events","on","_handleXLine","lineY","_handleYLine","_handleLineFocus","_handleLineBlur","supports","addEventListener","document","ev","_handleLineMove","getEventKey","ctrlKey","_setUpTouch","chart","plotContainer","_display","cancelTouch","get","width","key","dir","axis","xAxes","length","focused","getIndex","yAxes","m","inversed","step","set","nextPosition","_alwaysShow","positionX","getPrivate","positionY","alwaysShow","isFocus","undefined","_prepareChildren","isDirty","_tooltipX","xAxis","tooltip","_updateXLine","_tooltipY","yAxis","_updateYLine","_handleSyncWith","syncWith","otherCharts","each","cursor","_otherCharts","_updateChildren","hide","_movePoint","toGlobal","_getPoint","handleMove","round","toLocal","_toX","animate","to","duration","easing","_toY","display","moveTo","lineTo","updateCursor","_setChart","event","isTouchEvent","originalEvent","_handleMove","_handleCursorDown","_handleCursorUp","native","isHidden","keys","_downPoints","Math","hypot","_lastPoint2","point","parent","moveValue","selection","_inPlot","inPlot","button","rootPoint","local","_downPoint","show","type","isEnabled","dispatch","target","_getPosition","behavior","charAt","downPoint","moveThreshold","abs","lastPoint","_lastPoint","skipEvent","xyPos","snapToSeries","userPositionX","isNumber","userPositionY","xy","_handleCursorPosition","handleCursorShow","_updateLines","arrangeTooltips","_updateSelection","w","h","_onHide","handleCursorHide","series","_onShow","_dispose","dispose","classNames","concat","className"],"sources":["C:\\Users\\Moham\\Downloads\\Github projects\\Digital-Portfolio-main\\Frontend\\node_modules\\src\\.internal\\charts\\xy\\XYCursor.ts"],"sourcesContent":["import type { IPoint } from \"../../core/util/IPoint\";\nimport type { XYChart } from \"./XYChart\"\nimport type { XYSeries } from \"./series/XYSeries\";\nimport type { ISpritePointerEvent } from \"../../core/render/Sprite\";\nimport type { Axis } from \"./axes/Axis\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\n\nimport { Container, IContainerSettings, IContainerPrivate, IContainerEvents } from \"../../core/render/Container\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Grid } from \"./axes/Grid\";\n//import { Animations } from \"../core/util/Animation\";\n\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $math from \"../../core/util/Math\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $object from \"../../core/util/Object\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\n\nexport interface IXYCursorSettings extends IContainerSettings {\n\n\t/**\n\t * Cursor's X axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\txAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * Cursor's Y axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\tyAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * What should cursor do when dragged across plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Behavior} for more info\n\t * @default \"none\"\n\t */\n\tbehavior?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"selectX\" | \"selectY\" | \"selectXY\" | \"none\";\n\n\t/**\n\t * Cursor's horizontal position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionX` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Cursor's vertical position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionY` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * If set to `true`, cursor will not be hidden when mouse cursor moves out\n\t * of the plot area.\n\t *\n\t * @default false\n\t */\n\talwaysShow?: boolean;\n\n\t/**\n\t * A list of series to snap cursor to.\n\t *\n\t * If set, the cursor will always snap to the closest data item of listed\n\t * series.\n\t */\n\tsnapToSeries?: Array<XYSeries>;\n\n\t/**\n\t * Defines in which direction to look when searching for the nearest data\n\t * item to snap to.\n\t *\n\t * Possible values: `\"xy\"` (default), `\"x\"`, `\"y\"`, `\"x!\"`, `\"y!\"`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#snapping-to-series} for more info\n\t * @since 5.0.6\n\t * @default \"xy\"\n\t */\n\tsnapToSeriesBy?: \"xy\" | \"x\" | \"y\" | \"x!\" | \"y!\";\n\n\t/**\n\t * An array of other [[XYCursor]] objects to sync this cursor with.\n\t *\n\t * If set will automatically move synced cursors to the same position within\n\t * their respective axes as the this cursor assumin same XY coordinates of\n\t * the pointer.\n\t *\n\t * NOTE: Syncing is performed using actual X/Y coordinates of the point of\n\t * mouse cursor's position or touch. It means that they will not sync by axis\n\t * positions, but rather by screen coordinates. For example vertical lines\n\t * will not sync across horizontally laid out charts, and vice versa.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#syncing-cursors} for more info\n\t * @since 5.1.4\n\t */\n\tsyncWith?: Array<XYCursor>;\n\n\t/**\n\t * Minimum distance in pixels between down and up points.\n\t *\n\t * If a distance is less than the value of `moveThreshold`, the zoom or\n\t * selection won't happen.\n\t *\n\t * @since 5.2.20\n\t * @default 1\n\t */\n\tmoveThreshold?: number\n\n}\n\n\nexport interface IXYCursorPrivate extends IContainerPrivate {\n\n\t/**\n\t * Current X/Y coordinates of the cursor.\n\t */\n\tpoint?: IPoint;\n\n\t/**\n\t * Current horizontal position relative to the plot area (0-1).\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Current vertical position relative to the plot area (0-1).\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * Horizontal cursor position on the moment when selection started.\n\t */\n\tdownPositionX?: number;\n\n\t/**\n\t * Vertical cursor position on the moment when selection started.\n\t */\n\tdownPositionY?: number;\n\n\t/**\n\t * Last global point to which cursor moved\n\t */\n\tlastPoint?: IPoint;\n}\n\nexport interface IXYCursorEvents extends IContainerEvents {\n\n\t/**\n\t * Kicks in when cursor selection ends.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectended: {\n\t\toriginalEvent: IPointerEvent,\n\t\ttarget: XYCursor\n\t};\n\n\t/**\n\t * Kicks in when cursor selection starts.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectstarted: {\n\t\toriginalEvent: IPointerEvent,\n\t\ttarget: XYCursor\n\t};\n\n\t/**\n\t * Kicks in when cursor's position over plot area changes.\n\t */\n\tcursormoved: {\n\t\tpoint: IPoint,\n\t\ttarget: XYCursor,\n\t\toriginalEvent?: IPointerEvent\n\t};\n\n\t/**\n\t * Kicks in when cursor's is hidden when user rolls-out of the plot area\n\t */\n\tcursorhidden: {\n\t\ttarget: XYCursor\n\t};\n\n\t/**\n\t * Invoked if pointer is pressed down on a plot area and released without\n\t * moving (only when behavior is `\"selectX\"`).\n\t *\n\t * @since 5.4.7\n\t */\n\tselectcancelled: {\n\t\toriginalEvent: IPointerEvent,\n\t\ttarget: XYCursor\n\t};\n\n}\n\n/**\n * Creates a chart cursor for an [[XYChart]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n * @important\n */\nexport class XYCursor extends Container {\n\tpublic static className: string = \"XYCursor\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([XYCursor.className]);\n\n\tdeclare public _settings: IXYCursorSettings;\n\tdeclare public _privateSettings: IXYCursorPrivate;\n\tdeclare public _events: IXYCursorEvents;\n\n\tprotected _alwaysShow: boolean = false;\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineX: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"x\"]\n\t}));\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineY: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"y\"]\n\t}));\n\n\t/**\n\t * An element that represents current selection.\n\t *\n\t * @default Graphics.new()\n\t */\n\tpublic readonly selection: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"selection\", \"cursor\"], layer: 30\n\t}));\n\n\tprotected _movePoint: IPoint | undefined;\n\tprotected _lastPoint: IPoint = { x: 0, y: 0 };\n\tprotected _lastPoint2: IPoint = { x: 0, y: 0 };\n\n\tprotected _tooltipX: boolean = false;\n\tprotected _tooltipY: boolean = false;\n\n\t/**\n\t * A chart cursor is attached to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _toX?: number;\n\tprotected _toY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"xy\", \"cursor\"]);\n\t\tsuper._afterNew();\n\t\tthis.setAll({ \"width\": p100, height: p100, isMeasured: true, position: \"absolute\" });\n\t\tthis.states.create(\"hidden\", { visible: true, opacity: 0 });\n\t\tthis._drawLines();\n\t\tthis.setPrivateRaw(\"visible\", false);\n\n\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\tthis.setPrivate(\"visible\", true)\n\t\t}, 500));\n\n\t\tthis._disposers.push(this.lineX.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleXLine();\n\t\t}));\n\n\t\tthis._disposers.push(this.lineY.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleYLine();\n\t\t}));\n\n\t\tthis._disposers.push(this.lineX.events.on(\"focus\", () => this._handleLineFocus()));\n\t\tthis._disposers.push(this.lineX.events.on(\"blur\", () => this._handleLineBlur()));\n\n\t\tthis._disposers.push(this.lineY.events.on(\"focus\", () => this._handleLineFocus()));\n\t\tthis._disposers.push(this.lineY.events.on(\"blur\", () => this._handleLineBlur()));\n\n\t\tif ($utils.supports(\"keyboardevents\")) {\n\t\t\tthis._disposers.push($utils.addEventListener(document, \"keydown\", (ev: KeyboardEvent) => {\n\t\t\t\tthis._handleLineMove($utils.getEventKey(ev), ev.ctrlKey);\n\t\t\t}));\n\t\t}\n\t}\n\n\tprotected _setUpTouch(): void {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.plotContainer._display.cancelTouch = this.get(\"behavior\") != \"none\" ? true : false;\n\t\t}\n\t}\n\n\tprotected _handleXLine() {\n\t\tlet x = this.lineX.x();\n\t\tlet visible = true;\n\t\tif (x < 0 || x > this.width()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineX.setPrivate(\"visible\", visible);\n\t}\n\n\tprotected _handleYLine() {\n\t\tlet y = this.lineY.y();\n\t\tlet visible = true;\n\t\tif (y < 0 || y > this.height()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineY.setPrivate(\"visible\", visible);\n\t}\n\n\tprotected _handleLineMove(key: string, ctrlKey?: boolean) {\n\t\tlet dir: any = \"\";\n\n\t\tconst chart = this.chart;\n\n\t\tlet axis: Axis<AxisRenderer> | undefined;\n\t\tif (chart && chart.xAxes.length) {\n\t\t\tif (this._root.focused(this.lineX)) {\n\t\t\t\tdir = \"positionX\";\n\t\t\t\taxis = chart.xAxes.getIndex(0);\n\t\t\t}\n\t\t\telse if (this._root.focused(this.lineY)) {\n\t\t\t\taxis = chart.yAxes.getIndex(0);\n\t\t\t\tdir = \"positionY\";\n\t\t\t}\n\n\t\t\tlet m = 1;\n\t\t\tif (ctrlKey) {\n\t\t\t\tm = 5;\n\t\t\t}\n\n\t\t\tif (axis) {\n\t\t\t\tlet inversed = axis.get(\"renderer\").get(\"inversed\", false);\n\t\t\t\tlet step;\n\t\t\t\tif (key == \"ArrowRight\" || key == \"ArrowDown\") {\n\t\t\t\t\tstep = 1;\n\t\t\t\t}\n\t\t\t\telse if (key == \"ArrowLeft\" || key == \"ArrowUp\") {\n\t\t\t\t\tstep = -1;\n\t\t\t\t}\n\t\t\t\telse if (key == \"Tab\") {\n\t\t\t\t\tstep = 0;\n\t\t\t\t}\n\n\t\t\t\tif (step != null) {\n\t\t\t\t\tif (inversed) {\n\t\t\t\t\t\tstep *= -1;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.set(dir, axis.nextPosition(step * m));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleLineFocus() {\n\t\tthis._alwaysShow = this.get(\"alwaysShow\", false);\n\t\tthis.setAll({\n\t\t\tpositionX: this.getPrivate(\"positionX\", 0),\n\t\t\tpositionY: this.getPrivate(\"positionY\", 0),\n\t\t\talwaysShow: true\n\t\t});\n\n\t\tthis._handleLineMove(\"Tab\");\n\t}\n\n\tprotected _handleLineBlur() {\n\t\tif (this.lineX.isFocus() || this.lineY.isFocus()) {\n\t\t\tthis.setAll({\n\t\t\t\tpositionX: undefined,\n\t\t\t\tpositionY: undefined,\n\t\t\t\talwaysShow: this._alwaysShow\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"xAxis\")) {\n\t\t\tthis._tooltipX = false;\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\n\t\t\tif (xAxis) {\n\t\t\t\tconst tooltip = xAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipX = true;\n\t\t\t\t\tthis._disposers.push(\n\t\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\t\tthis._updateXLine(tooltip);\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"yAxis\")) {\n\t\t\tthis._tooltipY = false;\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis) {\n\t\t\t\tconst tooltip = yAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipY = true;\n\t\t\t\t\tthis._disposers.push(\n\t\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\t\tthis._updateYLine(tooltip);\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleSyncWith() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst syncWith = this.get(\"syncWith\");\n\t\t\tconst otherCharts: Array<XYChart> = [];\n\t\t\tif (syncWith) {\n\t\t\t\t$array.each(syncWith, (cursor) => {\n\t\t\t\t\tconst chart = cursor.chart;\n\t\t\t\t\tif (chart) {\n\t\t\t\t\t\totherCharts.push(chart)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\tchart._otherCharts = otherCharts;\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\tthis._handleSyncWith();\n\n\t\tif (this.isDirty(\"positionX\") || this.isDirty(\"positionY\")) {\n\t\t\tconst positionX = this.get(\"positionX\");\n\t\t\tconst positionY = this.get(\"positionY\");\n\n\t\t\tif (positionX == null && positionY == null) {\n\t\t\t\tthis.hide(0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\t\tthis.handleMove();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateXLine(tooltip: Tooltip) {\n\t\tlet x = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).x, 3);\n\t\tif (this._toX != x) {\n\t\t\tthis.lineX.animate({ key: \"x\", to: x, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toX = x;\n\t\t}\n\t}\n\n\tprotected _updateYLine(tooltip: Tooltip) {\n\t\tlet y = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).y, 3);\n\t\tif (this._toY != y) {\n\t\t\tthis.lineY.animate({ key: \"y\", to: y, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toY = y;\n\t\t}\n\t}\n\n\tprotected _drawLines() {\n\t\tthis.lineX.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, this.height());\n\t\t})\n\t\tthis.lineY.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(this.width(), 0);\n\t\t})\n\t}\n\n\tpublic updateCursor() {\n\t\tif (this.get(\"alwaysShow\")) {\n\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t}\n\t\tthis.handleMove();\n\t}\n\n\tpublic _setChart(chart: XYChart): void {\n\t\tthis.chart = chart;\n\n\t\tthis._handleSyncWith();\n\n\t\tconst plotContainer = chart.plotContainer;\n\n\t\tthis.events.on(\"boundschanged\", () => {\n\t\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\t\tthis.updateCursor();\n\t\t\t}, 50))\n\t\t})\n\n\t\t//this._display.interactive = true;\n\t\tif ($utils.supports(\"touchevents\")) {\n\t\t\tthis._disposers.push(plotContainer.events.on(\"click\", (event) => {\n\t\t\t\tif ($utils.isTouchEvent(event.originalEvent)) {\n\t\t\t\t\tthis._handleMove(event);\n\t\t\t\t}\n\t\t\t}));\n\t\t\tthis._setUpTouch();\n\t\t}\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handleCursorDown(event);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handleCursorUp(event);\n\t\t\tif (!event.native && !this.isHidden()) {\n\t\t\t\tthis._handleMove(event);\n\t\t\t}\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tif (!this.get(\"syncWith\")) {\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length == 0 && !event.native && this.isHidden()) {\n\t\t\t\t\t// Ignore mouse movement if it originates on outside element and\n\t\t\t\t\t// we're not dragging.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._handleMove(event);\n\n\t\t\tif (Math.hypot(this._lastPoint2.x - event.point.x, this._lastPoint2.y - event.point.y) > 1) {\n\t\t\t\tthis._handleLineBlur();\n\t\t\t\tthis._lastPoint2 = event.point;\n\t\t\t}\n\t\t}));\n\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tparent.children.moveValue(this.selection);\n\t\t}\n\t}\n\n\tprotected _inPlot(point: IPoint): boolean {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.inPlot(point);\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _handleCursorDown(event: ISpritePointerEvent) {\n\t\tif ((event.originalEvent as any).button == 2) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst rootPoint = event.point;\n\t\tlet local = this._display.toLocal(rootPoint);\n\t\tconst chart = this.chart;\n\n\t\tthis.selection.set(\"draw\", () => { });\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tthis._downPoint = local;\n\n\t\t\tif (this.get(\"behavior\") != \"none\") {\n\t\t\t\tthis.selection.show();\n\n\t\t\t\tconst type = \"selectstarted\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet positionX = this._getPosition(local).x;\n\t\t\tlet positionY = this._getPosition(local).y;\n\n\t\t\tthis.setPrivate(\"downPositionX\", positionX);\n\t\t\tthis.setPrivate(\"downPositionY\", positionY);\n\t\t}\n\t}\n\n\tprotected _handleCursorUp(event: ISpritePointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tif (this._downPoint) {\n\t\t\tconst behavior = this.get(\"behavior\", \"none\");\n\t\t\tif (behavior != \"none\") {\n\t\t\t\tif (behavior.charAt(0) === \"z\") {\n\t\t\t\t\tthis.selection.hide();\n\t\t\t\t}\n\n\t\t\t\tconst rootPoint = event.point;\n\t\t\t\tlet local = this._display.toLocal(rootPoint);\n\n\t\t\t\tconst downPoint = this._downPoint;\n\t\t\t\tconst moveThreshold = this.get(\"moveThreshold\", 1);\n\t\t\t\tif (local && downPoint) {\n\t\t\t\t\tlet dispatch = false;\n\t\t\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\" || behavior === \"selectX\" || behavior === \"selectXY\") {\n\t\t\t\t\t\tif (Math.abs(local.x - downPoint.x) > moveThreshold) {\n\t\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\" || behavior === \"selectY\" || behavior === \"selectXY\") {\n\t\t\t\t\t\tif (Math.abs(local.y - downPoint.y) > moveThreshold) {\n\t\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dispatch) {\n\t\t\t\t\t\tconst type = \"selectended\";\n\t\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconst type = \"selectcancelled\";\n\t\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._downPoint = undefined;\n\t}\n\n\tprotected _handleMove(event: ISpritePointerEvent) {\n\t\tif (this.getPrivate(\"visible\")) {\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart && $object.keys(chart.plotContainer._downPoints).length > 1) {\n\t\t\t\tthis.set(\"forceHidden\", true)\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"forceHidden\", false)\n\t\t\t}\n\n\t\t\t// TODO: handle multitouch\n\t\t\tconst rootPoint = event.point;\n\t\t\tconst lastPoint = this._lastPoint;\n\n\t\t\tif (Math.round(lastPoint.x) === Math.round(rootPoint.x) && Math.round(lastPoint.y) === Math.round(rootPoint.y)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._lastPoint = rootPoint;\n\t\t\tthis.setPrivate(\"lastPoint\", rootPoint);\n\n\t\t\tthis.handleMove({ x: rootPoint.x, y: rootPoint.y }, false, event.originalEvent);\n\t\t}\n\t}\n\n\tprotected _getPosition(point: IPoint): IPoint {\n\t\treturn { x: point.x / this.width(), y: point.y / this.height() };\n\t}\n\n\t/**\n\t * Moves the cursor to X/Y coordinates within chart container (`point`).\n\t *\n\t * If `skipEvent` parameter is set to `true`, the move will not invoke\n\t * the `\"cursormoved\"` event.\n\t *\n\t * @param  point      X/Y to move cursor to\n\t * @param  skipEvent  Do not fire \"cursormoved\" event\n\t */\n\tpublic handleMove(point?: IPoint, skipEvent?: boolean, originalEvent?: IPointerEvent) {\n\t\tif (!point) {\n\t\t\tpoint = this._movePoint;\n\t\t}\n\n\t\tconst alwaysShow = this.get(\"alwaysShow\");\n\n\t\tif (!point) {\n\t\t\tthis.hide(0);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._movePoint = point;\n\t\tlet local = this._display.toLocal(point);\n\t\tlet chart = this.chart;\n\n\t\tif (chart && (this._inPlot(local) || this._downPoint)) {\n\t\t\tchart._movePoint = point;\n\n\t\t\tif (this.isHidden()) {\n\t\t\t\tthis.show();\n\n\t\t\t\tconst behavior = this.get(\"behavior\", \"\");\n\t\t\t\tif (behavior.charAt(0) == \"z\") {\n\t\t\t\t\tthis.selection.set(\"draw\", () => { });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet x = local.x;\n\t\t\tlet y = local.y;\n\n\t\t\tlet xyPos = this._getPosition(local);\n\n\t\t\tthis.setPrivate(\"point\", local);\n\n\t\t\tlet snapToSeries = this.get(\"snapToSeries\");\n\n\t\t\tif (this._downPoint) {\n\t\t\t\tsnapToSeries = undefined;\n\t\t\t}\n\n\t\t\tlet userPositionX = this.get(\"positionX\");\n\t\t\tlet positionX = xyPos.x;\n\n\t\t\tif ($type.isNumber(userPositionX)) {\n\t\t\t\tpositionX = userPositionX;\n\t\t\t}\n\n\t\t\tlet userPositionY = this.get(\"positionY\");\n\t\t\tlet positionY = xyPos.y;\n\n\t\t\tif ($type.isNumber(userPositionY)) {\n\t\t\t\tpositionY = userPositionY;\n\t\t\t}\n\n\t\t\tthis.setPrivate(\"positionX\", positionX);\n\t\t\tthis.setPrivate(\"positionY\", positionY);\n\n\t\t\tconst xy = this._getPoint(positionX, positionY);\n\t\t\tx = xy.x;\n\t\t\ty = xy.y;\n\n\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionX, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionY, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (!skipEvent) {\n\t\t\t\tchart._handleCursorPosition();\n\n\t\t\t\tconst type = \"cursormoved\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, point: point, originalEvent: originalEvent });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._updateLines(x, y);\n\n\t\t\tchart.arrangeTooltips();\n\t\t}\n\t\telse if (!this._downPoint) {\n\t\t\tif (!alwaysShow) {\n\t\t\t\tthis.hide(0);\n\n\t\t\t\tconst type = \"cursorhidden\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._downPoint && this.get(\"behavior\") != \"none\") {\n\t\t\tthis._updateSelection(local)\n\t\t}\n\t}\n\n\tprotected _getPoint(positionX: number, positionY: number): IPoint {\n\t\treturn { x: this.width() * positionX, y: this.height() * positionY };\n\t}\n\n\n\tprotected _updateLines(x: number, y: number) {\n\t\tif (!this._tooltipX) {\n\t\t\tthis.lineX.set(\"x\", x);\n\t\t}\n\t\tif (!this._tooltipY) {\n\t\t\tthis.lineY.set(\"y\", y);\n\t\t}\n\n\t\tthis._drawLines();\n\t}\n\n\tprotected _updateSelection(point: IPoint) {\n\t\tconst selection = this.selection;\n\t\tconst behavior = this.get(\"behavior\");\n\t\tconst w = this.width();\n\t\tconst h = this.height();\n\n\t\tif (point.x < 0) {\n\t\t\tpoint.x = 0;\n\t\t}\n\n\t\tif (point.x > w) {\n\t\t\tpoint.x = w;\n\t\t}\n\n\t\tif (point.y < 0) {\n\t\t\tpoint.y = 0;\n\t\t}\n\n\t\tif (point.y > h) {\n\t\t\tpoint.y = h;\n\t\t}\n\n\t\tselection.set(\"draw\", (display) => {\n\t\t\tconst downPoint = this._downPoint;\n\t\t\tif (downPoint) {\n\t\t\t\tif (behavior === \"zoomXY\" || behavior === \"selectXY\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, downPoint.y);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomX\" || behavior === \"selectX\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, 0);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomY\" || behavior === \"selectY\") {\n\t\t\t\t\tdisplay.moveTo(0, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, point.y);\n\t\t\t\t\tdisplay.lineTo(0, point.y);\n\t\t\t\t\tdisplay.lineTo(0, downPoint.y);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _onHide() {\n\t\tif (this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\tseries.handleCursorHide();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onHide();\n\t}\n\n\tprotected _onShow() {\n\t\tif (!this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onShow();\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\tthis.selection.dispose();\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
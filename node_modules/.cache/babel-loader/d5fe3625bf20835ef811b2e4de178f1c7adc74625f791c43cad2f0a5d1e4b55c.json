{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = deepmerge;\nexports.isPlainObject = isPlainObject;\nvar React = _interopRequireWildcard(require(\"react\"));\n// https://github.com/sindresorhus/is-plain-obj/blob/main/index.js\nfunction isPlainObject(item) {\n  if (typeof item !== 'object' || item === null) {\n    return false;\n  }\n  const prototype = Object.getPrototypeOf(item);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in item) && !(Symbol.iterator in item);\n}\nfunction deepClone(source) {\n  if ( /*#__PURE__*/React.isValidElement(source) || !isPlainObject(source)) {\n    return source;\n  }\n  const output = {};\n  Object.keys(source).forEach(key => {\n    output[key] = deepClone(source[key]);\n  });\n  return output;\n}\nfunction deepmerge(target, source) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    clone: true\n  };\n  const output = options.clone ? {\n    ...target\n  } : target;\n  if (isPlainObject(target) && isPlainObject(source)) {\n    Object.keys(source).forEach(key => {\n      if ( /*#__PURE__*/React.isValidElement(source[key])) {\n        output[key] = source[key];\n      } else if (isPlainObject(source[key]) &&\n      // Avoid prototype pollution\n      Object.prototype.hasOwnProperty.call(target, key) && isPlainObject(target[key])) {\n        // Since `output` is a clone of `target` and we have narrowed `target` in this block we can cast to the same type.\n        output[key] = deepmerge(target[key], source[key], options);\n      } else if (options.clone) {\n        output[key] = isPlainObject(source[key]) ? deepClone(source[key]) : source[key];\n      } else {\n        output[key] = source[key];\n      }\n    });\n  }\n  return output;\n}","map":{"version":3,"names":["_interopRequireWildcard","require","default","Object","defineProperty","exports","value","deepmerge","isPlainObject","React","item","prototype","getPrototypeOf","Symbol","toStringTag","iterator","deepClone","source","isValidElement","output","keys","forEach","key","target","options","arguments","length","undefined","clone","hasOwnProperty","call"],"sources":["C:/Users/Moham/Downloads/Github projects/Digital-Portfolio-main/Frontend/node_modules/@mui/utils/deepmerge/deepmerge.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = deepmerge;\nexports.isPlainObject = isPlainObject;\nvar React = _interopRequireWildcard(require(\"react\"));\n// https://github.com/sindresorhus/is-plain-obj/blob/main/index.js\nfunction isPlainObject(item) {\n  if (typeof item !== 'object' || item === null) {\n    return false;\n  }\n  const prototype = Object.getPrototypeOf(item);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in item) && !(Symbol.iterator in item);\n}\nfunction deepClone(source) {\n  if (/*#__PURE__*/React.isValidElement(source) || !isPlainObject(source)) {\n    return source;\n  }\n  const output = {};\n  Object.keys(source).forEach(key => {\n    output[key] = deepClone(source[key]);\n  });\n  return output;\n}\nfunction deepmerge(target, source, options = {\n  clone: true\n}) {\n  const output = options.clone ? {\n    ...target\n  } : target;\n  if (isPlainObject(target) && isPlainObject(source)) {\n    Object.keys(source).forEach(key => {\n      if (/*#__PURE__*/React.isValidElement(source[key])) {\n        output[key] = source[key];\n      } else if (isPlainObject(source[key]) &&\n      // Avoid prototype pollution\n      Object.prototype.hasOwnProperty.call(target, key) && isPlainObject(target[key])) {\n        // Since `output` is a clone of `target` and we have narrowed `target` in this block we can cast to the same type.\n        output[key] = deepmerge(target[key], source[key], options);\n      } else if (options.clone) {\n        output[key] = isPlainObject(source[key]) ? deepClone(source[key]) : source[key];\n      } else {\n        output[key] = source[key];\n      }\n    });\n  }\n  return output;\n}"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,+CAA+C,CAAC,CAACC,OAAO;AAC9FC,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACH,OAAO,GAAGK,SAAS;AAC3BF,OAAO,CAACG,aAAa,GAAGA,aAAa;AACrC,IAAIC,KAAK,GAAGT,uBAAuB,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;AACrD;AACA,SAASO,aAAaA,CAACE,IAAI,EAAE;EAC3B,IAAI,OAAOA,IAAI,KAAK,QAAQ,IAAIA,IAAI,KAAK,IAAI,EAAE;IAC7C,OAAO,KAAK;EACd;EACA,MAAMC,SAAS,GAAGR,MAAM,CAACS,cAAc,CAACF,IAAI,CAAC;EAC7C,OAAO,CAACC,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAKR,MAAM,CAACQ,SAAS,IAAIR,MAAM,CAACS,cAAc,CAACD,SAAS,CAAC,KAAK,IAAI,KAAK,EAAEE,MAAM,CAACC,WAAW,IAAIJ,IAAI,CAAC,IAAI,EAAEG,MAAM,CAACE,QAAQ,IAAIL,IAAI,CAAC;AAC3K;AACA,SAASM,SAASA,CAACC,MAAM,EAAE;EACzB,KAAI,aAAaR,KAAK,CAACS,cAAc,CAACD,MAAM,CAAC,IAAI,CAACT,aAAa,CAACS,MAAM,CAAC,EAAE;IACvE,OAAOA,MAAM;EACf;EACA,MAAME,MAAM,GAAG,CAAC,CAAC;EACjBhB,MAAM,CAACiB,IAAI,CAACH,MAAM,CAAC,CAACI,OAAO,CAACC,GAAG,IAAI;IACjCH,MAAM,CAACG,GAAG,CAAC,GAAGN,SAAS,CAACC,MAAM,CAACK,GAAG,CAAC,CAAC;EACtC,CAAC,CAAC;EACF,OAAOH,MAAM;AACf;AACA,SAASZ,SAASA,CAACgB,MAAM,EAAEN,MAAM,EAE9B;EAAA,IAFgCO,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG;IAC3CG,KAAK,EAAE;EACT,CAAC;EACC,MAAMT,MAAM,GAAGK,OAAO,CAACI,KAAK,GAAG;IAC7B,GAAGL;EACL,CAAC,GAAGA,MAAM;EACV,IAAIf,aAAa,CAACe,MAAM,CAAC,IAAIf,aAAa,CAACS,MAAM,CAAC,EAAE;IAClDd,MAAM,CAACiB,IAAI,CAACH,MAAM,CAAC,CAACI,OAAO,CAACC,GAAG,IAAI;MACjC,KAAI,aAAab,KAAK,CAACS,cAAc,CAACD,MAAM,CAACK,GAAG,CAAC,CAAC,EAAE;QAClDH,MAAM,CAACG,GAAG,CAAC,GAAGL,MAAM,CAACK,GAAG,CAAC;MAC3B,CAAC,MAAM,IAAId,aAAa,CAACS,MAAM,CAACK,GAAG,CAAC,CAAC;MACrC;MACAnB,MAAM,CAACQ,SAAS,CAACkB,cAAc,CAACC,IAAI,CAACP,MAAM,EAAED,GAAG,CAAC,IAAId,aAAa,CAACe,MAAM,CAACD,GAAG,CAAC,CAAC,EAAE;QAC/E;QACAH,MAAM,CAACG,GAAG,CAAC,GAAGf,SAAS,CAACgB,MAAM,CAACD,GAAG,CAAC,EAAEL,MAAM,CAACK,GAAG,CAAC,EAAEE,OAAO,CAAC;MAC5D,CAAC,MAAM,IAAIA,OAAO,CAACI,KAAK,EAAE;QACxBT,MAAM,CAACG,GAAG,CAAC,GAAGd,aAAa,CAACS,MAAM,CAACK,GAAG,CAAC,CAAC,GAAGN,SAAS,CAACC,MAAM,CAACK,GAAG,CAAC,CAAC,GAAGL,MAAM,CAACK,GAAG,CAAC;MACjF,CAAC,MAAM;QACLH,MAAM,CAACG,GAAG,CAAC,GAAGL,MAAM,CAACK,GAAG,CAAC;MAC3B;IACF,CAAC,CAAC;EACJ;EACA,OAAOH,MAAM;AACf"},"metadata":{},"sourceType":"script","externalDependencies":[]}